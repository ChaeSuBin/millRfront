{"ast":null,"code":"export const onFileInputChange = (e, _setBuffer, _setFileInfo, setCheckA) => {\n  convertFile(e).then(result => {\n    console.log(result[0].length);\n  }); // if(e.target.files.length === fileByteArray.length){\n  //   setCheckA(true);\n  //   _setBuffer(fileByteArray);\n  //   _setFileInfo(fileInfo);\n  // }\n};\n\nconst convertFile = async e => {\n  const fileByteArray = [];\n  const fileInfo = [];\n  let fileNum = 0;\n\n  while (e.target.files.length > fileNum) {\n    const reader = new FileReader();\n    const fileBufferArray = [];\n    fileInfo.push({\n      name: e.target.files[fileNum].name,\n      type: e.target.files[fileNum].type,\n      size: e.target.files[fileNum].size\n    }); //console.log(e.target.files[fileNum]);\n\n    reader.readAsArrayBuffer(e.target.files[fileNum]);\n\n    reader.onloadend = _evt => {\n      if (_evt.target.readyState === FileReader.DONE) {\n        const arrayBuffer = _evt.target.result,\n              array = new Uint8Array(arrayBuffer);\n\n        for (const a of array) {\n          fileBufferArray.push(a);\n        }\n\n        fileByteArray.push(fileBufferArray);\n        console.log(fileByteArray.length);\n      }\n    };\n\n    ++fileNum;\n  }\n\n  return [fileByteArray, fileInfo];\n};","map":{"version":3,"names":["onFileInputChange","e","_setBuffer","_setFileInfo","setCheckA","convertFile","then","result","console","log","length","fileByteArray","fileInfo","fileNum","target","files","reader","FileReader","fileBufferArray","push","name","type","size","readAsArrayBuffer","onloadend","_evt","readyState","DONE","arrayBuffer","array","Uint8Array","a"],"sources":["/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToBuffer.js"],"sourcesContent":["\nexport const onFileInputChange = (e, _setBuffer, _setFileInfo, setCheckA) => {\n  \n  \n  convertFile(e).then(result => {\n    console.log(result[0].length);\n  })\n  // if(e.target.files.length === fileByteArray.length){\n    \n  //   setCheckA(true);\n  //   _setBuffer(fileByteArray);\n  //   _setFileInfo(fileInfo);\n  // }\n  \n}\nconst convertFile = async(e) => {\n  const fileByteArray = [];\n  const fileInfo = [];\n  let fileNum = 0;\n\n  while(e.target.files.length > fileNum){\n    const reader = new FileReader();\n    const fileBufferArray = [];\n        \n    fileInfo.push({\n      name: e.target.files[fileNum].name,\n      type: e.target.files[fileNum].type,\n      size: e.target.files[fileNum].size\n    })\n    //console.log(e.target.files[fileNum]);\n    reader.readAsArrayBuffer(e.target.files[fileNum]);\n    reader.onloadend = (_evt) => {\n      if (_evt.target.readyState === FileReader.DONE) {\n        const arrayBuffer = _evt.target.result,\n        array = new Uint8Array(arrayBuffer);\n        for (const a of array) {\n          fileBufferArray.push(a);\n        }\n        fileByteArray.push(fileBufferArray);\n        console.log(fileByteArray.length);\n      }\n    }\n    ++fileNum;\n  }\n  return [fileByteArray, fileInfo]\n}"],"mappings":"AACA,OAAO,MAAMA,iBAAiB,GAAG,CAACC,CAAD,EAAIC,UAAJ,EAAgBC,YAAhB,EAA8BC,SAA9B,KAA4C;EAG3EC,WAAW,CAACJ,CAAD,CAAX,CAAeK,IAAf,CAAoBC,MAAM,IAAI;IAC5BC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAtB;EACD,CAFD,EAH2E,CAM3E;EAEA;EACA;EACA;EACA;AAED,CAbM;;AAcP,MAAML,WAAW,GAAG,MAAMJ,CAAN,IAAY;EAC9B,MAAMU,aAAa,GAAG,EAAtB;EACA,MAAMC,QAAQ,GAAG,EAAjB;EACA,IAAIC,OAAO,GAAG,CAAd;;EAEA,OAAMZ,CAAC,CAACa,MAAF,CAASC,KAAT,CAAeL,MAAf,GAAwBG,OAA9B,EAAsC;IACpC,MAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;IACA,MAAMC,eAAe,GAAG,EAAxB;IAEAN,QAAQ,CAACO,IAAT,CAAc;MACZC,IAAI,EAAEnB,CAAC,CAACa,MAAF,CAASC,KAAT,CAAeF,OAAf,EAAwBO,IADlB;MAEZC,IAAI,EAAEpB,CAAC,CAACa,MAAF,CAASC,KAAT,CAAeF,OAAf,EAAwBQ,IAFlB;MAGZC,IAAI,EAAErB,CAAC,CAACa,MAAF,CAASC,KAAT,CAAeF,OAAf,EAAwBS;IAHlB,CAAd,EAJoC,CASpC;;IACAN,MAAM,CAACO,iBAAP,CAAyBtB,CAAC,CAACa,MAAF,CAASC,KAAT,CAAeF,OAAf,CAAzB;;IACAG,MAAM,CAACQ,SAAP,GAAoBC,IAAD,IAAU;MAC3B,IAAIA,IAAI,CAACX,MAAL,CAAYY,UAAZ,KAA2BT,UAAU,CAACU,IAA1C,EAAgD;QAC9C,MAAMC,WAAW,GAAGH,IAAI,CAACX,MAAL,CAAYP,MAAhC;QAAA,MACAsB,KAAK,GAAG,IAAIC,UAAJ,CAAeF,WAAf,CADR;;QAEA,KAAK,MAAMG,CAAX,IAAgBF,KAAhB,EAAuB;UACrBX,eAAe,CAACC,IAAhB,CAAqBY,CAArB;QACD;;QACDpB,aAAa,CAACQ,IAAd,CAAmBD,eAAnB;QACAV,OAAO,CAACC,GAAR,CAAYE,aAAa,CAACD,MAA1B;MACD;IACF,CAVD;;IAWA,EAAEG,OAAF;EACD;;EACD,OAAO,CAACF,aAAD,EAAgBC,QAAhB,CAAP;AACD,CA9BD"},"metadata":{},"sourceType":"module"}