{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/setMyNft.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getSymbol, getOwnedToken, getTokenUri } from '../utilityUnits/connMintService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SetMyNFT = _ref => {\n  _s();\n\n  let {\n    web3,\n    chainId\n  } = _ref;\n  const [toknList, setToknList] = useState([]);\n  const [toknUri, setToknUri] = useState([]);\n  useEffect(() => {}, []);\n\n  const getNftSymbol = async () => {\n    console.log(await getSymbol(web3));\n  };\n\n  const toknListViewer = async () => {\n    let toknUriArr = [];\n    const ownedArr = await getToknIdList(web3, chainId);\n    setToknList(ownedArr);\n\n    for (let fori = 0; fori < ownedArr.length; ++fori) {\n      toknUriArr.push(await getToknUri(web3, ownedArr[fori]));\n    }\n\n    setToknUri(toknUriArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"owend NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toknListViewer,\n      children: \"temp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), toknList, toknUri]\n  }, void 0, true);\n};\n\n_s(SetMyNFT, \"KE9Q1LJ6eWuyr7B3/jIvZ8vd5Z0=\");\n\n_c = SetMyNFT;\n\nconst getToknIdList = async (web3, _chainId) => {\n  const ownedArrStr = await getOwnedToken(web3, _chainId);\n\n  const f = function (a, b) {\n    return a - b;\n  };\n\n  const ownedArr = ownedArrStr.slice().sort(f); //.map(str => parseInt(str, 10))\n\n  return ownedArr;\n};\n\nconst getToknUri = async (web3, _toknId) => {\n  return await getTokenUri(web3, _toknId);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SetMyNFT\");","map":{"version":3,"names":["React","useState","useEffect","getSymbol","getOwnedToken","getTokenUri","SetMyNFT","web3","chainId","toknList","setToknList","toknUri","setToknUri","getNftSymbol","console","log","toknListViewer","toknUriArr","ownedArr","getToknIdList","fori","length","push","getToknUri","_chainId","ownedArrStr","f","a","b","slice","sort","_toknId"],"sources":["/home/giparang/threadweb/fortune/client/src/components/setMyNft.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getSymbol, getOwnedToken, getTokenUri } from '../utilityUnits/connMintService';\n\nexport const SetMyNFT = ({web3, chainId}) => {\n  const [toknList, setToknList] = useState([]);\n  const [toknUri, setToknUri] = useState([]);\n\n  useEffect(()=>{\n    \n  },[])\n  \n  const getNftSymbol = async() => {\n    console.log(await getSymbol(web3));\n  }\n  const toknListViewer = async() => {\n    let toknUriArr = [];\n\n    const ownedArr = await getToknIdList(web3, chainId);\n    setToknList(ownedArr);\n    \n    for(let fori = 0; fori < ownedArr.length; ++fori){\n      toknUriArr.push(await getToknUri(web3, ownedArr[fori]))\n    }\n    setToknUri(toknUriArr);\n  }\n\n  return(\n    <>\n      <h2>owend NFT</h2>\n      <button onClick={toknListViewer}>temp</button>\n      {toknList}\n      {toknUri}\n    </>\n  )\n}\n\nconst getToknIdList = async(web3, _chainId) => {\n    const ownedArrStr = await getOwnedToken(web3, _chainId);\n    const f = function (a, b) { return a - b }\n    const ownedArr = ownedArrStr.slice().sort(f);\n    //.map(str => parseInt(str, 10))\n    return ownedArr;\n  }\n  const getToknUri = async(web3, _toknId) => {\n    return await getTokenUri(web3, _toknId);\n  }"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,WAAnC,QAAsD,iCAAtD;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAACC,IAAD;IAAOC;EAAP,CAAoB;EAC3C,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;EAEAC,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMW,YAAY,GAAG,YAAW;IAC9BC,OAAO,CAACC,GAAR,CAAY,MAAMZ,SAAS,CAACI,IAAD,CAA3B;EACD,CAFD;;EAGA,MAAMS,cAAc,GAAG,YAAW;IAChC,IAAIC,UAAU,GAAG,EAAjB;IAEA,MAAMC,QAAQ,GAAG,MAAMC,aAAa,CAACZ,IAAD,EAAOC,OAAP,CAApC;IACAE,WAAW,CAACQ,QAAD,CAAX;;IAEA,KAAI,IAAIE,IAAI,GAAG,CAAf,EAAkBA,IAAI,GAAGF,QAAQ,CAACG,MAAlC,EAA0C,EAAED,IAA5C,EAAiD;MAC/CH,UAAU,CAACK,IAAX,CAAgB,MAAMC,UAAU,CAAChB,IAAD,EAAOW,QAAQ,CAACE,IAAD,CAAf,CAAhC;IACD;;IACDR,UAAU,CAACK,UAAD,CAAV;EACD,CAVD;;EAYA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAED,cAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGP,QAHH,EAIGE,OAJH;EAAA,gBADF;AAQD,CA/BM;;GAAML,Q;;KAAAA,Q;;AAiCb,MAAMa,aAAa,GAAG,OAAMZ,IAAN,EAAYiB,QAAZ,KAAyB;EAC3C,MAAMC,WAAW,GAAG,MAAMrB,aAAa,CAACG,IAAD,EAAOiB,QAAP,CAAvC;;EACA,MAAME,CAAC,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAAE,OAAOD,CAAC,GAAGC,CAAX;EAAc,CAA1C;;EACA,MAAMV,QAAQ,GAAGO,WAAW,CAACI,KAAZ,GAAoBC,IAApB,CAAyBJ,CAAzB,CAAjB,CAH2C,CAI3C;;EACA,OAAOR,QAAP;AACD,CANH;;AAOE,MAAMK,UAAU,GAAG,OAAMhB,IAAN,EAAYwB,OAAZ,KAAwB;EACzC,OAAO,MAAM1B,WAAW,CAACE,IAAD,EAAOwB,OAAP,CAAxB;AACD,CAFD"},"metadata":{},"sourceType":"module"}