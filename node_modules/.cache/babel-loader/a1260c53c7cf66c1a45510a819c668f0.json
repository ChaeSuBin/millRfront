{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/pages/createNft.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { onFileInputChange, getFiles } from \"../components/uploadFile\";\nimport { fileToHash } from '../components/fileToHash';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateNft = () => {\n  _s();\n\n  const [fileBuffer, setFileBuffer] = useState();\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHash] = useState([]);\n  useEffect(() => {\n    fileToHash(fileBuffer, setFileHash);\n  }, [fileInfo]);\n\n  const tempbtn = () => {\n    console.log('wow');\n  };\n\n  const fileHash = _fileNum => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: fileHashs[_fileNum]\n    }, void 0, false);\n  };\n\n  const FilesList = _eachfile => {\n    let te = 0;\n    ++te;\n    console.log(te);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [_eachfile.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), _eachfile.type, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputfile\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: onFileInputChange,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 102\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getFiles(setFileBuffer, setFileInfo),\n      children: \"set file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), fileInfo.map(uploadItems => /*#__PURE__*/_jsxDEV(FilesList, {\n      title: uploadItems.name,\n      type: uploadItems.type,\n      size: uploadItems.size\n    }, uploadItems.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), fileHashs.map(files => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: tempbtn,\n      children: \"tempbtn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateNft, \"EPUlBqQv9waZE35vpKjZq+xct6w=\");\n\n_c = CreateNft;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNft\");","map":{"version":3,"names":["React","useState","useEffect","onFileInputChange","getFiles","fileToHash","CreateNft","fileBuffer","setFileBuffer","fileInfo","setFileInfo","fileHashs","setFileHash","tempbtn","console","log","fileHash","_fileNum","FilesList","_eachfile","te","title","type","map","uploadItems","name","size","files"],"sources":["/home/giparang/threadweb/fortune/client/src/pages/createNft.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { onFileInputChange, getFiles } from \"../components/uploadFile\";\nimport { fileToHash } from '../components/fileToHash'\n\nexport const CreateNft = () => {\n\n  const [fileBuffer, setFileBuffer] = useState();\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHash] = useState([]);\n\n  useEffect(()=>{\n    fileToHash(fileBuffer, setFileHash);\n  },[fileInfo])\n  \n  const tempbtn = () => {\n    console.log('wow');\n  }\n\n  const fileHash = (_fileNum) => {\n    return(\n      <>\n       {fileHashs[_fileNum]}\n      </>\n    )\n  }\n  const FilesList = (_eachfile) => {\n    let te = 0;\n    ++te;\n    console.log(te);\n    return(\n      <>\n        <p>{_eachfile.title}\n          <br/>{_eachfile.type}\n          <br/>{}</p>\n      </>\n    )\n  }\n  return(\n    <div className=\"App\">\n      <p>extract</p>\n      <label className=\"inputfile\"><input type='file' onChange={onFileInputChange} multiple/></label><br/>\n      <button onClick={()=>getFiles(setFileBuffer, setFileInfo)}>set file</button>\n\n      {fileInfo.map(uploadItems => (\n        <FilesList\n          key={uploadItems.name}\n          title = {uploadItems.name}\n          type = {uploadItems.type}\n          size = {uploadItems.size}\n        />\n      ))}\n      {fileHashs.map(files => (\n        <p>{files}</p>\n      ))}\n      <button onClick={tempbtn}>tempbtn</button>\n    </div>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,0BAA5C;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAE7B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,EAA5C;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACU,SAAD,EAAYC,WAAZ,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;EAEAC,SAAS,CAAC,MAAI;IACZG,UAAU,CAACE,UAAD,EAAaK,WAAb,CAAV;EACD,CAFQ,EAEP,CAACH,QAAD,CAFO,CAAT;;EAIA,MAAMI,OAAO,GAAG,MAAM;IACpBC,OAAO,CAACC,GAAR,CAAY,KAAZ;EACD,CAFD;;EAIA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;IAC7B,oBACE;MAAA,UACEN,SAAS,CAACM,QAAD;IADX,iBADF;EAKD,CAND;;EAOA,MAAMC,SAAS,GAAIC,SAAD,IAAe;IAC/B,IAAIC,EAAE,GAAG,CAAT;IACA,EAAEA,EAAF;IACAN,OAAO,CAACC,GAAR,CAAYK,EAAZ;IACA,oBACE;MAAA,uBACE;QAAA,WAAID,SAAS,CAACE,KAAd,eACE;UAAA;UAAA;UAAA;QAAA,QADF,EACQF,SAAS,CAACG,IADlB,eAEE;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAOD,CAXD;;EAYA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,SAAS,EAAC,WAAjB;MAAA,uBAA6B;QAAO,IAAI,EAAC,MAAZ;QAAmB,QAAQ,EAAEnB,iBAA7B;QAAgD,QAAQ;MAAxD;QAAA;QAAA;QAAA;MAAA;IAA7B;MAAA;MAAA;MAAA;IAAA,QAFF,eAEiG;MAAA;MAAA;MAAA;IAAA,QAFjG,eAGE;MAAQ,OAAO,EAAE,MAAIC,QAAQ,CAACI,aAAD,EAAgBE,WAAhB,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,EAKGD,QAAQ,CAACc,GAAT,CAAaC,WAAW,iBACvB,QAAC,SAAD;MAEE,KAAK,EAAIA,WAAW,CAACC,IAFvB;MAGE,IAAI,EAAID,WAAW,CAACF,IAHtB;MAIE,IAAI,EAAIE,WAAW,CAACE;IAJtB,GACOF,WAAW,CAACC,IADnB;MAAA;MAAA;MAAA;IAAA,QADD,CALH,EAaGd,SAAS,CAACY,GAAV,CAAcI,KAAK,iBAClB;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QADD,CAbH,eAgBE;MAAQ,OAAO,EAAEd,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CArDM;;GAAMP,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}