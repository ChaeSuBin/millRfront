{"ast":null,"code":"import { getFileHash, SHA256 } from \"./SHA256\";\nexport const fileToHash = (_fileBuffer, setFileHash) => {\n  let fileNum = 0;\n  let fileHashArr = [];\n  do {\n    console.log('processing...');\n    fileHashArr.push(getFileHash(_fileBuffer[fileNum].join('')));\n    ++fileNum;\n  } while (_fileBuffer.length > fileNum);\n  console.log('-done-');\n  setFileHash(fileHashArr);\n  return fileHashArr;\n};\nexport const setFinalHash = str => {\n  const finalHash = SHA256(str);\n  return finalHash;\n};","map":{"version":3,"names":["getFileHash","SHA256","fileToHash","_fileBuffer","setFileHash","fileNum","fileHashArr","console","log","push","join","length","setFinalHash","str","finalHash"],"sources":["/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToHash.js"],"sourcesContent":["import { getFileHash, SHA256 } from \"./SHA256\";\n\nexport const fileToHash = (_fileBuffer, setFileHash) => {\n  let fileNum = 0\n  let fileHashArr = [];\n  \n  do {\n    console.log('processing...');\n    fileHashArr.push(getFileHash(_fileBuffer[fileNum].join('')));\n    ++fileNum;\n  } while (_fileBuffer.length > fileNum);\n  console.log('-done-');\n\n  setFileHash(fileHashArr);\n  return(fileHashArr);\n}\n\nexport const setFinalHash = (str) => {\n  const finalHash = SHA256(str);\n  return finalHash;\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,UAAU;AAE9C,OAAO,MAAMC,UAAU,GAAG,CAACC,WAAW,EAAEC,WAAW,KAAK;EACtD,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,WAAW,GAAG,EAAE;EAEpB,GAAG;IACDC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BF,WAAW,CAACG,IAAI,CAACT,WAAW,CAACG,WAAW,CAACE,OAAO,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5D,EAAEL,OAAO;EACX,CAAC,QAAQF,WAAW,CAACQ,MAAM,GAAGN,OAAO;EACrCE,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EAErBJ,WAAW,CAACE,WAAW,CAAC;EACxB,OAAOA,WAAW;AACpB,CAAC;AAED,OAAO,MAAMM,YAAY,GAAIC,GAAG,IAAK;EACnC,MAAMC,SAAS,GAAGb,MAAM,CAACY,GAAG,CAAC;EAC7B,OAAOC,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}