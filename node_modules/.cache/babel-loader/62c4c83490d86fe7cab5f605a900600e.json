{"ast":null,"code":"//import filestream from \"fs\";\nexport const getFileHash = _fileBuffer => {\n  return SHA256(\"_fileBuffer\");\n};\n\nfunction SHA256(s) {\n  var chrsz = 8;\n  var hexcase = 0;\n\n  function safe_add(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return msw << 16 | lsw & 0xFFFF;\n  }\n\n  function S(X, n) {\n    return X >>> n | X << 32 - n;\n  }\n\n  function R(X, n) {\n    return X >>> n;\n  }\n\n  function Ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n\n  function Maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n\n  function Sigma0256(x) {\n    return S(x, 2) ^ S(x, 13) ^ S(x, 22);\n  }\n\n  function Sigma1256(x) {\n    return S(x, 6) ^ S(x, 11) ^ S(x, 25);\n  }\n\n  function Gamma0256(x) {\n    return S(x, 7) ^ S(x, 18) ^ R(x, 3);\n  }\n\n  function Gamma1256(x) {\n    return S(x, 17) ^ S(x, 19) ^ R(x, 10);\n  }\n\n  function core_sha256(m, l) {\n    var K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);\n    var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);\n    var W = new Array(64);\n    var a, b, c, d, e, f, g, h, i, j;\n    var T1, T2;\n    m[l >> 5] |= 0x80 << 24 - l % 32;\n    m[(l + 64 >> 9 << 4) + 15] = l;\n\n    for (var i = 0; i < m.length; i += 16) {\n      a = HASH[0];\n      b = HASH[1];\n      c = HASH[2];\n      d = HASH[3];\n      e = HASH[4];\n      f = HASH[5];\n      g = HASH[6];\n      h = HASH[7];\n\n      for (var j = 0; j < 64; j++) {\n        if (j < 16) W[j] = m[j + i];else W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\n        T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\n        T2 = safe_add(Sigma0256(a), Maj(a, b, c));\n        h = g;\n        g = f;\n        f = e;\n        e = safe_add(d, T1);\n        d = c;\n        c = b;\n        b = a;\n        a = safe_add(T1, T2);\n      }\n\n      HASH[0] = safe_add(a, HASH[0]);\n      HASH[1] = safe_add(b, HASH[1]);\n      HASH[2] = safe_add(c, HASH[2]);\n      HASH[3] = safe_add(d, HASH[3]);\n      HASH[4] = safe_add(e, HASH[4]);\n      HASH[5] = safe_add(f, HASH[5]);\n      HASH[6] = safe_add(g, HASH[6]);\n      HASH[7] = safe_add(h, HASH[7]);\n    }\n\n    return HASH;\n  }\n\n  function str2binb(str) {\n    var bin = Array();\n    var mask = (1 << chrsz) - 1;\n\n    for (var i = 0; i < str.length * chrsz; i += chrsz) {\n      bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << 24 - i % 32;\n    }\n\n    return bin;\n  }\n\n  function Utf8Encode(string) {\n    string = string.replace(/\\r\\n/g, \"\\n\");\n    var utftext = \"\";\n\n    for (var n = 0; n < string.length; n++) {\n      var c = string.charCodeAt(n);\n\n      if (c < 128) {\n        utftext += String.fromCharCode(c);\n      } else if (c > 127 && c < 2048) {\n        utftext += String.fromCharCode(c >> 6 | 192);\n        utftext += String.fromCharCode(c & 63 | 128);\n      } else {\n        utftext += String.fromCharCode(c >> 12 | 224);\n        utftext += String.fromCharCode(c >> 6 & 63 | 128);\n        utftext += String.fromCharCode(c & 63 | 128);\n      }\n    }\n\n    return utftext;\n  }\n\n  function binb2hex(binarray) {\n    var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n    var str = \"\";\n\n    for (var i = 0; i < binarray.length * 4; i++) {\n      str += hex_tab.charAt(binarray[i >> 2] >> (3 - i % 4) * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> (3 - i % 4) * 8 & 0xF);\n    }\n\n    return str;\n  }\n\n  s = Utf8Encode(s);\n  return binb2hex(core_sha256(str2binb(s), s.length * chrsz));\n}\n\n_c = SHA256;\n\nvar _c;\n\n$RefreshReg$(_c, \"SHA256\");","map":{"version":3,"names":["getFileHash","_fileBuffer","SHA256","s","chrsz","hexcase","safe_add","x","y","lsw","msw","S","X","n","R","Ch","z","Maj","Sigma0256","Sigma1256","Gamma0256","Gamma1256","core_sha256","m","l","K","Array","HASH","W","a","b","c","d","e","f","g","h","i","j","T1","T2","length","str2binb","str","bin","mask","charCodeAt","Utf8Encode","string","replace","utftext","String","fromCharCode","binb2hex","binarray","hex_tab","charAt"],"sources":["/home/giparang/threadweb/fortune/client/src/components/SHA256.js"],"sourcesContent":["//import filestream from \"fs\";\n\nexport const getFileHash = (_fileBuffer) => {\n    return SHA256(\"_fileBuffer\");\n}\n\nfunction SHA256(s){\n    var chrsz   = 8;\n    var hexcase = 0;\n  \n    function safe_add (x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    }\n  \n    function S (X, n) { return ( X >>> n ) | (X << (32 - n)); }\n    function R (X, n) { return ( X >>> n ); }\n    function Ch(x, y, z) { return ((x & y) ^ ((~x) & z)); }\n    function Maj(x, y, z) { return ((x & y) ^ (x & z) ^ (y & z)); }\n    function Sigma0256(x) { return (S(x, 2) ^ S(x, 13) ^ S(x, 22)); }\n    function Sigma1256(x) { return (S(x, 6) ^ S(x, 11) ^ S(x, 25)); }\n    function Gamma0256(x) { return (S(x, 7) ^ S(x, 18) ^ R(x, 3)); }\n    function Gamma1256(x) { return (S(x, 17) ^ S(x, 19) ^ R(x, 10)); }\n  \n    function core_sha256 (m, l) {\n         \n        var K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1,\n            0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n            0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786,\n            0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n            0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147,\n            0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n            0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B,\n            0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n            0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A,\n            0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n            0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);\n\n        var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);\n\n        var W = new Array(64);\n        var a, b, c, d, e, f, g, h, i, j;\n        var T1, T2;\n  \n        m[l >> 5] |= 0x80 << (24 - l % 32);\n        m[((l + 64 >> 9) << 4) + 15] = l;\n  \n        for ( var i = 0; i<m.length; i+=16 ) {\n            a = HASH[0];\n            b = HASH[1];\n            c = HASH[2];\n            d = HASH[3];\n            e = HASH[4];\n            f = HASH[5];\n            g = HASH[6];\n            h = HASH[7];\n  \n            for ( var j = 0; j<64; j++) {\n                if (j < 16) W[j] = m[j + i];\n                else W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\n  \n                T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\n                T2 = safe_add(Sigma0256(a), Maj(a, b, c));\n  \n                h = g;\n                g = f;\n                f = e;\n                e = safe_add(d, T1);\n                d = c;\n                c = b;\n                b = a;\n                a = safe_add(T1, T2);\n            }\n  \n            HASH[0] = safe_add(a, HASH[0]);\n            HASH[1] = safe_add(b, HASH[1]);\n            HASH[2] = safe_add(c, HASH[2]);\n            HASH[3] = safe_add(d, HASH[3]);\n            HASH[4] = safe_add(e, HASH[4]);\n            HASH[5] = safe_add(f, HASH[5]);\n            HASH[6] = safe_add(g, HASH[6]);\n            HASH[7] = safe_add(h, HASH[7]);\n        }\n        return HASH;\n    }\n  \n    function str2binb (str) {\n        var bin = Array();\n        var mask = (1 << chrsz) - 1;\n        for(var i = 0; i < str.length * chrsz; i += chrsz) {\n            bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i%32);\n        }\n        return bin;\n    }\n  \n    function Utf8Encode(string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n  \n        for (var n = 0; n < string.length; n++) {\n  \n            var c = string.charCodeAt(n);\n  \n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n  \n        }\n  \n        return utftext;\n    }\n  \n    function binb2hex (binarray) {\n        var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n        var str = \"\";\n        for(var i = 0; i < binarray.length * 4; i++) {\n            str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\n            hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\n        }\n        return str;\n    }\n  \n    s = Utf8Encode(s);\n    return binb2hex(core_sha256(str2binb(s), s.length * chrsz));\n  \n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}