{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/mintItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getChainId } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MintItemCpnt = _ref => {\n  _s();\n\n  let {\n    web3,\n    toknUri\n  } = _ref;\n  const cid = sessionStorage.getItem('chainid');\n  const [PRIVATE_KEY, setPrivKey] = useState(null);\n\n  const tempb = () => {\n    console.log(cid);\n    console.log(PRIVATE_KEY);\n    console.log(toknUri);\n    console.log(web3);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: tempb,\n      children: \"tempb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"private Key: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"input your private key to mint nft\",\n        onChange: evt => setPrivKey(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MintItemCpnt, \"0beU1ghRJEWJIBGCG0CRQTJ2ARU=\");\n\n_c = MintItemCpnt;\n\nvar _c;\n\n$RefreshReg$(_c, \"MintItemCpnt\");","map":{"version":3,"names":["React","useState","useEffect","getChainId","MintItemCpnt","web3","toknUri","cid","sessionStorage","getItem","PRIVATE_KEY","setPrivKey","tempb","console","log","evt","target","value"],"sources":["/home/giparang/threadweb/fortune/client/src/components/mintItem.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getChainId } from '../api';\n\nexport const MintItemCpnt = ({web3, toknUri}) => {\n  const cid = sessionStorage.getItem('chainid');\n  const [PRIVATE_KEY, setPrivKey] = useState(null);\n\n  const tempb = () => {\n    console.log(cid);\n    console.log(PRIVATE_KEY);\n    console.log(toknUri);\n    console.log(web3);\n  }\n  return(\n    <>\n    <button onClick={tempb}>tempb</button>\n    <h5>private Key: <input placeholder='input your private key to mint nft' onChange={(evt)=>setPrivKey(evt.target.value)}/></h5>\n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAACC,IAAD;IAAOC;EAAP,CAAoB;EAC/C,MAAMC,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAZ;EACA,MAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;;EAEA,MAAMW,KAAK,GAAG,MAAM;IAClBC,OAAO,CAACC,GAAR,CAAYP,GAAZ;IACAM,OAAO,CAACC,GAAR,CAAYJ,WAAZ;IACAG,OAAO,CAACC,GAAR,CAAYR,OAAZ;IACAO,OAAO,CAACC,GAAR,CAAYT,IAAZ;EACD,CALD;;EAMA,oBACE;IAAA,wBACA;MAAQ,OAAO,EAAEO,KAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA,yCAAiB;QAAO,WAAW,EAAC,oCAAnB;QAAwD,QAAQ,EAAGG,GAAD,IAAOJ,UAAU,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ;MAAnF;QAAA;QAAA;QAAA;MAAA,QAAjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADF;AAMD,CAhBM;;GAAMb,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}