{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/pages/createNft.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { onFileInputChange, getFiles } from \"../components/uploadFile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateNft = () => {\n  _s();\n\n  const [fileBuffer, setFileBuffer] = useState();\n  const [fileInfo, setFileInfo] = useState([]);\n\n  const FilesList = (_title, _type, _size) => {\n    console.log(_title);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: _title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const tempbtn = () => {\n    console.log(fileInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputfile\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: onFileInputChange,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 102\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getFiles(setFileBuffer, setFileInfo),\n      children: \"set file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: tempbtn,\n      children: \"tempbtn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), fileInfo.map(uploadItems => /*#__PURE__*/_jsxDEV(FilesList, {\n      title: uploadItems.name,\n      type: uploadItems.type,\n      size: uploadItems.size\n    }, uploadItems.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateNft, \"chzUyC7QpXV39GQGHiczJ9vnzEI=\");\n\n_c = CreateNft;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNft\");","map":{"version":3,"names":["React","useState","onFileInputChange","getFiles","CreateNft","fileBuffer","setFileBuffer","fileInfo","setFileInfo","FilesList","_title","_type","_size","console","log","tempbtn","map","uploadItems","name","type","size"],"sources":["/home/giparang/threadweb/fortune/client/src/pages/createNft.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { onFileInputChange, getFiles } from \"../components/uploadFile\";\n\nexport const CreateNft = () => {\n  \n  const [fileBuffer, setFileBuffer] = useState();\n  const [fileInfo, setFileInfo] = useState([]);\n\n  const FilesList = (_title, _type, _size) => {\n    console.log(_title);\n    return(\n      <>\n        <p>{_title}</p>\n      </>\n    )\n  }\n  const tempbtn = () => {\n      console.log(fileInfo);\n  }\n  return(\n    <div className=\"App\">\n      <p>extract</p>\n      <label className=\"inputfile\"><input type='file' onChange={onFileInputChange} multiple/></label><br/>\n      <button onClick={()=>getFiles(setFileBuffer, setFileInfo)}>set file</button>\n      <button onClick={tempbtn}>tempbtn</button>\n      {fileInfo.map(uploadItems => (\n        <FilesList\n          key={uploadItems.name}\n          title = {uploadItems.name}\n          type = {uploadItems.type}\n          size = {uploadItems.size}\n        />\n      ))}\n    </div>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,0BAA5C;;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAE7B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,EAA5C;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMQ,SAAS,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB,KAA0B;IAC1CC,OAAO,CAACC,GAAR,CAAYJ,MAAZ;IACA,oBACE;MAAA,uBACE;QAAA,UAAIA;MAAJ;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAKD,CAPD;;EAQA,MAAMK,OAAO,GAAG,MAAM;IAClBF,OAAO,CAACC,GAAR,CAAYP,QAAZ;EACH,CAFD;;EAGA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,SAAS,EAAC,WAAjB;MAAA,uBAA6B;QAAO,IAAI,EAAC,MAAZ;QAAmB,QAAQ,EAAEL,iBAA7B;QAAgD,QAAQ;MAAxD;QAAA;QAAA;QAAA;MAAA;IAA7B;MAAA;MAAA;MAAA;IAAA,QAFF,eAEiG;MAAA;MAAA;MAAA;IAAA,QAFjG,eAGE;MAAQ,OAAO,EAAE,MAAIC,QAAQ,CAACG,aAAD,EAAgBE,WAAhB,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,OAAO,EAAEO,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,EAKGR,QAAQ,CAACS,GAAT,CAAaC,WAAW,iBACvB,QAAC,SAAD;MAEE,KAAK,EAAIA,WAAW,CAACC,IAFvB;MAGE,IAAI,EAAID,WAAW,CAACE,IAHtB;MAIE,IAAI,EAAIF,WAAW,CAACG;IAJtB,GACOH,WAAW,CAACC,IADnB;MAAA;MAAA;MAAA;IAAA,QADD,CALH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAhCM;;GAAMd,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}