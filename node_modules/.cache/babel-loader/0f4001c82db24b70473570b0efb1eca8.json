{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/setMyNft.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getItemsIdList, getOwnedItems, getUserId } from '../api';\nimport { getSymbol, getTokenUri, getTokenStatus } from '../utilityUnits/connMintService';\nimport { ListItemsCpnt } from './itemCpnt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SetMyNFT = _ref => {\n  _s();\n\n  let {\n    chainId\n  } = _ref;\n  const [toknList, setToknList] = useState([]);\n  const [itemList, setItemList] = useState([]);\n  const [toknStatus, setStatus] = useState([]);\n  useEffect(() => {\n    toknListViewer();\n  }, []);\n\n  const toknListViewer = async () => {\n    let itemInfoArr = [{\n      title: null,\n      hash: null\n    }];\n    getUserId(chainId).then(userId => {\n      getOwnedItems(userId).then(result => {\n        let itemLen = result.length;\n\n        do {\n          --itemLen;\n          let title = result[itemLen].title;\n          let hash = result[itemLen].hash;\n          itemInfoArr[itemLen] = {\n            title: title,\n            hash: hash\n          };\n          getToknList(userId, hash);\n        } while (itemLen > 0);\n\n        setItemList(itemInfoArr);\n      });\n    });\n  };\n\n  const getToknList = async (_userId, _itemHash) => {\n    let toknIdArr = [];\n    getItemsIdList(_userId, _itemHash).then(result => {\n      result.map(tokenId => {\n        toknIdArr.push(tokenId.toknid);\n      });\n      console.log(toknIdArr); //setToknList.push(toknIdArr);\n    });\n  };\n\n  const getToknStatus = async _toknId => {\n    const toknStatus = await getTokenStatus(_toknId);\n    let count = 0; //console.log(typeof toknStatus[0]);\n\n    do {\n      toknStatus[0] /= 100;\n      ++count;\n    } while (count < 9);\n\n    if (toknStatus[0] != 0) return `${toknStatus[0]} MATIC`;else return 'not for sale';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"owend NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), itemList.map((searchItems, index) => /*#__PURE__*/_jsxDEV(ListItemsCpnt, {\n      title: searchItems.title,\n      toknList: toknList[index]\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}; // const getToknIdList = async(_chainId) => {\n//   const f = function (a, b) { return a - b }\n//   const toknIdArrStr = await getOwnedToken(_chainId);\n//   const ownedArr = toknIdArrStr.slice().sort(f);\n//   //.map(str => parseInt(str, 10))\n//   return ownedArr;\n// }\n\n_s(SetMyNFT, \"nZGm9qYOfJmTcFyUW0PyVXdQZOU=\");\n\n_c = SetMyNFT;\n\nconst getToknUri = async _toknId => {\n  return await getTokenUri(_toknId);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SetMyNFT\");","map":{"version":3,"names":["React","useState","useEffect","getItemsIdList","getOwnedItems","getUserId","getSymbol","getTokenUri","getTokenStatus","ListItemsCpnt","SetMyNFT","chainId","toknList","setToknList","itemList","setItemList","toknStatus","setStatus","toknListViewer","itemInfoArr","title","hash","then","userId","result","itemLen","length","getToknList","_userId","_itemHash","toknIdArr","map","tokenId","push","toknid","console","log","getToknStatus","_toknId","count","searchItems","index","getToknUri"],"sources":["/home/giparang/threadweb/fortune/client/src/components/setMyNft.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getItemsIdList, getOwnedItems, getUserId } from '../api';\nimport { \n    getSymbol, \n    getTokenUri, \n    getTokenStatus,\n} from '../utilityUnits/connMintService';\nimport { ListItemsCpnt } from './itemCpnt';\n\nexport const SetMyNFT = ({chainId}) => {\n  \n  const [toknList, setToknList] = useState([]);\n  const [itemList, setItemList] = useState([]);\n  const [toknStatus, setStatus] = useState([]);\n\n  useEffect(()=>{\n    toknListViewer();\n  },[])\n\n\n  const toknListViewer = async() => {\n    let itemInfoArr = [{title: null, hash: null}];\n\n    getUserId(chainId).then(userId => {\n      getOwnedItems(userId).then(result => {\n        let itemLen = result.length;\n        do{\n          --itemLen;\n          let title = result[itemLen].title;\n          let hash = result[itemLen].hash;\n          itemInfoArr[itemLen] = {title: title, hash: hash};\n          getToknList(userId, hash);\n        }while(itemLen > 0)\n        setItemList(itemInfoArr);\n      })\n    })\n  }\n  const getToknList = async(_userId, _itemHash) => {\n    let toknIdArr = [];\n    getItemsIdList(_userId, _itemHash).then(result => {\n      result.map(tokenId => {\n        toknIdArr.push(tokenId.toknid);\n      })\n      console.log(toknIdArr);\n      //setToknList.push(toknIdArr);\n    })\n  }\n  \n  const getToknStatus = async(_toknId) => {\n    const toknStatus = await getTokenStatus(_toknId);\n    let count = 0;\n    //console.log(typeof toknStatus[0]);\n    do{\n      toknStatus[0] /= 100;\n      ++count;\n    }while(count < 9)\n    \n    if(toknStatus[0] != 0)\n      return `${toknStatus[0]} MATIC`;\n    else\n      return 'not for sale';\n  }\n\n  return(\n    <>\n      <h2>owend NFT</h2>\n      {itemList.map((searchItems, index) => (\n        <ListItemsCpnt\n          key={index}\n          title={searchItems.title}\n          toknList={toknList[index]}\n        />\n      ))}\n    </>\n  )\n}\n// const getToknIdList = async(_chainId) => {\n//   const f = function (a, b) { return a - b }\n//   const toknIdArrStr = await getOwnedToken(_chainId);\n//   const ownedArr = toknIdArrStr.slice().sort(f);\n//   //.map(str => parseInt(str, 10))\n//   return ownedArr;\n// }\nconst getToknUri = async(_toknId) => {\n  return await getTokenUri(_toknId);\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}