{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/setMyNft.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { setContractA } from '../utilityUnits/connMintService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SetMyNFT = _ref => {\n  _s();\n\n  let {\n    web3,\n    chainId\n  } = _ref;\n  const [mintService, setMintService] = useState();\n  const [netChainId, setNetworkId] = useState();\n  useEffect(() => {\n    connContract();\n  }, []);\n\n  const connContract = () => {\n    setContractA(web3).then(contractA => {\n      setMintService(contractA[0]);\n      setNetworkId(contractA[1]);\n    });\n  };\n\n  const getSymbol = () => {\n    mintService.methods.symbol().call().then(symbol => {\n      console.log('Tokn Symbol: ', symbol);\n    }, err => {\n      console.log('err: ', err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"owend NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getSymbol,\n      children: \"temp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SetMyNFT, \"oz9BsBtNmY1t5OVpWFMj7/in9zo=\");\n\n_c = SetMyNFT;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetMyNFT\");","map":{"version":3,"names":["React","useState","useEffect","setContractA","SetMyNFT","web3","chainId","mintService","setMintService","netChainId","setNetworkId","connContract","then","contractA","getSymbol","methods","symbol","call","console","log","err"],"sources":["/home/giparang/threadweb/fortune/client/src/components/setMyNft.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { setContractA } from '../utilityUnits/connMintService';\n\nexport const SetMyNFT = ({web3, chainId}) => {\n  const [mintService, setMintService] = useState();\n  const [netChainId, setNetworkId] = useState();\n\n  useEffect(()=>{\n    connContract();\n  },[])\n\n  const connContract = () => {\n      setContractA(web3).then(contractA => {\n      setMintService(contractA[0]);\n      setNetworkId(contractA[1]);\n    })\n  }\n  \n  const getSymbol = () => {\n    mintService.methods.symbol().call().then(\n      symbol => {\n        console.log('Tokn Symbol: ', symbol);\n    },err => { \n      console.log('err: ', err); \n    })\n  }\n\n  return(\n    <>\n      <h2>owend NFT</h2>\n      <button onClick={getSymbol}>temp</button>\n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,iCAA7B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAACC,IAAD;IAAOC;EAAP,CAAoB;EAC3C,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;EACA,MAAM,CAACQ,UAAD,EAAaC,YAAb,IAA6BT,QAAQ,EAA3C;EAEAC,SAAS,CAAC,MAAI;IACZS,YAAY;EACb,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMA,YAAY,GAAG,MAAM;IACvBR,YAAY,CAACE,IAAD,CAAZ,CAAmBO,IAAnB,CAAwBC,SAAS,IAAI;MACrCL,cAAc,CAACK,SAAS,CAAC,CAAD,CAAV,CAAd;MACAH,YAAY,CAACG,SAAS,CAAC,CAAD,CAAV,CAAZ;IACD,CAHC;EAIH,CALD;;EAOA,MAAMC,SAAS,GAAG,MAAM;IACtBP,WAAW,CAACQ,OAAZ,CAAoBC,MAApB,GAA6BC,IAA7B,GAAoCL,IAApC,CACEI,MAAM,IAAI;MACRE,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,MAA7B;IACH,CAHD,EAGEI,GAAG,IAAI;MACPF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,GAArB;IACD,CALD;EAMD,CAPD;;EASA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEN,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD,CA9BM;;GAAMV,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}