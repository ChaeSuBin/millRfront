{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/pages/itemDtail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getItemFiles, getItemInfo } from '../components/detailPages/setItemIDX';\nimport { FileListViewer } from '../components/detailPages/fileListViewer';\nimport { getItemId } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ItemDetail = () => {\n  _s();\n\n  const FROM_ADDR = sessionStorage.getItem('chainid');\n  const locate = useParams();\n  const [itemInfo, setII] = useState({\n    title: '',\n    desc: ''\n  });\n  const [fileList, setFlist] = useState([]);\n  useEffect(() => {\n    currentMode(locate.id, locate.mode);\n  }, []);\n\n  const currentMode = (_rowId, _mode) => {\n    if (_mode === 'item') modeIgetInfo(_rowId);else console.log('kko');\n  };\n\n  const modeIgetInfo = async _rowId => {\n    const itemInfo = await getItemInfo(_rowId);\n    setII(itemInfo);\n    const fileList = await getItemFiles(itemInfo.hash);\n    setFlist(fileList);\n  };\n\n  const tempbtn = () => {\n    console.log(itemInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: tempbtn,\n      children: \"buttonA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"title: \", itemInfo.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), fileList.map((searchItems, index) => /*#__PURE__*/_jsxDEV(FileListViewer, {\n      fileName: searchItems,\n      toknUri: itemInfo.hash,\n      permission: true\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ItemDetail, \"S1gDKSNLX4bh3/za6yjl32WfXxY=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getItemFiles","getItemInfo","FileListViewer","getItemId","ItemDetail","FROM_ADDR","sessionStorage","getItem","locate","itemInfo","setII","title","desc","fileList","setFlist","currentMode","id","mode","_rowId","_mode","modeIgetInfo","console","log","hash","tempbtn","map","searchItems","index"],"sources":["/home/giparang/threadweb/fortune/client/src/pages/itemDtail.js"],"sourcesContent":["import React, { useEffect, useState }from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getItemFiles, getItemInfo } from '../components/detailPages/setItemIDX';\nimport { FileListViewer } from'../components/detailPages/fileListViewer';\nimport { getItemId } from '../api';\n\nexport const  ItemDetail = () => {\n  const FROM_ADDR = sessionStorage.getItem('chainid');\n  const locate = useParams();\n  const [itemInfo, setII] = useState({title: '', desc: ''});\n  const [fileList, setFlist] = useState([]);\n  \n  useEffect(() => {\n    currentMode(locate.id, locate.mode);\n  },[])\n\n  const currentMode = (_rowId, _mode) => {\n    if(_mode === 'item')\n      modeIgetInfo(_rowId);\n    else\n      console.log('kko');\n  }\n  const modeIgetInfo = async(_rowId) => {\n    const itemInfo = await getItemInfo(_rowId);\n    setII(itemInfo);\n    const fileList = await getItemFiles(itemInfo.hash);\n    setFlist(fileList);\n  }\n\n  const tempbtn = () => {\n    console.log(itemInfo);\n  }\n  return (\n  <><br/><br/>\n    <button onClick={tempbtn}>buttonA</button>\n    <h3>title: {itemInfo.title}</h3>\n    {fileList.map((searchItems, index) => (\n      <FileListViewer\n        key={index}\n        fileName={searchItems}\n        toknUri = {itemInfo.hash}\n        permission = {true}\n      />\n    ))}\n  <br/><br/></>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,sCAA1C;AACA,SAASC,cAAT,QAA8B,0CAA9B;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,OAAO,MAAOC,UAAU,GAAG,MAAM;EAAA;;EAC/B,MAAMC,SAAS,GAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAlB;EACA,MAAMC,MAAM,GAAGT,SAAS,EAAxB;EACA,MAAM,CAACU,QAAD,EAAWC,KAAX,IAAoBZ,QAAQ,CAAC;IAACa,KAAK,EAAE,EAAR;IAAYC,IAAI,EAAE;EAAlB,CAAD,CAAlC;EACA,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBhB,QAAQ,CAAC,EAAD,CAArC;EAEAD,SAAS,CAAC,MAAM;IACdkB,WAAW,CAACP,MAAM,CAACQ,EAAR,EAAYR,MAAM,CAACS,IAAnB,CAAX;EACD,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMF,WAAW,GAAG,CAACG,MAAD,EAASC,KAAT,KAAmB;IACrC,IAAGA,KAAK,KAAK,MAAb,EACEC,YAAY,CAACF,MAAD,CAAZ,CADF,KAGEG,OAAO,CAACC,GAAR,CAAY,KAAZ;EACH,CALD;;EAMA,MAAMF,YAAY,GAAG,MAAMF,MAAN,IAAiB;IACpC,MAAMT,QAAQ,GAAG,MAAMR,WAAW,CAACiB,MAAD,CAAlC;IACAR,KAAK,CAACD,QAAD,CAAL;IACA,MAAMI,QAAQ,GAAG,MAAMb,YAAY,CAACS,QAAQ,CAACc,IAAV,CAAnC;IACAT,QAAQ,CAACD,QAAD,CAAR;EACD,CALD;;EAOA,MAAMW,OAAO,GAAG,MAAM;IACpBH,OAAO,CAACC,GAAR,CAAYb,QAAZ;EACD,CAFD;;EAGA,oBACA;IAAA,wBAAE;MAAA;MAAA;MAAA;IAAA,QAAF,eAAO;MAAA;MAAA;MAAA;IAAA,QAAP,eACE;MAAQ,OAAO,EAAEe,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,sBAAYf,QAAQ,CAACE,KAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGE,QAAQ,CAACY,GAAT,CAAa,CAACC,WAAD,EAAcC,KAAd,kBACZ,QAAC,cAAD;MAEE,QAAQ,EAAED,WAFZ;MAGE,OAAO,EAAIjB,QAAQ,CAACc,IAHtB;MAIE,UAAU,EAAI;IAJhB,GACOI,KADP;MAAA;MAAA;MAAA;IAAA,QADD,CAHH,eAWA;MAAA;MAAA;MAAA;IAAA,QAXA,eAWK;MAAA;MAAA;MAAA;IAAA,QAXL;EAAA,gBADA;AAcD,CAxCM;;GAAOvB,U;UAEGL,S;;;KAFHK,U"},"metadata":{},"sourceType":"module"}