{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/createChainId.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './modal.css';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postRegiPlayer } from '../api';\nimport { SHA256 } from '../utilityUnits/SHA256';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateChainId = _ref => {\n  _s();\n  let {\n    uid,\n    web3\n  } = _ref;\n  const navigate = useNavigate();\n  const [showFlag, setFlag] = useState(false);\n  const [chainAccount, setAccount] = useState([]);\n  const [priv, setPriv] = useState();\n  const createAccount = async () => {\n    let accountKey = [];\n    const account = web3.eth.accounts.create();\n    accountKey.push(account.address);\n    accountKey.push(account.privateKey);\n    setAccount(accountKey);\n    setFlag(true);\n  };\n  const doneBtn = () => {\n    if (chainAccount[1] === priv) {\n      const hPass = SHA256(chainAccount[1]);\n      const record = {\n        userId: uid,\n        pass: hPass,\n        addr: chainAccount[0]\n      };\n      postRegiPlayer(record).then(result => {\n        if (result === true) {\n          alert('복사한 비밀키는 잊어버리지 않도록 다른곳에 반드시 저장하십시오');\n          sessionStorage.clear();\n          navigate('/signinpage');\n        }\n      });\n    } else alert('PRIVATE KEY 를 정확히 입력하여 주십시오');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showFlag ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF89Successfuly Created\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 32\n        }, this), \"CHAIN ID: \", chainAccount[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 43\n        }, this), \"PRIVATE KEY: \", chainAccount[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 46\n        }, this), \"\\uBE44\\uBC00\\uD0A4\\uB294 \\uBD84\\uC2E4 \\uC2DC \\uB418\\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }, this), \"\\uBC18\\uB4DC\\uC2DC \\uBA54\\uBAA8\\uC7A5 \\uB4F1 \\uC790\\uC2E0\\uB9CC\\uC774 \\uC54C \\uC218 \\uC788\\uB294 \\uACF3\\uC5D0 \\uC62E\\uACA8 \\uC800\\uC7A5\\uD558\\uC2ED\\uC2DC\\uC624.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 46\n        }, this), \"\\uBE44\\uBC00\\uD0A4\\uB294 \\uC808\\uB300\\uB85C \\uD0C0\\uC778\\uC5D0\\uAC8C \\uC54C\\uB824\\uC8FC\\uC9C0 \\uB9C8\\uC2ED\\uC2DC\\uC624.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 40\n        }, this), \"\\uC704\\uC758 \\uBE44\\uBC00\\uD0A4\\uB97C \\uC544\\uB798\\uC758 \\uC785\\uB825\\uCC3D\\uC5D0 \\uBD99\\uC5EC\\uB123\\uC5B4 \\uACC4\\uC815\\uC0DD\\uC131\\uC744 \\uC644\\uB8CC\\uD558\\uC138\\uC694\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"PRIVATE_KET\",\n        onChange: evt => setPriv(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: doneBtn,\n        children: \"\\uC644\\uB8CC\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createAccount,\n        children: \"\\uACC4\\uC815 \\uB9CC\\uB4E4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(CreateChainId, \"Ubi0lSBrhCUqof63OExpTM81LuU=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateChainId;\nvar _c;\n$RefreshReg$(_c, \"CreateChainId\");","map":{"version":3,"names":["React","useState","useNavigate","postRegiPlayer","SHA256","CreateChainId","uid","web3","navigate","showFlag","setFlag","chainAccount","setAccount","priv","setPriv","createAccount","accountKey","account","eth","accounts","create","push","address","privateKey","doneBtn","hPass","record","userId","pass","addr","then","result","alert","sessionStorage","clear","evt","target","value"],"sources":["/home/giparang/threadweb/fortune/client/src/components/createChainId.js"],"sourcesContent":["import React from 'react';\nimport './modal.css';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postRegiPlayer } from '../api';\nimport { SHA256 } from '../utilityUnits/SHA256';\n\nexport const CreateChainId = ({uid, web3}) => {\n  const navigate = useNavigate();\n  const [showFlag, setFlag] = useState(false);\n  const [chainAccount, setAccount] = useState([]);\n  const [priv, setPriv] = useState();\n\n  const createAccount = async() => {\n    let accountKey = [];\n    const account = web3.eth.accounts.create();\n    \n    accountKey.push(account.address);\n    accountKey.push(account.privateKey);\n    setAccount(accountKey);\n    \n    setFlag(true);\n  }\n  const doneBtn = () => {\n    if(chainAccount[1] === priv){\n      const hPass = SHA256(chainAccount[1]);\n      const record = {\n        userId: uid,\n        pass: hPass,\n        addr: chainAccount[0]\n      }\n      postRegiPlayer(record).then(result => {\n        if(result === true){\n          alert('복사한 비밀키는 잊어버리지 않도록 다른곳에 반드시 저장하십시오');\n          sessionStorage.clear();\n          navigate('/signinpage');\n        }\n      })\n    }\n    else\n      alert('PRIVATE KEY 를 정확히 입력하여 주십시오');\n  }\n  return(\n    <>\n      {showFlag ? <>\n        <p>\n          🎉Successfuly Created<br/>\n          CHAIN ID: {chainAccount[0]}<br/><br/>\n          PRIVATE KEY: {chainAccount[1]}<br/><br/>\n          비밀키는 분실 시 되찾을 수 없습니다.<br/>\n          반드시 메모장 등 자신만이 알 수 있는 곳에 옮겨 저장하십시오.<br/>\n          비밀키는 절대로 타인에게 알려주지 마십시오.<br/><br/>\n          위의 비밀키를 아래의 입력창에 붙여넣어 계정생성을 완료하세요\n        </p>\n        <input placeholder='PRIVATE_KET' onChange={(evt)=>setPriv(evt.target.value)}/>\n        <button onClick={doneBtn}>완료하기</button>\n      </>:<>\n        <button onClick={createAccount}>계정 만들기</button>\n      </>}\n    </>\n  )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,MAAM,QAAQ,wBAAwB;AAAC;AAAA;AAEhD,OAAO,MAAMC,aAAa,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAACC,GAAG;IAAEC;EAAI,CAAC;EACvC,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAM,CAACO,QAAQ,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACU,YAAY,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,EAAE;EAElC,MAAMc,aAAa,GAAG,YAAW;IAC/B,IAAIC,UAAU,GAAG,EAAE;IACnB,MAAMC,OAAO,GAAGV,IAAI,CAACW,GAAG,CAACC,QAAQ,CAACC,MAAM,EAAE;IAE1CJ,UAAU,CAACK,IAAI,CAACJ,OAAO,CAACK,OAAO,CAAC;IAChCN,UAAU,CAACK,IAAI,CAACJ,OAAO,CAACM,UAAU,CAAC;IACnCX,UAAU,CAACI,UAAU,CAAC;IAEtBN,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EACD,MAAMc,OAAO,GAAG,MAAM;IACpB,IAAGb,YAAY,CAAC,CAAC,CAAC,KAAKE,IAAI,EAAC;MAC1B,MAAMY,KAAK,GAAGrB,MAAM,CAACO,YAAY,CAAC,CAAC,CAAC,CAAC;MACrC,MAAMe,MAAM,GAAG;QACbC,MAAM,EAAErB,GAAG;QACXsB,IAAI,EAAEH,KAAK;QACXI,IAAI,EAAElB,YAAY,CAAC,CAAC;MACtB,CAAC;MACDR,cAAc,CAACuB,MAAM,CAAC,CAACI,IAAI,CAACC,MAAM,IAAI;QACpC,IAAGA,MAAM,KAAK,IAAI,EAAC;UACjBC,KAAK,CAAC,oCAAoC,CAAC;UAC3CC,cAAc,CAACC,KAAK,EAAE;UACtB1B,QAAQ,CAAC,aAAa,CAAC;QACzB;MACF,CAAC,CAAC;IACJ,CAAC,MAECwB,KAAK,CAAC,6BAA6B,CAAC;EACxC,CAAC;EACD,oBACE;IAAA,UACGvB,QAAQ,gBAAG;MAAA,wBACV;QAAA,2DACuB;UAAA;UAAA;UAAA;QAAA,QAAK,gBACfE,YAAY,CAAC,CAAC,CAAC,eAAC;UAAA;UAAA;UAAA;QAAA,QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,mBACvBA,YAAY,CAAC,CAAC,CAAC,eAAC;UAAA;UAAA;UAAA;QAAA,QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,mHACnB;UAAA;UAAA;UAAA;QAAA,QAAK,mLACS;UAAA;UAAA;UAAA;QAAA,QAAK,0IAChB;UAAA;UAAA;UAAA;QAAA,QAAK;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAEhC,eACJ;QAAO,WAAW,EAAC,aAAa;QAAC,QAAQ,EAAGwB,GAAG,IAAGrB,OAAO,CAACqB,GAAG,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eAC9E;QAAQ,OAAO,EAAEb,OAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA,gBACtC,gBAAC;MAAA,uBACF;QAAQ,OAAO,EAAET,aAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgB;EAC9C,iBACF;AAEP,CAAC;AAAA,GAtDYV,aAAa;EAAA,QACPH,WAAW;AAAA;AAAA,KADjBG,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}