{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/setMyNft.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getSymbol, getOwnedToken } from '../utilityUnits/connMintService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SetMyNFT = _ref => {\n  _s();\n\n  let {\n    web3,\n    chainId\n  } = _ref;\n  const [mintService, setMintService] = useState();\n  const [netChainId, setNetworkId] = useState();\n  useEffect(() => {}, []);\n\n  const getNftSymbol = async () => {\n    console.log(await getSymbol(web3));\n  };\n\n  const getMyTokn = async () => {\n    const ownedArrStr = await getOwnedToken(web3, chainId);\n\n    const f = function (a, b) {\n      return a - b;\n    };\n\n    const ownedArr = ownedArrStr.sort(f);\n    console.log(ownedArr); //console.log(ownedArr.slice().sort());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"owend NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getMyTokn,\n      children: \"temp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SetMyNFT, \"oz9BsBtNmY1t5OVpWFMj7/in9zo=\");\n\n_c = SetMyNFT;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetMyNFT\");","map":{"version":3,"names":["React","useState","useEffect","getSymbol","getOwnedToken","SetMyNFT","web3","chainId","mintService","setMintService","netChainId","setNetworkId","getNftSymbol","console","log","getMyTokn","ownedArrStr","f","a","b","ownedArr","sort"],"sources":["/home/giparang/threadweb/fortune/client/src/components/setMyNft.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getSymbol, getOwnedToken } from '../utilityUnits/connMintService';\n\nexport const SetMyNFT = ({web3, chainId}) => {\n  const [mintService, setMintService] = useState();\n  const [netChainId, setNetworkId] = useState();\n\n  useEffect(()=>{\n    \n  },[])\n  \n  const getNftSymbol = async() => {\n    console.log(await getSymbol(web3));\n  }\n  const getMyTokn = async() => {\n    const ownedArrStr = await getOwnedToken(web3, chainId);\n    const f = function (a, b) { return a - b }\n    const ownedArr = ownedArrStr.sort(f);\n    console.log(ownedArr);\n    //console.log(ownedArr.slice().sort());\n  }\n\n  return(\n    <>\n      <h2>owend NFT</h2>\n      <button onClick={getMyTokn}>temp</button>\n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,iCAAzC;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAACC,IAAD;IAAOC;EAAP,CAAoB;EAC3C,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,EAA9C;EACA,MAAM,CAACS,UAAD,EAAaC,YAAb,IAA6BV,QAAQ,EAA3C;EAEAC,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMU,YAAY,GAAG,YAAW;IAC9BC,OAAO,CAACC,GAAR,CAAY,MAAMX,SAAS,CAACG,IAAD,CAA3B;EACD,CAFD;;EAGA,MAAMS,SAAS,GAAG,YAAW;IAC3B,MAAMC,WAAW,GAAG,MAAMZ,aAAa,CAACE,IAAD,EAAOC,OAAP,CAAvC;;IACA,MAAMU,CAAC,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;MAAE,OAAOD,CAAC,GAAGC,CAAX;IAAc,CAA1C;;IACA,MAAMC,QAAQ,GAAGJ,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB,CAAjB;IACAJ,OAAO,CAACC,GAAR,CAAYM,QAAZ,EAJ2B,CAK3B;EACD,CAND;;EAQA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEL,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD,CAzBM;;GAAMV,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}