{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/pages/wallet.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { EstSetApprovalAll, getApproveState, openTokenBatch } from \"../utilityUnits/connMintService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Wallet = _ref => {\n  _s();\n\n  let {\n    web3,\n    ADDR\n  } = _ref;\n  const scanUrl = `https://mumbai.polygonscan.com/address/${ADDR}`;\n  const [seller, setSeller] = useState(false);\n  const [balance, setBalance] = useState();\n  const [rcvAcc, setRcvAddress] = useState('');\n  const [PRIVATE_KEY, setPriv] = useState(null);\n  useEffect(() => {\n    sellerCheck();\n    getUserBal();\n  }, []);\n\n  const sellerCheck = async () => {\n    getApproveState(ADDR).then(result => {\n      setSeller(result);\n    });\n  };\n\n  const getUserBal = () => {\n    web3.eth.getBalance(ADDR).then(balanc => {\n      let count = 0;\n\n      do {\n        balanc /= 1000000;\n        ++count;\n      } while (count < 3);\n\n      setBalance(balanc);\n    });\n  };\n\n  const sendCoin = async () => {\n    const nonce = await web3.eth.getTransactionCount(ADDR, 'latest'); // nonce starts counting from 0\n\n    console.log(nonce);\n    const transaction = {\n      'to': rcvAcc,\n      // faucet address to return eth\n      'value': 20000000,\n      'gas': 30000,\n      'nonce': nonce // optional data field to send message or execute smart contract\n\n    };\n    const signedTx = await web3.eth.accounts.signTransaction(transaction, PRIVATE_KEY);\n    web3.eth.sendSignedTransaction(signedTx.rawTransaction, function (error, hash) {\n      if (!error) console.log(\"üéâ The hash of your transaction is: \", hash, \"\\n Check Polygon Scan to view the status of your transaction!\");else console.log(\"‚ùóSomething went wrong while submitting your transaction:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: scanUrl,\n      children: \"history\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(SellerBranch, {\n      showFlag: seller\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"balance: \", balance, \" MATIC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\" PRIVATE_KEY :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: evt => setPriv(evt.target.value),\n        size: \"45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendCoin,\n        children: \"send coin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: evt => setRcvAddress(evt.target.value),\n        placeholder: \"receiver Address 0x...\",\n        size: \"45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Wallet, \"IXWqU9dHGdKoyIA/RI5BLJuWI1E=\");\n\n_c = Wallet;\n\nconst SellerBranch = _ref2 => {\n  _s2();\n\n  let {\n    showFlag,\n    ADDR\n  } = _ref2;\n  const [modalFlag, setFlag] = useState(false);\n\n  const setSeller = () => {\n    EstSetApprovalAll(ADDR).then(result => {\n      console.log(result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showFlag ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"true\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setSeller,\n        children: \"Seller Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false) // showFlag„Ååfalse„ÅÆÂ†¥Âêà„ÅØModal„ÅØË°®Á§∫„Åó„Å™„ÅÑ)\n\n  }, void 0, false);\n};\n\n_s2(SellerBranch, \"vhd2LsGYoTDI9ZhOSHNgOj6tVWg=\");\n\n_c2 = SellerBranch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wallet\");\n$RefreshReg$(_c2, \"SellerBranch\");","map":{"version":3,"names":["React","useState","useEffect","EstSetApprovalAll","getApproveState","openTokenBatch","Wallet","web3","ADDR","scanUrl","seller","setSeller","balance","setBalance","rcvAcc","setRcvAddress","PRIVATE_KEY","setPriv","sellerCheck","getUserBal","then","result","eth","getBalance","balanc","count","sendCoin","nonce","getTransactionCount","console","log","transaction","signedTx","accounts","signTransaction","sendSignedTransaction","rawTransaction","error","hash","evt","target","value","SellerBranch","showFlag","modalFlag","setFlag"],"sources":["/home/giparang/threadweb/fortune/client/src/pages/wallet.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { \n  EstSetApprovalAll,\n  getApproveState,\n  openTokenBatch,\n} from \"../utilityUnits/connMintService\";\n\nexport const Wallet = ({web3, ADDR}) => {\n  const scanUrl = `https://mumbai.polygonscan.com/address/${ADDR}`;\n  const [seller, setSeller] = useState(false);\n  const [balance, setBalance] = useState();\n  const [rcvAcc ,setRcvAddress] = useState('');\n  const [PRIVATE_KEY, setPriv] = useState(null);\n\n  useEffect(() => {\n    sellerCheck();\n    getUserBal();\n  },[]);\n\n  const sellerCheck = async() => {\n    getApproveState(ADDR).then(result => {\n      setSeller(result);\n    })\n  }\n  \n  const getUserBal = () => {\n    web3.eth.getBalance(ADDR).then(balanc => {\n      let count = 0;\n      do{\n        balanc /= 1000000;\n        ++count;\n      }while(count < 3)\n      setBalance(balanc);\n    })\n  }\n\n  const sendCoin = async() => {\n    const nonce = await web3.eth.getTransactionCount(ADDR, 'latest'); // nonce starts counting from 0\n    console.log(nonce)\n    const transaction = {\n     'to': rcvAcc, // faucet address to return eth\n     'value': 20000000,\n     'gas': 30000,\n     'nonce': nonce,\n     // optional data field to send message or execute smart contract\n    };\n    const signedTx = await web3.eth.accounts.signTransaction(transaction, PRIVATE_KEY);\n\n    web3.eth.sendSignedTransaction(signedTx.rawTransaction, function(error, hash) {\n\n      if (!error)\n        console.log(\"üéâ The hash of your transaction is: \", hash, \"\\n Check Polygon Scan to view the status of your transaction!\");\n      else\n        console.log(\"‚ùóSomething went wrong while submitting your transaction:\", error);\n    });\n  }\n\n  return (\n  <>\n    <a href={scanUrl}>history</a><br/><br/>\n    <SellerBranch showFlag={seller}/>\n    <h2>wallet</h2>\n    <h4>balance: {balance} MATIC</h4>\n    <h5> PRIVATE_KEY :\n      <input onChange={(evt)=>setPriv(evt.target.value)} size='45'></input></h5>\n    <h5><button onClick={sendCoin}>send coin</button> :\n      <input onChange={(evt)=>setRcvAddress(evt.target.value)} placeholder='receiver Address 0x...' size='45'></input></h5>\n  </>\n  );\n}\nconst SellerBranch = ({showFlag, ADDR}) => {\n  const [modalFlag, setFlag] = useState(false);\n\n  const setSeller = () => {\n    EstSetApprovalAll(ADDR).then(result => {\n      console.log(result);\n    })\n  }\n  return(\n    <>{showFlag ? \n      <>\n        true\n      </> : <>\n        <button onClick={setSeller}>Seller Registration</button>\n      </>// showFlag„Ååfalse„ÅÆÂ†¥Âêà„ÅØModal„ÅØË°®Á§∫„Åó„Å™„ÅÑ)\n      }\n    </>\n  )\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,iBADF,EAEEC,eAFF,EAGEC,cAHF,QAIO,iCAJP;;;AAMA,OAAO,MAAMC,MAAM,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAACC,IAAD;IAAOC;EAAP,CAAiB;EACtC,MAAMC,OAAO,GAAI,0CAAyCD,IAAK,EAA/D;EACA,MAAM,CAACE,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC;EACA,MAAM,CAACa,MAAD,EAASC,aAAT,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACe,WAAD,EAAcC,OAAd,IAAyBhB,QAAQ,CAAC,IAAD,CAAvC;EAEAC,SAAS,CAAC,MAAM;IACdgB,WAAW;IACXC,UAAU;EACX,CAHQ,EAGP,EAHO,CAAT;;EAKA,MAAMD,WAAW,GAAG,YAAW;IAC7Bd,eAAe,CAACI,IAAD,CAAf,CAAsBY,IAAtB,CAA2BC,MAAM,IAAI;MACnCV,SAAS,CAACU,MAAD,CAAT;IACD,CAFD;EAGD,CAJD;;EAMA,MAAMF,UAAU,GAAG,MAAM;IACvBZ,IAAI,CAACe,GAAL,CAASC,UAAT,CAAoBf,IAApB,EAA0BY,IAA1B,CAA+BI,MAAM,IAAI;MACvC,IAAIC,KAAK,GAAG,CAAZ;;MACA,GAAE;QACAD,MAAM,IAAI,OAAV;QACA,EAAEC,KAAF;MACD,CAHD,QAGOA,KAAK,GAAG,CAHf;;MAIAZ,UAAU,CAACW,MAAD,CAAV;IACD,CAPD;EAQD,CATD;;EAWA,MAAME,QAAQ,GAAG,YAAW;IAC1B,MAAMC,KAAK,GAAG,MAAMpB,IAAI,CAACe,GAAL,CAASM,mBAAT,CAA6BpB,IAA7B,EAAmC,QAAnC,CAApB,CAD0B,CACwC;;IAClEqB,OAAO,CAACC,GAAR,CAAYH,KAAZ;IACA,MAAMI,WAAW,GAAG;MACnB,MAAMjB,MADa;MACL;MACd,SAAS,QAFU;MAGnB,OAAO,KAHY;MAInB,SAASa,KAJU,CAKnB;;IALmB,CAApB;IAOA,MAAMK,QAAQ,GAAG,MAAMzB,IAAI,CAACe,GAAL,CAASW,QAAT,CAAkBC,eAAlB,CAAkCH,WAAlC,EAA+Cf,WAA/C,CAAvB;IAEAT,IAAI,CAACe,GAAL,CAASa,qBAAT,CAA+BH,QAAQ,CAACI,cAAxC,EAAwD,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;MAE5E,IAAI,CAACD,KAAL,EACER,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDQ,IAApD,EAA0D,+DAA1D,EADF,KAGET,OAAO,CAACC,GAAR,CAAY,0DAAZ,EAAwEO,KAAxE;IACH,CAND;EAOD,CAnBD;;EAqBA,oBACA;IAAA,wBACE;MAAG,IAAI,EAAE5B,OAAT;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAC+B;MAAA;MAAA;MAAA;IAAA,QAD/B,eACoC;MAAA;MAAA;MAAA;IAAA,QADpC,eAEE,QAAC,YAAD;MAAc,QAAQ,EAAEC;IAAxB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,wBAAcE,OAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,0CACE;QAAO,QAAQ,EAAG2B,GAAD,IAAOtB,OAAO,CAACsB,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAA/B;QAAmD,IAAI,EAAC;MAAxD;QAAA;QAAA;QAAA;MAAA,QADF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAOE;MAAA,wBAAI;QAAQ,OAAO,EAAEf,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAJ,qBACE;QAAO,QAAQ,EAAGa,GAAD,IAAOxB,aAAa,CAACwB,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAArC;QAAyD,WAAW,EAAC,wBAArE;QAA8F,IAAI,EAAC;MAAnG;QAAA;QAAA;QAAA;MAAA,QADF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADA;AAYD,CA9DM;;GAAMnC,M;;KAAAA,M;;AA+Db,MAAMoC,YAAY,GAAG,SAAsB;EAAA;;EAAA,IAArB;IAACC,QAAD;IAAWnC;EAAX,CAAqB;EACzC,MAAM,CAACoC,SAAD,EAAYC,OAAZ,IAAuB5C,QAAQ,CAAC,KAAD,CAArC;;EAEA,MAAMU,SAAS,GAAG,MAAM;IACtBR,iBAAiB,CAACK,IAAD,CAAjB,CAAwBY,IAAxB,CAA6BC,MAAM,IAAI;MACrCQ,OAAO,CAACC,GAAR,CAAYT,MAAZ;IACD,CAFD;EAGD,CAJD;;EAKA,oBACE;IAAA,UAAGsB,QAAQ,gBACT;MAAA;IAAA,iBADS,gBAGH;MAAA,uBACJ;QAAQ,OAAO,EAAEhC,SAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADI,iBAHR,CAKK;;EALL,iBADF;AAUD,CAlBD;;IAAM+B,Y;;MAAAA,Y"},"metadata":{},"sourceType":"module"}