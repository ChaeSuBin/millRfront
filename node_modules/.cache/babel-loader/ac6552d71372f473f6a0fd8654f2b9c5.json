{"ast":null,"code":"import { getFileHash } from \"./SHA256\";\nexport const fileToHash = (_fileBuffer, setFileHash) => {\n  let fileNum = 0;\n  let fileHashArr = [];\n\n  try {\n    do {\n      //console.log(getFileHash(fileBuffer[fileNum].join('')));\n      fileHashArr.push(getFileHash(_fileBuffer[fileNum].join('')));\n      ++fileNum;\n    } while (_fileBuffer.length > fileNum);\n\n    console.log(fileHashArr); //setFileHash(fileHashArr);\n  } catch (e) {\n    console.log('wll');\n  }\n};","map":{"version":3,"names":["getFileHash","fileToHash","_fileBuffer","setFileHash","fileNum","fileHashArr","push","join","length","console","log","e"],"sources":["/home/giparang/threadweb/fortune/client/src/components/fileToHash.js"],"sourcesContent":["import { getFileHash } from \"./SHA256\";\nexport const fileToHash = (_fileBuffer, setFileHash) => {\n    let fileNum = 0\n    let fileHashArr = [];\n\n    try{\n        do {\n            //console.log(getFileHash(fileBuffer[fileNum].join('')));\n            fileHashArr.push(getFileHash(_fileBuffer[fileNum].join('')));\n            ++fileNum;\n          } while (_fileBuffer.length > fileNum);\n          console.log(fileHashArr);\n          //setFileHash(fileHashArr);\n    }\n    catch(e){\n        console.log('wll')\n    }\n    \n  }"],"mappings":"AAAA,SAASA,WAAT,QAA4B,UAA5B;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAcC,WAAd,KAA8B;EACpD,IAAIC,OAAO,GAAG,CAAd;EACA,IAAIC,WAAW,GAAG,EAAlB;;EAEA,IAAG;IACC,GAAG;MACC;MACAA,WAAW,CAACC,IAAZ,CAAiBN,WAAW,CAACE,WAAW,CAACE,OAAD,CAAX,CAAqBG,IAArB,CAA0B,EAA1B,CAAD,CAA5B;MACA,EAAEH,OAAF;IACD,CAJH,QAIWF,WAAW,CAACM,MAAZ,GAAqBJ,OAJhC;;IAKEK,OAAO,CAACC,GAAR,CAAYL,WAAZ,EANH,CAOG;EACL,CARD,CASA,OAAMM,CAAN,EAAQ;IACJF,OAAO,CAACC,GAAR,CAAY,KAAZ;EACH;AAEF,CAjBI"},"metadata":{},"sourceType":"module"}