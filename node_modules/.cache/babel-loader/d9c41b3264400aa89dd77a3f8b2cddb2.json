{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/setFileHash.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { onFileInputChange, getFiles } from \"../utilityUnits/fileToBuffer\";\nimport { fileToHash, setFinalHash } from '../utilityUnits/fileToHash';\nimport { FilesList } from \"../components/dispFileList\";\nimport { postUploadArtwork } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SetFileHash = () => {\n  _s();\n\n  let te = -1;\n  const [fileBuffer, setFileBuffer] = useState([]);\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHash] = useState([]);\n  const [finalHash, setFinalH] = useState();\n  const [fileType, setType] = useState([]);\n  useEffect(() => {\n    fileToHash(fileBuffer, setFileHash);\n  }, [fileInfo]);\n\n  const getFinalHash = () => {\n    let hashNum = 0;\n    let hashsStr = '';\n\n    do {\n      hashsStr += fileHashs[hashNum];\n      ++hashNum;\n    } while (fileHashs.length > hashNum);\n\n    setFinalH(setFinalHash(hashsStr));\n  };\n\n  const uploadItem = () => {\n    //getFinalHash();\n    console.log(fileInfo[0].type.split('.').pop());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputfile\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: onFileInputChange,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 102\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getFiles(setFileBuffer, setFileInfo),\n      children: \"set file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), fileInfo.map(uploadItems => /*#__PURE__*/_jsxDEV(FilesList, {\n      row: ++te,\n      title: uploadItems.name,\n      type: uploadItems.type,\n      size: uploadItems.size,\n      hash: fileHashs[te]\n    }, uploadItems.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadItem,\n      children: \"uploadFiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SetFileHash, \"Nxk1I7tjhJU5W9GAiUDdxN0s5k4=\");\n\n_c = SetFileHash;\n\nconst uploadFiles = (_title, _desc, _hash, _typeArr, _fileBuffer) => {\n  const record = {\n    title: _title,\n    desc: _desc,\n    hash: _hash,\n    typeArr: _typeArr,\n    fileBuffer: _fileBuffer\n  }; //postUploadArtwork\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SetFileHash\");","map":{"version":3,"names":["React","useState","useEffect","onFileInputChange","getFiles","fileToHash","setFinalHash","FilesList","postUploadArtwork","SetFileHash","te","fileBuffer","setFileBuffer","fileInfo","setFileInfo","fileHashs","setFileHash","finalHash","setFinalH","fileType","setType","getFinalHash","hashNum","hashsStr","length","uploadItem","console","log","type","split","pop","map","uploadItems","name","size","uploadFiles","_title","_desc","_hash","_typeArr","_fileBuffer","record","title","desc","hash","typeArr"],"sources":["/home/giparang/threadweb/fortune/client/src/components/setFileHash.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { onFileInputChange, getFiles } from \"../utilityUnits/fileToBuffer\";\nimport { fileToHash, setFinalHash } from '../utilityUnits/fileToHash'\nimport { FilesList } from \"../components/dispFileList\";\nimport { postUploadArtwork } from \"../api\";\n\nexport const SetFileHash = () => {\n\n  let te = -1;\n  const [fileBuffer, setFileBuffer] = useState([]);\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHash] = useState([]);\n  const [finalHash, setFinalH] = useState();\n  const [fileType, setType] = useState([]);\n\n  useEffect(()=>{\n    fileToHash(fileBuffer, setFileHash);\n  },[fileInfo])\n  \n  const getFinalHash = () => {\n    let hashNum = 0;\n    let hashsStr = '';\n    do {\n      hashsStr += fileHashs[hashNum];\n      ++hashNum;\n    } while (fileHashs.length > hashNum);\n    setFinalH(setFinalHash(hashsStr));\n  }\n\n  const uploadItem = () => {\n    //getFinalHash();\n    console.log((fileInfo[0].type).split('.').pop());\n  }\n  return(\n    <div>\n      <p>extract</p>\n      <label className=\"inputfile\"><input type='file' onChange={onFileInputChange} multiple/></label><br/>\n      <button onClick={()=>getFiles(setFileBuffer, setFileInfo)}>set file</button>\n      <br/>\n      {fileInfo.map(uploadItems => (\n        <FilesList\n          key={uploadItems.name}\n          row={++te}\n          title = {uploadItems.name}\n          type = {uploadItems.type}\n          size = {uploadItems.size}\n          hash = {fileHashs[te]}\n        />\n      ))}\n      <button onClick={uploadItem}>uploadFiles</button>\n    </div>\n  )\n}\nconst uploadFiles = (_title, _desc, _hash, _typeArr, _fileBuffer) => {\n    const record = {\n      title: _title,\n      desc: _desc,\n      hash: _hash,\n      typeArr: _typeArr,\n      fileBuffer: _fileBuffer\n    }\n    //postUploadArtwork\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}