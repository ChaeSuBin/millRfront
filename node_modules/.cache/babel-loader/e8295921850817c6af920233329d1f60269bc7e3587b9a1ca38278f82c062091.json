{"ast":null,"code":"//import filestream from \"fs\";\n\nexport const getFileHash = _fileBuffer => {\n  return SHA256(_fileBuffer);\n};\nexport const SHA256 = s => {\n  var chrsz = 8;\n  var hexcase = 0;\n  function safe_add(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return msw << 16 | lsw & 0xFFFF;\n  }\n  function S(X, n) {\n    return X >>> n | X << 32 - n;\n  }\n  function R(X, n) {\n    return X >>> n;\n  }\n  function Ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function Maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function Sigma0256(x) {\n    return S(x, 2) ^ S(x, 13) ^ S(x, 22);\n  }\n  function Sigma1256(x) {\n    return S(x, 6) ^ S(x, 11) ^ S(x, 25);\n  }\n  function Gamma0256(x) {\n    return S(x, 7) ^ S(x, 18) ^ R(x, 3);\n  }\n  function Gamma1256(x) {\n    return S(x, 17) ^ S(x, 19) ^ R(x, 10);\n  }\n  function core_sha256(m, l) {\n    var K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);\n    var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);\n    var W = new Array(64);\n    var a, b, c, d, e, f, g, h, i, j;\n    var T1, T2;\n    m[l >> 5] |= 0x80 << 24 - l % 32;\n    m[(l + 64 >> 9 << 4) + 15] = l;\n    for (var i = 0; i < m.length; i += 16) {\n      a = HASH[0];\n      b = HASH[1];\n      c = HASH[2];\n      d = HASH[3];\n      e = HASH[4];\n      f = HASH[5];\n      g = HASH[6];\n      h = HASH[7];\n      for (var j = 0; j < 64; j++) {\n        if (j < 16) W[j] = m[j + i];else W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\n        T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\n        T2 = safe_add(Sigma0256(a), Maj(a, b, c));\n        h = g;\n        g = f;\n        f = e;\n        e = safe_add(d, T1);\n        d = c;\n        c = b;\n        b = a;\n        a = safe_add(T1, T2);\n      }\n      HASH[0] = safe_add(a, HASH[0]);\n      HASH[1] = safe_add(b, HASH[1]);\n      HASH[2] = safe_add(c, HASH[2]);\n      HASH[3] = safe_add(d, HASH[3]);\n      HASH[4] = safe_add(e, HASH[4]);\n      HASH[5] = safe_add(f, HASH[5]);\n      HASH[6] = safe_add(g, HASH[6]);\n      HASH[7] = safe_add(h, HASH[7]);\n    }\n    return HASH;\n  }\n  function str2binb(str) {\n    var bin = Array();\n    var mask = (1 << chrsz) - 1;\n    for (var i = 0; i < str.length * chrsz; i += chrsz) {\n      bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << 24 - i % 32;\n    }\n    return bin;\n  }\n  function Utf8Encode(string) {\n    string = string.replace(/\\r\\n/g, \"\\n\");\n    var utftext = \"\";\n    for (var n = 0; n < string.length; n++) {\n      var c = string.charCodeAt(n);\n      if (c < 128) {\n        utftext += String.fromCharCode(c);\n      } else if (c > 127 && c < 2048) {\n        utftext += String.fromCharCode(c >> 6 | 192);\n        utftext += String.fromCharCode(c & 63 | 128);\n      } else {\n        utftext += String.fromCharCode(c >> 12 | 224);\n        utftext += String.fromCharCode(c >> 6 & 63 | 128);\n        utftext += String.fromCharCode(c & 63 | 128);\n      }\n    }\n    return utftext;\n  }\n  function binb2hex(binarray) {\n    var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n    var str = \"\";\n    for (var i = 0; i < binarray.length * 4; i++) {\n      str += hex_tab.charAt(binarray[i >> 2] >> (3 - i % 4) * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> (3 - i % 4) * 8 & 0xF);\n    }\n    return str;\n  }\n  s = Utf8Encode(s);\n  return binb2hex(core_sha256(str2binb(s), s.length * chrsz));\n};\n_c = SHA256;\nvar _c;\n$RefreshReg$(_c, \"SHA256\");","map":{"version":3,"names":["getFileHash","_fileBuffer","SHA256","s","chrsz","hexcase","safe_add","x","y","lsw","msw","S","X","n","R","Ch","z","Maj","Sigma0256","Sigma1256","Gamma0256","Gamma1256","core_sha256","m","l","K","Array","HASH","W","a","b","c","d","e","f","g","h","i","j","T1","T2","length","str2binb","str","bin","mask","charCodeAt","Utf8Encode","string","replace","utftext","String","fromCharCode","binb2hex","binarray","hex_tab","charAt"],"sources":["/home/giparang/threadweb/fortune/client/src/utilityUnits/SHA256.js"],"sourcesContent":["//import filestream from \"fs\";\n\nexport const getFileHash = (_fileBuffer) => {\n    return SHA256(_fileBuffer);\n}\n\nexport const SHA256 = (s) => {\n    var chrsz   = 8;\n    var hexcase = 0;\n  \n    function safe_add (x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    }\n  \n    function S (X, n) { return ( X >>> n ) | (X << (32 - n)); }\n    function R (X, n) { return ( X >>> n ); }\n    function Ch(x, y, z) { return ((x & y) ^ ((~x) & z)); }\n    function Maj(x, y, z) { return ((x & y) ^ (x & z) ^ (y & z)); }\n    function Sigma0256(x) { return (S(x, 2) ^ S(x, 13) ^ S(x, 22)); }\n    function Sigma1256(x) { return (S(x, 6) ^ S(x, 11) ^ S(x, 25)); }\n    function Gamma0256(x) { return (S(x, 7) ^ S(x, 18) ^ R(x, 3)); }\n    function Gamma1256(x) { return (S(x, 17) ^ S(x, 19) ^ R(x, 10)); }\n  \n    function core_sha256 (m, l) {\n         \n        var K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1,\n            0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n            0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786,\n            0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n            0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147,\n            0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n            0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B,\n            0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n            0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A,\n            0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n            0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);\n\n        var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);\n\n        var W = new Array(64);\n        var a, b, c, d, e, f, g, h, i, j;\n        var T1, T2;\n  \n        m[l >> 5] |= 0x80 << (24 - l % 32);\n        m[((l + 64 >> 9) << 4) + 15] = l;\n  \n        for ( var i = 0; i<m.length; i+=16 ) {\n            a = HASH[0];\n            b = HASH[1];\n            c = HASH[2];\n            d = HASH[3];\n            e = HASH[4];\n            f = HASH[5];\n            g = HASH[6];\n            h = HASH[7];\n  \n            for ( var j = 0; j<64; j++) {\n                if (j < 16) W[j] = m[j + i];\n                else W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\n  \n                T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\n                T2 = safe_add(Sigma0256(a), Maj(a, b, c));\n  \n                h = g;\n                g = f;\n                f = e;\n                e = safe_add(d, T1);\n                d = c;\n                c = b;\n                b = a;\n                a = safe_add(T1, T2);\n            }\n  \n            HASH[0] = safe_add(a, HASH[0]);\n            HASH[1] = safe_add(b, HASH[1]);\n            HASH[2] = safe_add(c, HASH[2]);\n            HASH[3] = safe_add(d, HASH[3]);\n            HASH[4] = safe_add(e, HASH[4]);\n            HASH[5] = safe_add(f, HASH[5]);\n            HASH[6] = safe_add(g, HASH[6]);\n            HASH[7] = safe_add(h, HASH[7]);\n        }\n        return HASH;\n    }\n  \n    function str2binb (str) {\n        var bin = Array();\n        var mask = (1 << chrsz) - 1;\n        for(var i = 0; i < str.length * chrsz; i += chrsz) {\n            bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i%32);\n        }\n        return bin;\n    }\n  \n    function Utf8Encode(string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n  \n        for (var n = 0; n < string.length; n++) {\n  \n            var c = string.charCodeAt(n);\n  \n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n  \n        }\n  \n        return utftext;\n    }\n  \n    function binb2hex (binarray) {\n        var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n        var str = \"\";\n        for(var i = 0; i < binarray.length * 4; i++) {\n            str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\n            hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\n        }\n        return str;\n    }\n  \n    s = Utf8Encode(s);\n    return binb2hex(core_sha256(str2binb(s), s.length * chrsz));\n  \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}