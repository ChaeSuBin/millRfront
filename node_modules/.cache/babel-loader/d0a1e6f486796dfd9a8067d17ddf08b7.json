{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/mintItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserId, postMintTokn } from '../api';\nimport { EstCreateItem, getAmountAll, mintNFT } from '../utilityUnits/connMintService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MintItemCpnt = _ref => {\n  _s();\n\n  let {\n    web3,\n    toknUri,\n    rightInfo\n  } = _ref;\n  const SEND_ADDR = sessionStorage.getItem('chainid');\n  const navigate = useNavigate();\n  const [NumOfTokn, setNumOfTokn] = useState();\n  const [PRIVATE_KEY, setPrivKey] = useState(null);\n  const [modalFlag, setFlag] = useState(false);\n  const [estGasFee, setGasFee] = useState();\n  const [Royalty, setLowest] = useState();\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    exclusiveParsing();\n  }, [web3, toknUri, rightInfo]);\n\n  const exclusiveParsing = () => {\n    let result = rightInfo.split('/');\n    console.log(result[1]);\n\n    if (result[1] === 'Exclusive') {\n      setActive(true);\n      setNumOfTokn(1);\n    } else setActive(false);\n  };\n\n  const setNFT = async () => {\n    const royality = Royalty * 100000 + '0000000000000';\n    const tokenUri = rightInfo + toknUri;\n    const currentId = await getAmountAll();\n    mintNFT(SEND_ADDR, tokenUri, NumOfTokn, royality, PRIVATE_KEY).then(result => {\n      if (result === true) {\n        putDBtoknIDX(currentId);\n        alert('🎉Successfully minted');\n      } else alert(`⚠️Err: ${result}`);\n    }); //alert('Sales registration completed \\n It takes about a minute to reflect the actual reflection');\n  };\n\n  const putDBtoknIDX = async currentId => {\n    const userId = await getUserId(SEND_ADDR);\n    const record = {\n      hash: toknUri,\n      toknId: currentId,\n      userId: userId,\n      mintNum: NumOfTokn\n    };\n    console.log(record);\n    postMintTokn(record).then(result => {\n      if (result) navigate(\"/myinfo\");else console.log(result);\n    });\n  };\n\n  const inputDataConfirm = async () => {\n    const royality = Royalty * 100000 + '0000000000000';\n    const tokenUri = rightInfo + toknUri;\n    const estGas = await EstCreateItem(SEND_ADDR, tokenUri, NumOfTokn, royality);\n    setGasFee(estGas);\n    setFlag(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"mintItem.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"num of tokn to mint: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"number of token\",\n        onChange: evt => setNumOfTokn(evt.target.value),\n        disabled: active\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Lowest selling price: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"MATIC\",\n        onChange: evt => setLowest(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"private Key: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"input your private key to mint nft\",\n        onChange: evt => setPrivKey(evt.target.value),\n        size: \"45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: inputDataConfirm,\n      children: \"NFTmint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AlertModal, {\n      showFlag: modalFlag,\n      NofTokn: NumOfTokn,\n      estGasFee: estGasFee,\n      setFlag: setFlag,\n      mintTokn: setNFT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MintItemCpnt, \"Yd2vhjbQHk1dSqUSXQtxwP4sJ/A=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MintItemCpnt;\n\nconst AlertModal = _ref2 => {\n  let {\n    showFlag,\n    setFlag,\n    NofTokn,\n    estGasFee,\n    mintTokn\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showFlag ?\n    /*#__PURE__*/\n    // showFlagがtrueだったらModalを表示する\n    _jsxDEV(\"div\", {\n      id: \"overlay\",\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modalcontents\",\n        className: \"modalcontents\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"nft\\uD1A0\\uD070\\uC744 \", NofTokn, \"\\uAC1C \\uBC1C\\uD589\\uD569\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 35\n          }, this), \"\\uC608\\uC0C1\\uB418\\uB294 \\uC218\\uC218\\uB8CC: \", estGasFee, \"e-8 MATIC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 41\n          }, this), \"(nft\\uD1A0\\uD070\\uC740 \\uBC1C\\uD589\\uC9C1\\uD6C4 \\uC57D 1~3\\uBD84 \\uACBD\\uACFC \\uD6C4 \\uD655\\uC778\\uAC00\\uB2A5)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFlag(false),\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: mintTokn,\n          children: \"confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) // showFlagがfalseの場合はModalは表示しない)\n\n  }, void 0, false);\n};\n\n_c2 = AlertModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MintItemCpnt\");\n$RefreshReg$(_c2, \"AlertModal\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getUserId","postMintTokn","EstCreateItem","getAmountAll","mintNFT","MintItemCpnt","web3","toknUri","rightInfo","SEND_ADDR","sessionStorage","getItem","navigate","NumOfTokn","setNumOfTokn","PRIVATE_KEY","setPrivKey","modalFlag","setFlag","estGasFee","setGasFee","Royalty","setLowest","active","setActive","exclusiveParsing","result","split","console","log","setNFT","royality","tokenUri","currentId","then","putDBtoknIDX","alert","userId","record","hash","toknId","mintNum","inputDataConfirm","estGas","evt","target","value","AlertModal","showFlag","NofTokn","mintTokn"],"sources":["/home/giparang/threadweb/fortune/client/src/components/mintItem.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserId, postMintTokn } from '../api';\nimport { EstCreateItem, getAmountAll, mintNFT } from '../utilityUnits/connMintService';\n\nexport const MintItemCpnt = ({web3, toknUri, rightInfo}) => {\n  const SEND_ADDR = sessionStorage.getItem('chainid');\n  const navigate = useNavigate();\n  const [NumOfTokn, setNumOfTokn] = useState();\n  const [PRIVATE_KEY, setPrivKey] = useState(null);\n  const [modalFlag, setFlag] = useState(false);\n  const [estGasFee, setGasFee] = useState();\n  const [Royalty, setLowest] = useState();\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    exclusiveParsing();\n  },[web3, toknUri, rightInfo])\n\n  const exclusiveParsing = () => {\n    let result = rightInfo.split('/');\n    console.log(result[1]);\n    if(result[1] === 'Exclusive'){\n      setActive(true);\n      setNumOfTokn(1);\n    }\n    else\n      setActive(false);\n  }\n  const setNFT = async() => {\n    const royality = (Royalty*100000+'0000000000000');\n    const tokenUri = rightInfo+toknUri;\n    const currentId = await getAmountAll();\n    mintNFT(SEND_ADDR, tokenUri, NumOfTokn, royality, PRIVATE_KEY).then(\n      result => {\n        if(result === true){\n          putDBtoknIDX(currentId);\n          alert('🎉Successfully minted');\n        }\n        else\n          alert(`⚠️Err: ${result}`);\n      }\n    )\n    //alert('Sales registration completed \\n It takes about a minute to reflect the actual reflection');\n  }\n  const putDBtoknIDX = async(currentId) => {\n    const userId = await getUserId(SEND_ADDR);\n    const record = {\n      hash: toknUri,\n      toknId: currentId,\n      userId: userId,\n      mintNum: NumOfTokn\n    }\n    console.log(record);\n    postMintTokn(record).then(result => {\n      if(result) navigate(\"/myinfo\");\n      else console.log(result);\n    })\n  }\n  const inputDataConfirm = async() => {\n    const royality = (Royalty*100000+'0000000000000');\n    const tokenUri = rightInfo+toknUri;\n    const estGas = await EstCreateItem(SEND_ADDR, tokenUri, NumOfTokn, royality);\n    setGasFee(estGas);\n    setFlag(true);\n  }\n  return(\n    <>\n    {/* <button onClick={putDBtoknIDX}>temp</button> */}\n    <h4>mintItem.js</h4>\n    <h5>num of tokn to mint: <input placeholder='number of token' onChange={(evt)=>setNumOfTokn(evt.target.value)} disabled={active}/></h5>\n    <h5>Lowest selling price: <input placeholder='MATIC' onChange={(evt)=>setLowest(evt.target.value)}/></h5>\n    <h5>private Key: <input placeholder='input your private key to mint nft' onChange={(evt)=>setPrivKey(evt.target.value)} size='45'/></h5>\n    <button onClick={inputDataConfirm}>NFTmint</button>\n    <AlertModal \n      showFlag={modalFlag}\n      NofTokn={NumOfTokn}\n      estGasFee={estGasFee}\n      setFlag={setFlag}\n      mintTokn={setNFT}\n    />\n    </>\n  )\n}\n\nconst AlertModal = ({showFlag, setFlag, NofTokn, estGasFee, mintTokn}) => {\n  return(\n    <>{showFlag ? ( // showFlagがtrueだったらModalを表示する\n      <div id=\"overlay\" className='overlay'>\n        <div id=\"modalcontents\" className=\"modalcontents\">\n        <p>\n          nft토큰을 {NofTokn}개 발행합니다.<br/>\n          예상되는 수수료: {estGasFee}e-8 MATIC<br/>\n          (nft토큰은 발행직후 약 1~3분 경과 후 확인가능)\n        </p>\n        <button onClick={()=>setFlag(false)}>cancel</button>\n        <button onClick={mintTokn}>confirm</button>\n        </div>\n      </div>\n      ) : (\n        <></>// showFlagがfalseの場合はModalは表示しない)\n      )}\n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,QAAxC;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,OAAtC,QAAqD,iCAArD;;;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAgC;EAAA;;EAAA,IAA/B;IAACC,IAAD;IAAOC,OAAP;IAAgBC;EAAhB,CAA+B;EAC1D,MAAMC,SAAS,GAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAlB;EACA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACA,MAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,EAA1C;EACA,MAAM,CAACkB,WAAD,EAAcC,UAAd,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACoB,SAAD,EAAYC,OAAZ,IAAuBrB,QAAQ,CAAC,KAAD,CAArC;EACA,MAAM,CAACsB,SAAD,EAAYC,SAAZ,IAAyBvB,QAAQ,EAAvC;EACA,MAAM,CAACwB,OAAD,EAAUC,SAAV,IAAuBzB,QAAQ,EAArC;EACA,MAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,KAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACd2B,gBAAgB;EACjB,CAFQ,EAEP,CAACnB,IAAD,EAAOC,OAAP,EAAgBC,SAAhB,CAFO,CAAT;;EAIA,MAAMiB,gBAAgB,GAAG,MAAM;IAC7B,IAAIC,MAAM,GAAGlB,SAAS,CAACmB,KAAV,CAAgB,GAAhB,CAAb;IACAC,OAAO,CAACC,GAAR,CAAYH,MAAM,CAAC,CAAD,CAAlB;;IACA,IAAGA,MAAM,CAAC,CAAD,CAAN,KAAc,WAAjB,EAA6B;MAC3BF,SAAS,CAAC,IAAD,CAAT;MACAV,YAAY,CAAC,CAAD,CAAZ;IACD,CAHD,MAKEU,SAAS,CAAC,KAAD,CAAT;EACH,CATD;;EAUA,MAAMM,MAAM,GAAG,YAAW;IACxB,MAAMC,QAAQ,GAAIV,OAAO,GAAC,MAAR,GAAe,eAAjC;IACA,MAAMW,QAAQ,GAAGxB,SAAS,GAACD,OAA3B;IACA,MAAM0B,SAAS,GAAG,MAAM9B,YAAY,EAApC;IACAC,OAAO,CAACK,SAAD,EAAYuB,QAAZ,EAAsBnB,SAAtB,EAAiCkB,QAAjC,EAA2ChB,WAA3C,CAAP,CAA+DmB,IAA/D,CACER,MAAM,IAAI;MACR,IAAGA,MAAM,KAAK,IAAd,EAAmB;QACjBS,YAAY,CAACF,SAAD,CAAZ;QACAG,KAAK,CAAC,uBAAD,CAAL;MACD,CAHD,MAKEA,KAAK,CAAE,UAASV,MAAO,EAAlB,CAAL;IACH,CARH,EAJwB,CAcxB;EACD,CAfD;;EAgBA,MAAMS,YAAY,GAAG,MAAMF,SAAN,IAAoB;IACvC,MAAMI,MAAM,GAAG,MAAMrC,SAAS,CAACS,SAAD,CAA9B;IACA,MAAM6B,MAAM,GAAG;MACbC,IAAI,EAAEhC,OADO;MAEbiC,MAAM,EAAEP,SAFK;MAGbI,MAAM,EAAEA,MAHK;MAIbI,OAAO,EAAE5B;IAJI,CAAf;IAMAe,OAAO,CAACC,GAAR,CAAYS,MAAZ;IACArC,YAAY,CAACqC,MAAD,CAAZ,CAAqBJ,IAArB,CAA0BR,MAAM,IAAI;MAClC,IAAGA,MAAH,EAAWd,QAAQ,CAAC,SAAD,CAAR,CAAX,KACKgB,OAAO,CAACC,GAAR,CAAYH,MAAZ;IACN,CAHD;EAID,CAbD;;EAcA,MAAMgB,gBAAgB,GAAG,YAAW;IAClC,MAAMX,QAAQ,GAAIV,OAAO,GAAC,MAAR,GAAe,eAAjC;IACA,MAAMW,QAAQ,GAAGxB,SAAS,GAACD,OAA3B;IACA,MAAMoC,MAAM,GAAG,MAAMzC,aAAa,CAACO,SAAD,EAAYuB,QAAZ,EAAsBnB,SAAtB,EAAiCkB,QAAjC,CAAlC;IACAX,SAAS,CAACuB,MAAD,CAAT;IACAzB,OAAO,CAAC,IAAD,CAAP;EACD,CAND;;EAOA,oBACE;IAAA,wBAEA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAA,iDAAyB;QAAO,WAAW,EAAC,iBAAnB;QAAqC,QAAQ,EAAG0B,GAAD,IAAO9B,YAAY,CAAC8B,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAlE;QAAsF,QAAQ,EAAEvB;MAAhG;QAAA;QAAA;QAAA;MAAA,QAAzB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA,eAIA;MAAA,kDAA0B;QAAO,WAAW,EAAC,OAAnB;QAA2B,QAAQ,EAAGqB,GAAD,IAAOtB,SAAS,CAACsB,GAAG,CAACC,MAAJ,CAAWC,KAAZ;MAArD;QAAA;QAAA;QAAA;MAAA,QAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QAJA,eAKA;MAAA,yCAAiB;QAAO,WAAW,EAAC,oCAAnB;QAAwD,QAAQ,EAAGF,GAAD,IAAO5B,UAAU,CAAC4B,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAnF;QAAuG,IAAI,EAAC;MAA5G;QAAA;QAAA;QAAA;MAAA,QAAjB;IAAA;MAAA;MAAA;MAAA;IAAA,QALA,eAMA;MAAQ,OAAO,EAAEJ,gBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANA,eAOA,QAAC,UAAD;MACE,QAAQ,EAAEzB,SADZ;MAEE,OAAO,EAAEJ,SAFX;MAGE,SAAS,EAAEM,SAHb;MAIE,OAAO,EAAED,OAJX;MAKE,QAAQ,EAAEY;IALZ;MAAA;MAAA;MAAA;IAAA,QAPA;EAAA,gBADF;AAiBD,CA9EM;;GAAMzB,Y;UAEMN,W;;;KAFNM,Y;;AAgFb,MAAM0C,UAAU,GAAG,SAAuD;EAAA,IAAtD;IAACC,QAAD;IAAW9B,OAAX;IAAoB+B,OAApB;IAA6B9B,SAA7B;IAAwC+B;EAAxC,CAAsD;EACxE,oBACE;IAAA,UAAGF,QAAQ;IAAA;IAAK;IACd;MAAK,EAAE,EAAC,SAAR;MAAkB,SAAS,EAAC,SAA5B;MAAA,uBACE;QAAK,EAAE,EAAC,eAAR;QAAwB,SAAS,EAAC,eAAlC;QAAA,wBACA;UAAA,qCACUC,OADV,yDAC0B;YAAA;YAAA;YAAA;UAAA,QAD1B,mDAEa9B,SAFb,4BAEgC;YAAA;YAAA;YAAA;UAAA,QAFhC;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAMA;UAAQ,OAAO,EAAE,MAAID,OAAO,CAAC,KAAD,CAA5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANA,eAOA;UAAQ,OAAO,EAAEgC,QAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADS,gBAaP,qCAbO,CAaF;;EAbT,iBADF;AAkBD,CAnBD;;MAAMH,U"},"metadata":{},"sourceType":"module"}