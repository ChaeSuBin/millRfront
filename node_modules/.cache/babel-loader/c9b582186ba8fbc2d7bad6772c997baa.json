{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/uploadIDX/setItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postUploadItemIdx, getUserId } from '../../api';\nimport { eventCreateItem, setNFTidx } from '../../utilityUnits/connMintService';\nimport { WaitModal } from '../waitModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet count = 0;\nlet intervalId = null;\nexport const SetItemCpnt = _ref => {\n  _s();\n\n  let {\n    title,\n    desc,\n    toknUri,\n    rightInfo\n  } = _ref;\n  const SEND_ADDR = sessionStorage.getItem('chainid');\n  const navigate = useNavigate();\n  const [NumOfTokn, setNumOfTokn] = useState();\n  const [price, setValue] = useState();\n  const [PRIVATE_KEY, setPrivKey] = useState(null);\n  const [modalFlag, setFlag] = useState(false);\n  const [Royalty, setLowest] = useState(0);\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    itemCreateEvtListener();\n  }, []);\n\n  const exclusiveParsing = () => {\n    let result = rightInfo.split('/'); //console.log(result[1]);\n\n    if (result[1] === 'Exclusive') {\n      setActive(true);\n      setNumOfTokn(1);\n    } else setActive(false);\n  };\n\n  const setItem = async () => {\n    const royality = parseInt(Royalty * 100000) + '0000000000000';\n    const value = parseInt(price * 100000) + '0000000000000';\n    const tokenUri = rightInfo + toknUri; //const saveItemIdx = await uploadItemIdx();\n\n    if (title !== '' && desc !== '') {\n      setNFTidx(SEND_ADDR, PRIVATE_KEY, tokenUri, value, royality, NumOfTokn).then(result => {\n        if (result === true) {\n          intervalId = setInterval(() => {\n            if (count > 9) {\n              stopTimer();\n              setFlag(false);\n              alert('입력하신 Private Key가 다른 주소의 키 같습니다\\n 키를 확인 후 다시 시도하여주십시오.');\n            } else ++count;\n          }, 1000);\n        } else {\n          setFlag(false);\n          alert(`⚠️Err: ${result}`);\n        }\n      });\n    } else {\n      setFlag(false);\n      alert('Please enter the title and description of the item to be uploaded');\n    }\n  };\n\n  const uploadItemIdx = async _itemId => {\n    const userId = await getUserId(SEND_ADDR);\n    const record = {\n      itemId: parseInt(_itemId),\n      title: title,\n      desc: desc,\n      hash: toknUri,\n      userId: userId\n    };\n    postUploadItemIdx(record).then(response => {\n      console.log('checka');\n\n      if (response) {\n        setFlag(false);\n        stopTimer();\n        alert('🎉Successfully Created');\n        navigate(\"/\");\n      }\n    });\n  };\n\n  const itemCreateEvtListener = async () => {\n    console.log('wow'); // const listen = await eventCreateItem(SEND_ADDR);\n\n    eventCreateItem(SEND_ADDR).then(listen => {\n      if (listen) {\n        uploadItemIdx(listen.itemId);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uC544\\uC774\\uD15C \\uD310\\uB9E4\\uC815\\uBCF4 \\uC785\\uB825\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"quantity: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"quantity of token\",\n        onChange: evt => setNumOfTokn(evt.target.value),\n        disabled: active\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"price: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"price of token\",\n        onChange: evt => setValue(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"royalties: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"MATIC\",\n        onChange: evt => setLowest(evt.target.value),\n        defaultValue: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"private Key: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"input your private key to mint nft\",\n        onChange: evt => setPrivKey(evt.target.value),\n        size: \"45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setFlag(true);\n        setItem();\n      },\n      children: \"\\uD310\\uB9E4\\uC2DC\\uC791\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(WaitModal, {\n      showFlag: modalFlag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SetItemCpnt, \"S2ONEqK3jFpHRnajdWvLJGhmef0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SetItemCpnt;\n\nconst stopTimer = () => {\n  clearInterval(intervalId);\n  intervalId = null;\n  count = 0;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SetItemCpnt\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","postUploadItemIdx","getUserId","eventCreateItem","setNFTidx","WaitModal","count","intervalId","SetItemCpnt","title","desc","toknUri","rightInfo","SEND_ADDR","sessionStorage","getItem","navigate","NumOfTokn","setNumOfTokn","price","setValue","PRIVATE_KEY","setPrivKey","modalFlag","setFlag","Royalty","setLowest","active","setActive","itemCreateEvtListener","exclusiveParsing","result","split","setItem","royality","parseInt","value","tokenUri","then","setInterval","stopTimer","alert","uploadItemIdx","_itemId","userId","record","itemId","hash","response","console","log","listen","catch","err","evt","target","clearInterval"],"sources":["/home/giparang/threadweb/fortune/client/src/components/uploadIDX/setItem.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postUploadItemIdx, getUserId } from '../../api';\nimport { eventCreateItem, setNFTidx } from '../../utilityUnits/connMintService';\nimport { WaitModal } from '../waitModal';\n\nlet count = 0;\nlet intervalId = null;\n\nexport const SetItemCpnt = ({title, desc, toknUri, rightInfo}) => {\n  const SEND_ADDR = sessionStorage.getItem('chainid');\n  const navigate = useNavigate();\n  const [NumOfTokn, setNumOfTokn] = useState();\n  const [price, setValue] = useState();\n  const [PRIVATE_KEY, setPrivKey] = useState(null);\n  const [modalFlag, setFlag] = useState(false);\n  const [Royalty, setLowest] = useState(0);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    itemCreateEvtListener();\n  },[])\n\n  const exclusiveParsing = () => {\n    let result = rightInfo.split('/');\n    //console.log(result[1]);\n    if(result[1] === 'Exclusive'){\n      setActive(true);\n      setNumOfTokn(1);\n    }\n    else\n      setActive(false);\n  }\n  const setItem = async() => {\n    const royality = parseInt(Royalty*100000)+'0000000000000';\n    const value = parseInt(price*100000)+'0000000000000';\n    const tokenUri = rightInfo+toknUri;\n    //const saveItemIdx = await uploadItemIdx();\n    if(title !== '' && desc !== '' ){\n      setNFTidx(SEND_ADDR, PRIVATE_KEY, tokenUri, value, royality, NumOfTokn).then(\n        result => {\n          if(result === true){\n            intervalId = setInterval(() => {\n              if(count > 9){\n                stopTimer();\n                setFlag(false);\n                alert('입력하신 Private Key가 다른 주소의 키 같습니다\\n 키를 확인 후 다시 시도하여주십시오.')\n              }\n              else\n                ++count;\n            }, 1000);\n          }\n          else{\n            setFlag(false);\n            alert(`⚠️Err: ${result}`);\n          }\n        })\n      }\n    else{\n      setFlag(false);\n      alert('Please enter the title and description of the item to be uploaded');\n    }\n  }\n  const uploadItemIdx = async(_itemId) => {\n    const userId = await getUserId(SEND_ADDR);\n    const record = {\n      itemId: parseInt(_itemId),\n      title: title,\n      desc: desc,\n      hash: toknUri,\n      userId: userId\n    }\n    postUploadItemIdx(record).then(response => {\n      console.log('checka')\n      if(response){\n        setFlag(false);\n        stopTimer();\n        alert('🎉Successfully Created');\n        navigate(\"/\");\n      }\n    })\n  }\n  const itemCreateEvtListener = async() => {\n    console.log('wow')\n    // const listen = await eventCreateItem(SEND_ADDR);\n    eventCreateItem(SEND_ADDR).then(listen => {\n      if(listen){\n        uploadItemIdx(listen.itemId);\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n  return(\n    <>\n    {/* <button onClick={putDBtoknIDX}>temp</button> */}\n    <h3>아이템 판매정보 입력</h3>\n    <p>quantity: <input placeholder='quantity of token' onChange={(evt)=>setNumOfTokn(evt.target.value)} disabled={active}/></p>\n    <p>price: <input placeholder='price of token' onChange={(evt)=>setValue(evt.target.value)} /></p>\n    <p>royalties: <input placeholder='MATIC' onChange={(evt)=>setLowest(evt.target.value)} defaultValue='0'/></p>\n    <p>private Key: <input placeholder='input your private key to mint nft' onChange={(evt)=>setPrivKey(evt.target.value)} size='45'/></p>\n    <button onClick={() => {setFlag(true); setItem();}}>판매시작</button>\n    <WaitModal showFlag={modalFlag} />\n    </>\n  )\n}\nconst stopTimer = () => {\n  clearInterval(intervalId);\n  intervalId=null;\n  count = 0;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}