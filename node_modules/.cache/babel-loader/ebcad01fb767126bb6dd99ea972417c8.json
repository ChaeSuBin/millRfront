{"ast":null,"code":"import { mintingToken } from '../../utilityUnits/connMintService';\nimport { getUserId } from '../../api';\nlet count = 0;\nconst intervalId = useRef(null);\nexport const buyToknMint = async PRIVATE_KEY => {\n  console.log(PRIVATE_KEY);\n  const value = parseInt(status.price * 100000) + '0000000000000';\n  mintingToken(cid, PRIVATE_KEY, idxId, value).then(result => {\n    if (result === true) {\n      intervalId.current = setInterval(() => {\n        if (count > 9) {\n          clearInterval(intervalId);\n          set_w_Flag(false);\n          setFlag(false);\n          alert('입력하신 Private Key가 다른 주소의 키 같습니다\\n 키를 확인 후 다시 시도하여주십시오.');\n        } else ++count;\n      }, 1000);\n    } else {\n      set_w_Flag(false);\n      alert(`⚠️Err: ${result}`);\n    }\n  });\n};\nexport const serveToknIdx = async (_toknId, _remain) => {\n  const userId = await getUserId(cid);\n  const record = {\n    itemId: itemId,\n    toknId: _toknId,\n    userId: userId\n  };\n  console.log(record);\n\n  if (_remain == 1) {\n    console.log(_remain);\n    putItemClose({\n      itemID: idxId\n    });\n  }\n\n  postMintTokn(record).then(resultIdx => {\n    if (resultIdx) {\n      set_w_Flag(false);\n      setFlag(false);\n      clearInterval(intervalId.current);\n      intervalId.current = null;\n      alert('🎉Successfully purchased');\n      navigate(\"/\");\n    }\n  });\n};","map":{"version":3,"names":["mintingToken","getUserId","count","intervalId","useRef","buyToknMint","PRIVATE_KEY","console","log","value","parseInt","status","price","cid","idxId","then","result","current","setInterval","clearInterval","set_w_Flag","setFlag","alert","serveToknIdx","_toknId","_remain","userId","record","itemId","toknId","putItemClose","itemID","postMintTokn","resultIdx","navigate"],"sources":["/home/giparang/threadweb/fortune/client/src/components/detailPages/toknMint.js"],"sourcesContent":["import { mintingToken } from '../../utilityUnits/connMintService';\nimport { getUserId } from '../../api';\n\nlet count = 0;\nconst intervalId = useRef(null);\n\nexport const buyToknMint = async(PRIVATE_KEY) => {\n  console.log(PRIVATE_KEY);\n  const value = parseInt(status.price*100000) + '0000000000000';\n  mintingToken(cid, PRIVATE_KEY, idxId, value).then(result => {\n    if(result === true){\n      intervalId.current = setInterval(() => {\n        if(count > 9){\n          clearInterval(intervalId);\n          set_w_Flag(false); setFlag(false);\n          alert('입력하신 Private Key가 다른 주소의 키 같습니다\\n 키를 확인 후 다시 시도하여주십시오.')\n        }\n        else\n          ++count;\n      }, 1000);\n    }\n    else{\n      set_w_Flag(false);\n      alert(`⚠️Err: ${result}`);\n    }\n  })\n}\nexport const serveToknIdx = async(_toknId, _remain) => {\n  const userId = await getUserId(cid);\n  const record = {\n    itemId: itemId,\n    toknId: _toknId,\n    userId: userId\n  }\n  console.log(record);\n  if(_remain == 1){\n    console.log(_remain);\n    putItemClose({itemID: idxId});\n  }\n  postMintTokn(record).then(resultIdx => {\n    if(resultIdx){\n      set_w_Flag(false); setFlag(false);\n      clearInterval(intervalId.current);\n      intervalId.current=null;\n      alert('🎉Successfully purchased');\n      navigate(\"/\");}\n  })\n}"],"mappings":"AAAA,SAASA,YAAT,QAA6B,oCAA7B;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,IAAIC,KAAK,GAAG,CAAZ;AACA,MAAMC,UAAU,GAAGC,MAAM,CAAC,IAAD,CAAzB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAMC,WAAN,IAAsB;EAC/CC,OAAO,CAACC,GAAR,CAAYF,WAAZ;EACA,MAAMG,KAAK,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAP,GAAa,MAAd,CAAR,GAAgC,eAA9C;EACAZ,YAAY,CAACa,GAAD,EAAMP,WAAN,EAAmBQ,KAAnB,EAA0BL,KAA1B,CAAZ,CAA6CM,IAA7C,CAAkDC,MAAM,IAAI;IAC1D,IAAGA,MAAM,KAAK,IAAd,EAAmB;MACjBb,UAAU,CAACc,OAAX,GAAqBC,WAAW,CAAC,MAAM;QACrC,IAAGhB,KAAK,GAAG,CAAX,EAAa;UACXiB,aAAa,CAAChB,UAAD,CAAb;UACAiB,UAAU,CAAC,KAAD,CAAV;UAAmBC,OAAO,CAAC,KAAD,CAAP;UACnBC,KAAK,CAAC,wDAAD,CAAL;QACD,CAJD,MAME,EAAEpB,KAAF;MACH,CAR+B,EAQ7B,IAR6B,CAAhC;IASD,CAVD,MAWI;MACFkB,UAAU,CAAC,KAAD,CAAV;MACAE,KAAK,CAAE,UAASN,MAAO,EAAlB,CAAL;IACD;EACF,CAhBD;AAiBD,CApBM;AAqBP,OAAO,MAAMO,YAAY,GAAG,OAAMC,OAAN,EAAeC,OAAf,KAA2B;EACrD,MAAMC,MAAM,GAAG,MAAMzB,SAAS,CAACY,GAAD,CAA9B;EACA,MAAMc,MAAM,GAAG;IACbC,MAAM,EAAEA,MADK;IAEbC,MAAM,EAAEL,OAFK;IAGbE,MAAM,EAAEA;EAHK,CAAf;EAKAnB,OAAO,CAACC,GAAR,CAAYmB,MAAZ;;EACA,IAAGF,OAAO,IAAI,CAAd,EAAgB;IACdlB,OAAO,CAACC,GAAR,CAAYiB,OAAZ;IACAK,YAAY,CAAC;MAACC,MAAM,EAAEjB;IAAT,CAAD,CAAZ;EACD;;EACDkB,YAAY,CAACL,MAAD,CAAZ,CAAqBZ,IAArB,CAA0BkB,SAAS,IAAI;IACrC,IAAGA,SAAH,EAAa;MACXb,UAAU,CAAC,KAAD,CAAV;MAAmBC,OAAO,CAAC,KAAD,CAAP;MACnBF,aAAa,CAAChB,UAAU,CAACc,OAAZ,CAAb;MACAd,UAAU,CAACc,OAAX,GAAmB,IAAnB;MACAK,KAAK,CAAC,0BAAD,CAAL;MACAY,QAAQ,CAAC,GAAD,CAAR;IAAe;EAClB,CAPD;AAQD,CApBM"},"metadata":{},"sourceType":"module"}