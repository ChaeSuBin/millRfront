{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/createChainId.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { putChainId } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateChainId = _ref => {\n  let {\n    uid,\n    web3\n  } = _ref;\n  const DEBUG = 1;\n\n  const createAccount = () => {\n    const account = web3.eth.accounts.create();\n    const record = {\n      playerId: uid,\n      chainId: account.address\n    };\n    putChainId(record).then(result => {\n      if (result) {\n        if (confirm('確認ダイアログの例')) {\n          console.log('OKボタンが押されました。');\n        } else {\n          console.log('キャンセルボタンが押されました。');\n        }\n      }\n    });\n  };\n\n  const createAccounte = () => {\n    if (alert(`🎉Successfuly Created\\r\\n\n      CHAIN ID: 1222\\r\\n\n      PRIVATE KEY: 1222\\r\\n\n      비밀키는 반드시 메모장 등 자신만이 알 수 있는 곳에 옮겨 저장하십시오.\\r\\n\n      비밀키는 절대로 타인에게 알려주지 마십시오`)) {\n      window.location.reload();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createAccounte,\n      children: \"create chainId\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = CreateChainId;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChainId\");","map":{"version":3,"names":["React","useState","useEffect","putChainId","CreateChainId","uid","web3","DEBUG","createAccount","account","eth","accounts","create","record","playerId","chainId","address","then","result","confirm","console","log","createAccounte","alert","window","location","reload"],"sources":["/home/giparang/threadweb/fortune/client/src/components/createChainId.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { putChainId } from '../api';\n\nexport const CreateChainId = ({uid, web3}) => {\n  const DEBUG = 1;\n\n  const createAccount = () => {\n    const account = web3.eth.accounts.create();\n    const record = { \n      playerId: uid,\n      chainId : account.address\n    }\n\n    putChainId(record).then(result => {\n      if(result){\n        if (confirm('確認ダイアログの例')) {\n            console.log('OKボタンが押されました。')\n        } else {\n            console.log('キャンセルボタンが押されました。')\n        }\n      }\n    })\n  }\n\n  const createAccounte = () => {\n      if(alert(`🎉Successfuly Created\\r\\n\n      CHAIN ID: 1222\\r\\n\n      PRIVATE KEY: 1222\\r\\n\n      비밀키는 반드시 메모장 등 자신만이 알 수 있는 곳에 옮겨 저장하십시오.\\r\\n\n      비밀키는 절대로 타인에게 알려주지 마십시오`)){\n        window.location.reload();\n      }\n  }\n\n  return(\n    <>\n      <button onClick={createAccounte}>create chainId</button>\n    </>\n  )\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAiB;EAAA,IAAhB;IAACC,GAAD;IAAMC;EAAN,CAAgB;EAC5C,MAAMC,KAAK,GAAG,CAAd;;EAEA,MAAMC,aAAa,GAAG,MAAM;IAC1B,MAAMC,OAAO,GAAGH,IAAI,CAACI,GAAL,CAASC,QAAT,CAAkBC,MAAlB,EAAhB;IACA,MAAMC,MAAM,GAAG;MACbC,QAAQ,EAAET,GADG;MAEbU,OAAO,EAAGN,OAAO,CAACO;IAFL,CAAf;IAKAb,UAAU,CAACU,MAAD,CAAV,CAAmBI,IAAnB,CAAwBC,MAAM,IAAI;MAChC,IAAGA,MAAH,EAAU;QACR,IAAIC,OAAO,CAAC,WAAD,CAAX,EAA0B;UACtBC,OAAO,CAACC,GAAR,CAAY,eAAZ;QACH,CAFD,MAEO;UACHD,OAAO,CAACC,GAAR,CAAY,kBAAZ;QACH;MACF;IACF,CARD;EASD,CAhBD;;EAkBA,MAAMC,cAAc,GAAG,MAAM;IACzB,IAAGC,KAAK,CAAE;AAChB;AACA;AACA;AACA,8BAJc,CAAR,EAI0B;MACxBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACD;EACJ,CARD;;EAUA,oBACE;IAAA,uBACE;MAAQ,OAAO,EAAEJ,cAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKD,CApCM;KAAMlB,a"},"metadata":{},"sourceType":"module"}