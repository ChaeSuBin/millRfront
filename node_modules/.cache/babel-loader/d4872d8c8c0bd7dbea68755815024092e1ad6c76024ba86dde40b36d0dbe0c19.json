{"ast":null,"code":"import { getItem, getFileList, getItemTitle } from \"../../api\";\nexport const getItemInfo = async _rowId => {\n  return new Promise(resolve => {\n    getItem(_rowId).then(item => {\n      resolve({\n        title: item.title,\n        desc: item.description,\n        hash: item.hash,\n        itemId: item.itemid,\n        tempdonate: item.tempdonate\n      });\n    });\n  });\n};\nexport const getItemInfoFromToknId = async _toknId => {\n  return new Promise(resolve => {\n    getItemTitle(_toknId).then(item => {\n      resolve({\n        title: item.title,\n        desc: item.description,\n        hash: item.hash,\n        itemId: _toknId\n      });\n    });\n  });\n};\nexport const getItemFiles = _fileHash => {\n  return new Promise(resolve => {\n    getFileList(_fileHash).then(result => {\n      resolve(result);\n    });\n  });\n};","map":{"version":3,"names":["getItem","getFileList","getItemTitle","getItemInfo","_rowId","Promise","resolve","then","item","title","desc","description","hash","itemId","itemid","tempdonate","getItemInfoFromToknId","_toknId","getItemFiles","_fileHash","result"],"sources":["/home/giparang/threadweb/fortune/client/src/components/detailPages/setItemIDX.js"],"sourcesContent":["import { getItem, getFileList, getItemTitle } from \"../../api\";\n\nexport const getItemInfo = async(_rowId) => {\n    return new Promise(resolve => {\n        getItem(_rowId).then(item => {\n            resolve({\n                title: item.title,\n                desc: item.description,\n                hash: item.hash,\n                itemId: item.itemid,\n                tempdonate: item.tempdonate\n            })\n        })\n    })\n}\nexport const getItemInfoFromToknId = async(_toknId) => {\n    return new Promise(resolve => {\n        getItemTitle(_toknId).then(item => {\n            resolve({\n                title: item.title,\n                desc: item.description,\n                hash: item.hash,\n                itemId: _toknId\n            })\n        })\n    })\n}\nexport const getItemFiles = (_fileHash) => {\n    return new Promise(resolve => {\n        getFileList(_fileHash).then(result => {\n            resolve(result);\n        })\n    })\n}"],"mappings":"AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,YAAY,QAAQ,WAAW;AAE9D,OAAO,MAAMC,WAAW,GAAG,MAAMC,MAAM,IAAK;EACxC,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;IAC1BN,OAAO,CAACI,MAAM,CAAC,CAACG,IAAI,CAACC,IAAI,IAAI;MACzBF,OAAO,CAAC;QACJG,KAAK,EAAED,IAAI,CAACC,KAAK;QACjBC,IAAI,EAAEF,IAAI,CAACG,WAAW;QACtBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,MAAM,EAAEL,IAAI,CAACM,MAAM;QACnBC,UAAU,EAAEP,IAAI,CAACO;MACrB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAMC,qBAAqB,GAAG,MAAMC,OAAO,IAAK;EACnD,OAAO,IAAIZ,OAAO,CAACC,OAAO,IAAI;IAC1BJ,YAAY,CAACe,OAAO,CAAC,CAACV,IAAI,CAACC,IAAI,IAAI;MAC/BF,OAAO,CAAC;QACJG,KAAK,EAAED,IAAI,CAACC,KAAK;QACjBC,IAAI,EAAEF,IAAI,CAACG,WAAW;QACtBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,MAAM,EAAEI;MACZ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAMC,YAAY,GAAIC,SAAS,IAAK;EACvC,OAAO,IAAId,OAAO,CAACC,OAAO,IAAI;IAC1BL,WAAW,CAACkB,SAAS,CAAC,CAACZ,IAAI,CAACa,MAAM,IAAI;MAClCd,OAAO,CAACc,MAAM,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}