{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/pages/wallet.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { getApproveState, getDeposit } from \"../utilityUnits/connMintService\";\nimport { Help } from \"../components/helpCpnt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Wallet = _ref => {\n  _s();\n\n  let {\n    web3,\n    ADDR\n  } = _ref;\n  const [seller, setSeller] = useState(false);\n  const [money, setMoney] = useState();\n  const [balance, setBalance] = useState();\n  const [rcvAcc, setRcvAddress] = useState('');\n  const [PRIVATE_KEY, setPriv] = useState(null);\n  const [modalFlag2, setFlag2] = useState(false);\n  const [helpMode, setHelpMod] = useState();\n  useEffect(() => {\n    sellerCheck();\n    getUserBal();\n  }, []);\n\n  const sellerCheck = async () => {\n    getApproveState(ADDR).then(result => {\n      setSeller(result);\n    });\n  };\n\n  const getUserBal = async () => {\n    let salesPrice = await getDeposit(ADDR);\n    web3.eth.getBalance(ADDR).then(balanc => {\n      let count = 0;\n\n      do {\n        balanc /= 1000000;\n        salesPrice /= 1000000;\n        ++count;\n      } while (count < 3);\n\n      setBalance(balanc);\n      setMoney(salesPrice);\n    });\n  };\n\n  const sendCoin = async () => {\n    const nonce = await web3.eth.getTransactionCount(ADDR, 'latest'); // nonce starts counting from 0\n\n    console.log(nonce);\n    const transaction = {\n      'to': rcvAcc,\n      // faucet address to return eth\n      'value': 10000000000000000,\n      'gas': 30000,\n      'nonce': nonce // optional data field to send message or execute smart contract\n\n    };\n    const signedTx = await web3.eth.accounts.signTransaction(transaction, PRIVATE_KEY);\n    web3.eth.sendSignedTransaction(signedTx.rawTransaction, function (error, hash) {\n      if (!error) console.log(\"🎉 The hash of your transaction is: \", hash, \"\\n Check Polygon Scan to view the status of your transaction!\");else console.log(\"❗Something went wrong while submitting your transaction:\", error);\n    });\n  };\n\n  const helpOpen = (evt, helpMode) => {\n    setFlag2(true);\n    setHelpMod(helpMode);\n    document.addEventListener('click', helpClose);\n    evt.stopPropagation();\n  };\n\n  const helpClose = () => {\n    setFlag2(false);\n    document.removeEventListener('click', helpClose);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"balance: \", balance, \" MATIC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          cursor: \"help\"\n        },\n        onClick: evt => helpOpen(evt, 2),\n        children: [\"Earning price of Item sales: \", money, \" MATIC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          cursor: \"help\"\n        },\n        onClick: evt => helpOpen(evt, 2),\n        children: [\"Earning price of NFT sales: \", money, \" MATIC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\" PRIVATE_KEY :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: evt => setPriv(evt.target.value),\n        size: \"45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendCoin,\n        children: \"send coin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: evt => setRcvAddress(evt.target.value),\n        placeholder: \"receiver Address 0x...\",\n        size: \"45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Help, {\n      showFlag: modalFlag2,\n      display: helpMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Wallet, \"sJxAFNKdMKDpewK8ffEG9ksGHtU=\");\n\n_c = Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useState","useEffect","getApproveState","getDeposit","Help","Wallet","web3","ADDR","seller","setSeller","money","setMoney","balance","setBalance","rcvAcc","setRcvAddress","PRIVATE_KEY","setPriv","modalFlag2","setFlag2","helpMode","setHelpMod","sellerCheck","getUserBal","then","result","salesPrice","eth","getBalance","balanc","count","sendCoin","nonce","getTransactionCount","console","log","transaction","signedTx","accounts","signTransaction","sendSignedTransaction","rawTransaction","error","hash","helpOpen","evt","document","addEventListener","helpClose","stopPropagation","removeEventListener","cursor","target","value"],"sources":["/home/giparang/threadweb/fortune/client/src/pages/wallet.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { \n  getApproveState,\n  getDeposit,\n} from \"../utilityUnits/connMintService\";\nimport { Help } from \"../components/helpCpnt\";\n\nexport const Wallet = ({web3, ADDR}) => {\n  const [seller, setSeller] = useState(false);\n  const [money, setMoney] = useState();\n  const [balance, setBalance] = useState();\n  const [rcvAcc ,setRcvAddress] = useState('');\n  const [PRIVATE_KEY, setPriv] = useState(null);\n  const [modalFlag2, setFlag2] = useState(false);\n  const [helpMode, setHelpMod] = useState();\n\n  useEffect(() => {\n    sellerCheck();\n    getUserBal();\n  },[]);\n\n  const sellerCheck = async() => {\n    getApproveState(ADDR).then(result => {\n      setSeller(result);\n    })\n  }\n  \n  const getUserBal = async() => {\n    let salesPrice = await getDeposit(ADDR);\n    web3.eth.getBalance(ADDR).then(balanc => {\n      let count = 0;\n      do{\n        balanc /= 1000000;\n        salesPrice /= 1000000;\n        ++count;\n      }while(count < 3)\n      setBalance(balanc);\n      setMoney(salesPrice);\n    })\n  }\n\n  const sendCoin = async() => {\n    const nonce = await web3.eth.getTransactionCount(ADDR, 'latest'); // nonce starts counting from 0\n    console.log(nonce)\n    const transaction = {\n     'to': rcvAcc, // faucet address to return eth\n     'value': 10000000000000000,\n     'gas': 30000,\n     'nonce': nonce,\n     // optional data field to send message or execute smart contract\n    };\n    const signedTx = await web3.eth.accounts.signTransaction(transaction, PRIVATE_KEY);\n\n    web3.eth.sendSignedTransaction(signedTx.rawTransaction, function(error, hash) {\n\n      if (!error)\n        console.log(\"🎉 The hash of your transaction is: \", hash, \"\\n Check Polygon Scan to view the status of your transaction!\");\n      else\n        console.log(\"❗Something went wrong while submitting your transaction:\", error);\n    });\n  }\n\n  const helpOpen = (evt, helpMode) => {\n    setFlag2(true);\n    setHelpMod(helpMode);\n    document.addEventListener('click', helpClose);\n    evt.stopPropagation();\n  }\n  const helpClose = () => {\n    setFlag2(false);\n    document.removeEventListener('click', helpClose);\n  }\n\n  return (\n  <>\n    <h2>wallet</h2>\n    <h4>balance: {balance} MATIC</h4>\n    <h4><a style={{cursor: \"help\"}} onClick={(evt)=>helpOpen(evt, 2)}>Earning price of Item sales: {money} MATIC</a></h4>\n    <h4><a style={{cursor: \"help\"}} onClick={(evt)=>helpOpen(evt, 2)}>Earning price of NFT sales: {money} MATIC</a></h4>\n    <h5> PRIVATE_KEY :\n      <input onChange={(evt)=>setPriv(evt.target.value)} size='45'></input></h5>\n    <h5><button onClick={sendCoin}>send coin</button> :\n      <input onChange={(evt)=>setRcvAddress(evt.target.value)} placeholder='receiver Address 0x...' size='45'></input></h5>\n    <Help\n      showFlag={modalFlag2}\n      display = {helpMode}\n    />\n  </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}