{"ast":null,"code":"import{getFileHash,SHA256}from\"./SHA256\";export var fileToHash=function fileToHash(_fileBuffer,setFileHash){var fileNum=0;var fileHashArr=[];do{console.log('processing...');fileHashArr.push(getFileHash(_fileBuffer[fileNum].join('')));++fileNum;}while(_fileBuffer.length>fileNum);console.log('-done-');setFileHash(fileHashArr);return fileHashArr;};export var setFinalHash=function setFinalHash(str){var finalHash=SHA256(str);return finalHash;};","map":{"version":3,"names":["getFileHash","SHA256","fileToHash","_fileBuffer","setFileHash","fileNum","fileHashArr","console","log","push","join","length","setFinalHash","str","finalHash"],"sources":["/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToHash.js"],"sourcesContent":["import { getFileHash, SHA256 } from \"./SHA256\";\n\nexport const fileToHash = (_fileBuffer, setFileHash) => {\n  let fileNum = 0\n  let fileHashArr = [];\n  \n  do {\n    console.log('processing...');\n    fileHashArr.push(getFileHash(_fileBuffer[fileNum].join('')));\n    ++fileNum;\n  } while (_fileBuffer.length > fileNum);\n  console.log('-done-');\n\n  setFileHash(fileHashArr);\n  return(fileHashArr);\n}\n\nexport const setFinalHash = (str) => {\n  const finalHash = SHA256(str);\n  return finalHash;\n}"],"mappings":"AAAA,OAASA,WAAW,CAAEC,MAAM,KAAQ,UAAU,CAE9C,MAAO,IAAMC,WAAU,CAAG,QAAbA,WAAU,CAAIC,WAAW,CAAEC,WAAW,CAAK,CACtD,GAAIC,QAAO,CAAG,CAAC,CACf,GAAIC,YAAW,CAAG,EAAE,CAEpB,EAAG,CACDC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC5BF,WAAW,CAACG,IAAI,CAACT,WAAW,CAACG,WAAW,CAACE,OAAO,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAC5D,EAAEL,OAAO,CACX,CAAC,MAAQF,WAAW,CAACQ,MAAM,CAAGN,OAAO,EACrCE,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAErBJ,WAAW,CAACE,WAAW,CAAC,CACxB,MAAOA,YAAW,CACpB,CAAC,CAED,MAAO,IAAMM,aAAY,CAAG,QAAfA,aAAY,CAAIC,GAAG,CAAK,CACnC,GAAMC,UAAS,CAAGb,MAAM,CAACY,GAAG,CAAC,CAC7B,MAAOC,UAAS,CAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}