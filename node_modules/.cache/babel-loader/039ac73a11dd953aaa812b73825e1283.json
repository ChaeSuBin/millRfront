{"ast":null,"code":"import { fileToHash } from \"./fileToHash\";\nexport const onFileInputChange = async (e, setBuffer, setFileInfo, setFileHash) => {\n  const getfileBuffer = () => {\n    const fileByteArray = [];\n    const fileInfo = [];\n    let fileNum = 0;\n    return new Promise((resolve, reject) => {\n      while (e.target.files.length > fileNum) {\n        const reader = new FileReader();\n        const fileBufferArray = [];\n        fileInfo.push({\n          name: e.target.files[fileNum].name,\n          type: e.target.files[fileNum].type,\n          size: e.target.files[fileNum].size\n        }); //console.log(e.target.files[fileNum]);\n\n        reader.readAsArrayBuffer(e.target.files[fileNum]);\n\n        reader.onloadend = _evt => {\n          if (_evt.target.readyState === FileReader.DONE) {\n            const arrayBuffer = _evt.target.result,\n                  array = new Uint8Array(arrayBuffer);\n\n            for (const a of array) {\n              fileBufferArray.push(a);\n            }\n\n            fileByteArray.push(fileBufferArray);\n          }\n        };\n\n        ++fileNum;\n      }\n\n      resolve(fileByteArray);\n    });\n  };\n\n  console.log(await getfileBuffer()); // setBuffer(fileByteArray);\n  // setFileInfo(fileInfo);\n  // setTimeout(() => {\n  //   fileToHash(fileByteArray, setFileHash);\n  // }, 1000);\n};","map":{"version":3,"names":["fileToHash","onFileInputChange","e","setBuffer","setFileInfo","setFileHash","getfileBuffer","fileByteArray","fileInfo","fileNum","Promise","resolve","reject","target","files","length","reader","FileReader","fileBufferArray","push","name","type","size","readAsArrayBuffer","onloadend","_evt","readyState","DONE","arrayBuffer","result","array","Uint8Array","a","console","log"],"sources":["/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToBuffer.js"],"sourcesContent":["import { fileToHash } from \"./fileToHash\";\n\nexport const onFileInputChange = async(e, setBuffer, setFileInfo, setFileHash) => {\n  \n\n  const getfileBuffer = () => {\n    const fileByteArray = [];\n    const fileInfo = [];\n    let fileNum = 0;\n    return new Promise((resolve, reject) => {\n      while(e.target.files.length > fileNum){\n        const reader = new FileReader();\n        const fileBufferArray = [];\n            \n        fileInfo.push({\n          name: e.target.files[fileNum].name,\n          type: e.target.files[fileNum].type,\n          size: e.target.files[fileNum].size\n        })\n        //console.log(e.target.files[fileNum]);\n        reader.readAsArrayBuffer(e.target.files[fileNum]);\n        reader.onloadend = (_evt) => {\n          if (_evt.target.readyState === FileReader.DONE) {\n            const arrayBuffer = _evt.target.result,\n            array = new Uint8Array(arrayBuffer);\n            for (const a of array) {\n              fileBufferArray.push(a);\n            }\n            fileByteArray.push(fileBufferArray);\n          }\n        }\n        ++fileNum;\n      }\n      resolve(fileByteArray);\n    })\n  }\n  console.log(await getfileBuffer());\n  \n  // setBuffer(fileByteArray);\n  // setFileInfo(fileInfo);\n  \n  // setTimeout(() => {\n  //   fileToHash(fileByteArray, setFileHash);\n  // }, 1000);\n}"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAMC,CAAN,EAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,KAAiD;EAGhF,MAAMC,aAAa,GAAG,MAAM;IAC1B,MAAMC,aAAa,GAAG,EAAtB;IACA,MAAMC,QAAQ,GAAG,EAAjB;IACA,IAAIC,OAAO,GAAG,CAAd;IACA,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtC,OAAMV,CAAC,CAACW,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwBN,OAA9B,EAAsC;QACpC,MAAMO,MAAM,GAAG,IAAIC,UAAJ,EAAf;QACA,MAAMC,eAAe,GAAG,EAAxB;QAEAV,QAAQ,CAACW,IAAT,CAAc;UACZC,IAAI,EAAElB,CAAC,CAACW,MAAF,CAASC,KAAT,CAAeL,OAAf,EAAwBW,IADlB;UAEZC,IAAI,EAAEnB,CAAC,CAACW,MAAF,CAASC,KAAT,CAAeL,OAAf,EAAwBY,IAFlB;UAGZC,IAAI,EAAEpB,CAAC,CAACW,MAAF,CAASC,KAAT,CAAeL,OAAf,EAAwBa;QAHlB,CAAd,EAJoC,CASpC;;QACAN,MAAM,CAACO,iBAAP,CAAyBrB,CAAC,CAACW,MAAF,CAASC,KAAT,CAAeL,OAAf,CAAzB;;QACAO,MAAM,CAACQ,SAAP,GAAoBC,IAAD,IAAU;UAC3B,IAAIA,IAAI,CAACZ,MAAL,CAAYa,UAAZ,KAA2BT,UAAU,CAACU,IAA1C,EAAgD;YAC9C,MAAMC,WAAW,GAAGH,IAAI,CAACZ,MAAL,CAAYgB,MAAhC;YAAA,MACAC,KAAK,GAAG,IAAIC,UAAJ,CAAeH,WAAf,CADR;;YAEA,KAAK,MAAMI,CAAX,IAAgBF,KAAhB,EAAuB;cACrBZ,eAAe,CAACC,IAAhB,CAAqBa,CAArB;YACD;;YACDzB,aAAa,CAACY,IAAd,CAAmBD,eAAnB;UACD;QACF,CATD;;QAUA,EAAET,OAAF;MACD;;MACDE,OAAO,CAACJ,aAAD,CAAP;IACD,CAzBM,CAAP;EA0BD,CA9BD;;EA+BA0B,OAAO,CAACC,GAAR,CAAY,MAAM5B,aAAa,EAA/B,EAlCgF,CAoChF;EACA;EAEA;EACA;EACA;AACD,CA1CM"},"metadata":{},"sourceType":"module"}