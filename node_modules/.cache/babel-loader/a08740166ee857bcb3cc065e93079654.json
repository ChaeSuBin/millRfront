{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/interactionTe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MintServiceABI from '../contracts/MintService.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Interaction = _ref => {\n  _s();\n\n  let {\n    SEND_ADDR,\n    PRIVATE_KEY,\n    web3\n  } = _ref;\n  const [mintService, setService] = useState(null);\n  const [nonce, setNonce] = useState();\n  const [chainId, setChainId] = useState();\n  useEffect(() => {\n    if (web3 !== null && SEND_ADDR !== null) {\n      setSignData();\n    } else {\n      console.log('wow');\n    }\n  }, [web3, SEND_ADDR]);\n\n  const setSignData = async () => {\n    const mintService = new web3.eth.Contract(MintServiceABI, '0x306a271F178aD37083cDA734F3Aca694FF301B0F');\n    setService(mintService);\n    const nonce = await web3.eth.getTransactionCount(SEND_ADDR, 'latest');\n    console.log('nonce: ', nonce);\n    setNonce(nonce);\n    const chainId = await web3.eth.getChainId();\n    console.log('chainId: ', chainId);\n    setChainId(chainId);\n  };\n\n  const getSymbol = () => {\n    mintService.methods.symbol().call().then(symbol => {\n      console.log('Tokn Symbol: ', symbol);\n    }, err => {\n      console.log('err: ', err);\n    });\n  };\n\n  const setNFT = async () => {\n    const method = mintService.methods.CreateItem(SEND_ADDR, 'createTestUriInJS', 7);\n    const code = await method.encodeABI();\n    const gas = await method.estimateGas({\n      from: SEND_ADDR\n    });\n    const gasPrice = await web3.eth.getGasPrice();\n    const tx = {\n      nonce: nonce,\n      chainId: chainId,\n      from: SEND_ADDR,\n      value: '0',\n      data: code,\n      gasPrice: gasPrice,\n      gas: gas\n    }; //console.log(tx);\n\n    const signedTx = await web3.eth.accounts.signTransaction(tx, PRIVATE_KEY);\n    web3.eth.sendSignedTransaction(signedTx.rawTransaction, function (error, hash) {\n      if (!error) console.log(\"üéâ The hash of your transaction is: \", hash, \"\\n Check Polygon Scan to view the status of your transaction!\");else console.log(\"‚ùóSomething went wrong while submitting your transaction:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contract Interaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getSymbol,\n      children: \"getSymbol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setNFT,\n      children: \"createItems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Interaction, \"iWZ9sl8inIk59/rewc87VruRXRQ=\");\n\n_c = Interaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"Interaction\");","map":{"version":3,"names":["React","useState","useEffect","MintServiceABI","Interaction","SEND_ADDR","PRIVATE_KEY","web3","mintService","setService","nonce","setNonce","chainId","setChainId","setSignData","console","log","eth","Contract","getTransactionCount","getChainId","getSymbol","methods","symbol","call","then","err","setNFT","method","CreateItem","code","encodeABI","gas","estimateGas","from","gasPrice","getGasPrice","tx","value","data","signedTx","accounts","signTransaction","sendSignedTransaction","rawTransaction","error","hash"],"sources":["/home/giparang/threadweb/fortune/client/src/components/interactionTe.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MintServiceABI from '../contracts/MintService.json';\n\nexport const Interaction = ({SEND_ADDR, PRIVATE_KEY, web3}) => {\n  const [mintService, setService] = useState(null);\n  const [nonce, setNonce] = useState();\n  const [chainId, setChainId] = useState();\n  \n  useEffect(() => {\n    if(web3 !== null && SEND_ADDR !==null ){\n      setSignData();\n    }\n    else{\n      console.log('wow');}\n  },[web3, SEND_ADDR])\n\n  const setSignData = async() => {\n    const mintService = new web3.eth.Contract(\n      MintServiceABI, '0x306a271F178aD37083cDA734F3Aca694FF301B0F'\n    )\n    setService(mintService);\n    \n    const nonce = await web3.eth.getTransactionCount(SEND_ADDR, 'latest');\n    console.log('nonce: ', nonce);\n    setNonce(nonce);\n\n    const chainId = await web3.eth.getChainId();\n    console.log('chainId: ', chainId);\n    setChainId(chainId);\n    \n  }\n  const getSymbol = () => {\n    mintService.methods.symbol().call().then(\n      symbol => {\n        console.log('Tokn Symbol: ', symbol);\n    },err => { \n      console.log('err: ', err); \n    })\n  }\n  const setNFT = async() => {\n    const method = mintService.methods.CreateItem(SEND_ADDR, 'createTestUriInJS', 7);\n    const code = await method.encodeABI();\n    const gas = await method.estimateGas({from: SEND_ADDR});\n    const gasPrice = await web3.eth.getGasPrice();\n\n    const tx = {\n      nonce: nonce,\n      chainId: chainId,\n      from: SEND_ADDR,\n      value: '0',\n      data: code,\n      gasPrice: gasPrice,\n      gas: gas\n    };\n    //console.log(tx);\n    const signedTx = await web3.eth.accounts.signTransaction(tx, PRIVATE_KEY);\n\n    web3.eth.sendSignedTransaction(signedTx.rawTransaction, function(error, hash) {\n      if (!error)\n        console.log(\"üéâ The hash of your transaction is: \", hash, \"\\n Check Polygon Scan to view the status of your transaction!\");\n      else\n        console.log(\"‚ùóSomething went wrong while submitting your transaction:\", error);\n    });\n  }\n\n  return(\n    <>\n      <h2>Contract Interaction</h2>\n      <button onClick={getSymbol}>getSymbol</button>\n      <button onClick={setNFT}>createItems</button>\n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAoC;EAAA;;EAAA,IAAnC;IAACC,SAAD;IAAYC,WAAZ;IAAyBC;EAAzB,CAAmC;EAC7D,MAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC;EAEAC,SAAS,CAAC,MAAM;IACd,IAAGK,IAAI,KAAK,IAAT,IAAiBF,SAAS,KAAI,IAAjC,EAAuC;MACrCS,WAAW;IACZ,CAFD,MAGI;MACFC,OAAO,CAACC,GAAR,CAAY,KAAZ;IAAoB;EACvB,CANQ,EAMP,CAACT,IAAD,EAAOF,SAAP,CANO,CAAT;;EAQA,MAAMS,WAAW,GAAG,YAAW;IAC7B,MAAMN,WAAW,GAAG,IAAID,IAAI,CAACU,GAAL,CAASC,QAAb,CAClBf,cADkB,EACF,4CADE,CAApB;IAGAM,UAAU,CAACD,WAAD,CAAV;IAEA,MAAME,KAAK,GAAG,MAAMH,IAAI,CAACU,GAAL,CAASE,mBAAT,CAA6Bd,SAA7B,EAAwC,QAAxC,CAApB;IACAU,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;IACAC,QAAQ,CAACD,KAAD,CAAR;IAEA,MAAME,OAAO,GAAG,MAAML,IAAI,CAACU,GAAL,CAASG,UAAT,EAAtB;IACAL,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,OAAzB;IACAC,UAAU,CAACD,OAAD,CAAV;EAED,CAdD;;EAeA,MAAMS,SAAS,GAAG,MAAM;IACtBb,WAAW,CAACc,OAAZ,CAAoBC,MAApB,GAA6BC,IAA7B,GAAoCC,IAApC,CACEF,MAAM,IAAI;MACRR,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BO,MAA7B;IACH,CAHD,EAGEG,GAAG,IAAI;MACPX,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBU,GAArB;IACD,CALD;EAMD,CAPD;;EAQA,MAAMC,MAAM,GAAG,YAAW;IACxB,MAAMC,MAAM,GAAGpB,WAAW,CAACc,OAAZ,CAAoBO,UAApB,CAA+BxB,SAA/B,EAA0C,mBAA1C,EAA+D,CAA/D,CAAf;IACA,MAAMyB,IAAI,GAAG,MAAMF,MAAM,CAACG,SAAP,EAAnB;IACA,MAAMC,GAAG,GAAG,MAAMJ,MAAM,CAACK,WAAP,CAAmB;MAACC,IAAI,EAAE7B;IAAP,CAAnB,CAAlB;IACA,MAAM8B,QAAQ,GAAG,MAAM5B,IAAI,CAACU,GAAL,CAASmB,WAAT,EAAvB;IAEA,MAAMC,EAAE,GAAG;MACT3B,KAAK,EAAEA,KADE;MAETE,OAAO,EAAEA,OAFA;MAGTsB,IAAI,EAAE7B,SAHG;MAITiC,KAAK,EAAE,GAJE;MAKTC,IAAI,EAAET,IALG;MAMTK,QAAQ,EAAEA,QAND;MAOTH,GAAG,EAAEA;IAPI,CAAX,CANwB,CAexB;;IACA,MAAMQ,QAAQ,GAAG,MAAMjC,IAAI,CAACU,GAAL,CAASwB,QAAT,CAAkBC,eAAlB,CAAkCL,EAAlC,EAAsC/B,WAAtC,CAAvB;IAEAC,IAAI,CAACU,GAAL,CAAS0B,qBAAT,CAA+BH,QAAQ,CAACI,cAAxC,EAAwD,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;MAC5E,IAAI,CAACD,KAAL,EACE9B,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoD8B,IAApD,EAA0D,+DAA1D,EADF,KAGE/B,OAAO,CAACC,GAAR,CAAY,0DAAZ,EAAwE6B,KAAxE;IACH,CALD;EAMD,CAxBD;;EA0BA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAExB,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEM,MAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD,CArEM;;GAAMvB,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}