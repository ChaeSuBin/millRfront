{"ast":null,"code":"import { getFileHash } from \"./SHA256\";\n\nconst fileToHash = (_fileBuffer, setFileHash) => {\n  let fileNum = 0;\n  let fileHashArr = [];\n\n  do {\n    //console.log(getFileHash(fileBuffer[fileNum].join('')));\n    fileHashArr.push(getFileHash(_fileBuffer[fileNum].join('')));\n    ++fileNum;\n  } while (_fileBuffer.length > fileNum);\n\n  console.log(fileHashArr); //setFileHash(fileHashArr);\n};","map":{"version":3,"names":["getFileHash","fileToHash","_fileBuffer","setFileHash","fileNum","fileHashArr","push","join","length","console","log"],"sources":["/home/giparang/threadweb/fortune/client/src/components/fileToHash.js"],"sourcesContent":["import { getFileHash } from \"./SHA256\";\nconst fileToHash = (_fileBuffer, setFileHash) => {\n    let fileNum = 0\n    let fileHashArr = [];\n\n    do {\n      //console.log(getFileHash(fileBuffer[fileNum].join('')));\n      fileHashArr.push(getFileHash(_fileBuffer[fileNum].join('')));\n      ++fileNum;\n    } while (_fileBuffer.length > fileNum);\n    console.log(fileHashArr);\n    //setFileHash(fileHashArr);\n  }"],"mappings":"AAAA,SAASA,WAAT,QAA4B,UAA5B;;AACA,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAcC,WAAd,KAA8B;EAC7C,IAAIC,OAAO,GAAG,CAAd;EACA,IAAIC,WAAW,GAAG,EAAlB;;EAEA,GAAG;IACD;IACAA,WAAW,CAACC,IAAZ,CAAiBN,WAAW,CAACE,WAAW,CAACE,OAAD,CAAX,CAAqBG,IAArB,CAA0B,EAA1B,CAAD,CAA5B;IACA,EAAEH,OAAF;EACD,CAJD,QAISF,WAAW,CAACM,MAAZ,GAAqBJ,OAJ9B;;EAKAK,OAAO,CAACC,GAAR,CAAYL,WAAZ,EAT6C,CAU7C;AACD,CAXH"},"metadata":{},"sourceType":"module"}