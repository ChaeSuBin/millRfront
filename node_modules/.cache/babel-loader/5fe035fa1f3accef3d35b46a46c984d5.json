{"ast":null,"code":"export const onFileInputChange = (e, _setBuffer, _setFileInfo) => {\n  const fileByteArray = [];\n  let fileNum = 0;\n\n  while (e.target.files.length > fileNum) {\n    //console.log(fileNum);\n    const reader = new FileReader();\n    const fileBufferArray = [];\n    fileInfo[fileNum] = {\n      name: e.target.files[fileNum].name,\n      type: e.target.files[fileNum].type,\n      size: e.target.files[fileNum].size\n    };\n    reader.readAsArrayBuffer(e.target.files[fileNum]);\n\n    reader.onloadend = _evt => {\n      if (_evt.target.readyState === FileReader.DONE) {\n        const arrayBuffer = _evt.target.result,\n              array = new Uint8Array(arrayBuffer);\n\n        for (const a of array) {\n          fileBufferArray.push(a);\n        }\n\n        fileByteArray.push(fileBufferArray); //console.log(fileByteArray);\n      }\n    };\n\n    ++fileNum;\n  }\n\n  _setBuffer(fileByteArray);\n\n  _setFileInfo(fileInfo);\n};","map":{"version":3,"names":["onFileInputChange","e","_setBuffer","_setFileInfo","fileByteArray","fileNum","target","files","length","reader","FileReader","fileBufferArray","fileInfo","name","type","size","readAsArrayBuffer","onloadend","_evt","readyState","DONE","arrayBuffer","result","array","Uint8Array","a","push"],"sources":["/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToBuffer.js"],"sourcesContent":["\nexport const onFileInputChange = (e, _setBuffer, _setFileInfo) => {\n  const fileByteArray = [];\n  let fileNum = 0;\n    \n  while(e.target.files.length > fileNum){\n    //console.log(fileNum);\n    const reader = new FileReader();\n    const fileBufferArray = [];\n        \n    fileInfo[fileNum]={\n      name: e.target.files[fileNum].name,\n      type: e.target.files[fileNum].type,\n      size: e.target.files[fileNum].size\n    }\n    reader.readAsArrayBuffer(e.target.files[fileNum]);\n    reader.onloadend = (_evt) => {\n      if (_evt.target.readyState === FileReader.DONE) {\n        const arrayBuffer = _evt.target.result,\n        array = new Uint8Array(arrayBuffer);\n        for (const a of array) {\n          fileBufferArray.push(a);\n        }\n        fileByteArray.push(fileBufferArray);\n        //console.log(fileByteArray);\n      }\n    }\n    ++fileNum;\n  }\n  _setBuffer(fileByteArray);\n  _setFileInfo(fileInfo);\n}"],"mappings":"AACA,OAAO,MAAMA,iBAAiB,GAAG,CAACC,CAAD,EAAIC,UAAJ,EAAgBC,YAAhB,KAAiC;EAChE,MAAMC,aAAa,GAAG,EAAtB;EACA,IAAIC,OAAO,GAAG,CAAd;;EAEA,OAAMJ,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwBH,OAA9B,EAAsC;IACpC;IACA,MAAMI,MAAM,GAAG,IAAIC,UAAJ,EAAf;IACA,MAAMC,eAAe,GAAG,EAAxB;IAEAC,QAAQ,CAACP,OAAD,CAAR,GAAkB;MAChBQ,IAAI,EAAEZ,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeF,OAAf,EAAwBQ,IADd;MAEhBC,IAAI,EAAEb,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeF,OAAf,EAAwBS,IAFd;MAGhBC,IAAI,EAAEd,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeF,OAAf,EAAwBU;IAHd,CAAlB;IAKAN,MAAM,CAACO,iBAAP,CAAyBf,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeF,OAAf,CAAzB;;IACAI,MAAM,CAACQ,SAAP,GAAoBC,IAAD,IAAU;MAC3B,IAAIA,IAAI,CAACZ,MAAL,CAAYa,UAAZ,KAA2BT,UAAU,CAACU,IAA1C,EAAgD;QAC9C,MAAMC,WAAW,GAAGH,IAAI,CAACZ,MAAL,CAAYgB,MAAhC;QAAA,MACAC,KAAK,GAAG,IAAIC,UAAJ,CAAeH,WAAf,CADR;;QAEA,KAAK,MAAMI,CAAX,IAAgBF,KAAhB,EAAuB;UACrBZ,eAAe,CAACe,IAAhB,CAAqBD,CAArB;QACD;;QACDrB,aAAa,CAACsB,IAAd,CAAmBf,eAAnB,EAN8C,CAO9C;MACD;IACF,CAVD;;IAWA,EAAEN,OAAF;EACD;;EACDH,UAAU,CAACE,aAAD,CAAV;;EACAD,YAAY,CAACS,QAAD,CAAZ;AACD,CA9BM"},"metadata":{},"sourceType":"module"}