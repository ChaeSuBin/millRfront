{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/setMyNft.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getItemsIdList, getOwnedItems, getUserId } from '../api';\nimport { getSymbol, getTokenUri, getTokenStatus } from '../utilityUnits/connMintService';\nimport { ListItemsModal } from './itemCpnt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SetMyNFT = _ref => {\n  _s();\n\n  let {\n    web3,\n    chainId\n  } = _ref;\n  const [toknList, setToknList] = useState([]);\n  const [itemList, setItemList] = useState([]);\n  const [modalFlag, setFlag] = useState(false);\n  const [toknIdRange, setRange] = useState();\n  useEffect(() => {\n    toknListViewer();\n  }, []);\n\n  const toknListViewer = async () => {\n    let itemInfoArr = [{\n      title: null,\n      hash: null\n    }];\n    let toknList = [];\n    const userId = await getUserId(chainId);\n    const item = await getOwnedItems(userId);\n    let itemLen = 0;\n\n    do {\n      let title = item[itemLen].title;\n      let hash = item[itemLen].hash;\n      itemInfoArr[itemLen] = {\n        title: title,\n        hash: hash\n      };\n      toknList.push(await getToknList(userId, hash));\n      ++itemLen;\n    } while (itemLen < item.length);\n\n    setToknList(toknList);\n    setItemList(itemInfoArr);\n  };\n\n  const getToknList = async (_userId, _itemHash) => {\n    return new Promise(resolve => {\n      let toknIdArr = [];\n      getItemsIdList(_userId, _itemHash).then(result => {\n        result.map(tokenId => {\n          toknIdArr.push(tokenId.toknid);\n        });\n        resolve(toknIdArr);\n      });\n    });\n  };\n\n  const getToknStatus = async _toknId => {\n    const toknStatus = await getTokenStatus(_toknId);\n    let count = 0; //console.log(typeof toknStatus[0]);\n\n    do {\n      toknStatus[0] /= 100;\n      ++count;\n    } while (count < 9);\n\n    if (toknStatus[0] != 0) return `${toknStatus[0]} MATIC`;else return 'not for sale';\n  };\n\n  const temp = () => {\n    console.log(toknIdRange);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: temp,\n      children: \"temp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"owend NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), itemList.map((searchItems, index) => /*#__PURE__*/_jsxDEV(ListItemsModal, {\n      title: searchItems.title,\n      toknList: toknList[index],\n      flag: tru => setFlag(tru),\n      toknRange: toknId => setRange(toknId)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(SaleModal, {\n      showFlag: modalFlag,\n      toknRange: toknIdRange,\n      ADDR: chainId,\n      web3: web3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SetMyNFT, \"Abw2rXLq/RrOsvk5IiRbX5bwNS0=\");\n\n_c = SetMyNFT;\n\nconst SaleModal = _ref2 => {\n  _s2();\n\n  let {\n    showFlag,\n    toknRange,\n    ADDR,\n    web3\n  } = _ref2;\n  const [startId, setStart] = useState(toknRange);\n  const [price, setPrice] = useState();\n  const [PRIVATE_KEY, setPriv] = useState();\n\n  const saleToken = () => {\n    console.log(toknRange.end);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showFlag ?\n    /*#__PURE__*/\n    // showFlagがtrueだったらModalを表示する\n    _jsxDEV(\"div\", {\n      id: \"overlay\",\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modalcontents\",\n        className: \"modalcontents\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saleToken,\n          children: \"temp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) // showFlagがfalseの場合はModalは表示しない)\n\n  }, void 0, false);\n};\n\n_s2(SaleModal, \"Lm1sx9uPo70KKHm+Sb82tlxCt3o=\");\n\n_c2 = SaleModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SetMyNFT\");\n$RefreshReg$(_c2, \"SaleModal\");","map":{"version":3,"names":["React","useState","useEffect","getItemsIdList","getOwnedItems","getUserId","getSymbol","getTokenUri","getTokenStatus","ListItemsModal","SetMyNFT","web3","chainId","toknList","setToknList","itemList","setItemList","modalFlag","setFlag","toknIdRange","setRange","toknListViewer","itemInfoArr","title","hash","userId","item","itemLen","push","getToknList","length","_userId","_itemHash","Promise","resolve","toknIdArr","then","result","map","tokenId","toknid","getToknStatus","_toknId","toknStatus","count","temp","console","log","searchItems","index","tru","toknId","SaleModal","showFlag","toknRange","ADDR","startId","setStart","price","setPrice","PRIVATE_KEY","setPriv","saleToken","end"],"sources":["/home/giparang/threadweb/fortune/client/src/components/setMyNft.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getItemsIdList, getOwnedItems, getUserId } from '../api';\nimport { \n    getSymbol, \n    getTokenUri, \n    getTokenStatus,\n} from '../utilityUnits/connMintService';\nimport { ListItemsModal } from './itemCpnt';\n\nexport const SetMyNFT = ({web3, chainId}) => {\n  \n  const [toknList, setToknList] = useState([]);\n  const [itemList, setItemList] = useState([]);\n  const [modalFlag, setFlag] = useState(false);\n  const [toknIdRange, setRange] = useState();\n\n  useEffect(()=>{\n    toknListViewer();\n  },[])\n\n\n  const toknListViewer = async() => {\n    let itemInfoArr = [{title: null, hash: null}];\n    let toknList = [];\n\n    const userId = await getUserId(chainId);\n    const item = await getOwnedItems(userId);\n    let itemLen = 0;\n    do{\n      let title = item[itemLen].title;\n      let hash = item[itemLen].hash;\n      itemInfoArr[itemLen] = {title: title, hash: hash};\n      toknList.push(await getToknList(userId, hash));\n      ++itemLen;\n    }while(itemLen < item.length)\n    setToknList(toknList);\n    setItemList(itemInfoArr);\n  }\n  const getToknList = async(_userId, _itemHash) => {\n    return new Promise(resolve => {\n      let toknIdArr = [];\n      getItemsIdList(_userId, _itemHash).then(result => {\n        result.map(tokenId => {\n          toknIdArr.push(tokenId.toknid);\n        })\n        resolve(toknIdArr);\n      })\n    })\n  }\n  \n  const getToknStatus = async(_toknId) => {\n    const toknStatus = await getTokenStatus(_toknId);\n    let count = 0;\n    //console.log(typeof toknStatus[0]);\n    do{\n      toknStatus[0] /= 100;\n      ++count;\n    }while(count < 9)\n    \n    if(toknStatus[0] != 0)\n      return `${toknStatus[0]} MATIC`;\n    else\n      return 'not for sale';\n  }\n\n  const temp = () => {\n    console.log(toknIdRange);\n  }\n  return(\n    <>\n      <button onClick={temp}>temp</button>\n      <h2>owend NFT</h2>\n      {itemList.map((searchItems, index) => (\n        <ListItemsModal\n          key={index}\n          title={searchItems.title}\n          toknList={toknList[index]}\n          flag={(tru)=>setFlag(tru)}\n          toknRange={(toknId)=>setRange(toknId)}\n        />\n      ))}\n      <SaleModal\n        showFlag={modalFlag}\n        toknRange={toknIdRange}\n        ADDR = {chainId}\n        web3 = {web3}\n      />\n    </>\n  )\n}\n\nconst SaleModal = ({showFlag, toknRange, ADDR, web3}) => {\n  const [startId, setStart] = useState(toknRange);\n  const [price, setPrice] = useState();\n  const [PRIVATE_KEY, setPriv] = useState();\n\n  const saleToken = () => {\n    console.log(toknRange.end);\n  }\n  \n  return(<>\n    {showFlag ? ( // showFlagがtrueだったらModalを表示する\n    <div id=\"overlay\" className='overlay'>\n      <div id=\"modalcontents\" className=\"modalcontents\">\n        <button onClick={saleToken}>temp</button>\n        {/* <p>NFT ID: {startId.start} ~ {startId.end}</p>\n        <h4><button onClick={saleToken}>sale</button> : \n          <input placeholder='price(MATIC)' onChange={(evt)=>setPrice(evt.target.value)} size='10'/>\n        </h4>\n        <h5> PRIVATE_KEY :\n          <input onChange={(evt)=>setPriv(evt.target.value)} size='45'></input></h5>\n         */}\n      </div>\n    </div>\n    ) : (\n      <></>// showFlagがfalseの場合はModalは表示しない)\n    )}\n  </>)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}