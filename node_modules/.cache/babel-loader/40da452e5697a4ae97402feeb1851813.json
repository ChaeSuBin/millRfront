{"ast":null,"code":"import { fileToHash } from \"./fileToHash\";\nexport const onFileInputChange = (e, setBuffer, setFileInfo, setFileHash) => {\n  let fileByteArray = [];\n  getFileBuffer(e, setFileInfo).then(result => {\n    fileToHash(result, setFileHash);\n    setBuffer(result);\n  });\n};\n\nconst getFileBuffer = async (e, setFileInfo) => {\n  const fileByteArray = [];\n  const fileInfo = [];\n  let fileNum = 0;\n  return new Promise(resolve => {\n    while (e.target.files.length > fileNum) {\n      const reader = new FileReader();\n      const fileBufferArray = [];\n      fileInfo.push({\n        name: e.target.files[fileNum].name,\n        type: e.target.files[fileNum].type,\n        size: e.target.files[fileNum].size\n      }); //console.log(e.target.files[fileNum]);\n\n      reader.readAsArrayBuffer(e.target.files[fileNum]);\n\n      reader.onloadend = _evt => {\n        if (_evt.target.readyState === FileReader.DONE) {\n          const arrayBuffer = _evt.target.result,\n                array = new Uint8Array(arrayBuffer);\n\n          for (const a of array) {\n            fileBufferArray.push(a);\n          }\n\n          fileByteArray.push(fileBufferArray);\n        }\n      };\n\n      ++fileNum;\n    }\n\n    setFileInfo(fileInfo);\n    resolve(fileByteArray);\n  });\n};","map":{"version":3,"names":["fileToHash","onFileInputChange","e","setBuffer","setFileInfo","setFileHash","fileByteArray","getFileBuffer","then","result","fileInfo","fileNum","Promise","resolve","target","files","length","reader","FileReader","fileBufferArray","push","name","type","size","readAsArrayBuffer","onloadend","_evt","readyState","DONE","arrayBuffer","array","Uint8Array","a"],"sources":["/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToBuffer.js"],"sourcesContent":["import { fileToHash } from \"./fileToHash\";\n\nexport const onFileInputChange = (e, setBuffer, setFileInfo, setFileHash) => {\n  let fileByteArray = [];\n\n  getFileBuffer(e, setFileInfo).then(result => {\n    fileToHash(result, setFileHash);\n    setBuffer(result);\n  })\n}\n\nconst getFileBuffer = async(e, setFileInfo) => {\n  const fileByteArray = [];\n  const fileInfo = [];\n  let fileNum = 0;\n\n  return new Promise(resolve => {\n    while(e.target.files.length > fileNum){\n      const reader = new FileReader();\n      const fileBufferArray = [];\n          \n      fileInfo.push({\n        name: e.target.files[fileNum].name,\n        type: e.target.files[fileNum].type,\n        size: e.target.files[fileNum].size\n      })\n      //console.log(e.target.files[fileNum]);\n      reader.readAsArrayBuffer(e.target.files[fileNum]);\n      reader.onloadend = (_evt) => {\n        if (_evt.target.readyState === FileReader.DONE) {\n          const arrayBuffer = _evt.target.result,\n          array = new Uint8Array(arrayBuffer);\n          for (const a of array) {\n            fileBufferArray.push(a);\n          }\n          fileByteArray.push(fileBufferArray);\n        }\n      }\n      ++fileNum;\n    }\n    setFileInfo(fileInfo);\n    resolve(fileByteArray);\n  })\n}"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,CAAD,EAAIC,SAAJ,EAAeC,WAAf,EAA4BC,WAA5B,KAA4C;EAC3E,IAAIC,aAAa,GAAG,EAApB;EAEAC,aAAa,CAACL,CAAD,EAAIE,WAAJ,CAAb,CAA8BI,IAA9B,CAAmCC,MAAM,IAAI;IAC3CT,UAAU,CAACS,MAAD,EAASJ,WAAT,CAAV;IACAF,SAAS,CAACM,MAAD,CAAT;EACD,CAHD;AAID,CAPM;;AASP,MAAMF,aAAa,GAAG,OAAML,CAAN,EAASE,WAAT,KAAyB;EAC7C,MAAME,aAAa,GAAG,EAAtB;EACA,MAAMI,QAAQ,GAAG,EAAjB;EACA,IAAIC,OAAO,GAAG,CAAd;EAEA,OAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;IAC5B,OAAMX,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwBL,OAA9B,EAAsC;MACpC,MAAMM,MAAM,GAAG,IAAIC,UAAJ,EAAf;MACA,MAAMC,eAAe,GAAG,EAAxB;MAEAT,QAAQ,CAACU,IAAT,CAAc;QACZC,IAAI,EAAEnB,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeJ,OAAf,EAAwBU,IADlB;QAEZC,IAAI,EAAEpB,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeJ,OAAf,EAAwBW,IAFlB;QAGZC,IAAI,EAAErB,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeJ,OAAf,EAAwBY;MAHlB,CAAd,EAJoC,CASpC;;MACAN,MAAM,CAACO,iBAAP,CAAyBtB,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeJ,OAAf,CAAzB;;MACAM,MAAM,CAACQ,SAAP,GAAoBC,IAAD,IAAU;QAC3B,IAAIA,IAAI,CAACZ,MAAL,CAAYa,UAAZ,KAA2BT,UAAU,CAACU,IAA1C,EAAgD;UAC9C,MAAMC,WAAW,GAAGH,IAAI,CAACZ,MAAL,CAAYL,MAAhC;UAAA,MACAqB,KAAK,GAAG,IAAIC,UAAJ,CAAeF,WAAf,CADR;;UAEA,KAAK,MAAMG,CAAX,IAAgBF,KAAhB,EAAuB;YACrBX,eAAe,CAACC,IAAhB,CAAqBY,CAArB;UACD;;UACD1B,aAAa,CAACc,IAAd,CAAmBD,eAAnB;QACD;MACF,CATD;;MAUA,EAAER,OAAF;IACD;;IACDP,WAAW,CAACM,QAAD,CAAX;IACAG,OAAO,CAACP,aAAD,CAAP;EACD,CA1BM,CAAP;AA2BD,CAhCD"},"metadata":{},"sourceType":"module"}