{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/pages/wallet.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { EstGasopenTokenBatch } from \"../utilityUnits/connMintService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Wallet = _ref => {\n  _s();\n\n  let {\n    web3,\n    ADDR\n  } = _ref;\n  const DEBUG = 1;\n  const [balance, setBalance] = useState();\n  const [rcvAcc, setRcvAddress] = useState('');\n  const [PRIVATE_KEY, setPriv] = useState(null);\n  const [toknPrice, setPrice] = useState();\n  const [startId, setSID] = useState();\n  const [endId, setEID] = useState();\n  useEffect(() => {\n    getUserBal();\n  }, []);\n\n  const getUserBal = () => {\n    web3.eth.getBalance(ADDR).then(balanc => {\n      let count = 0;\n\n      do {\n        balanc /= 1000000;\n        ++count;\n      } while (count < 3);\n\n      setBalance(balanc);\n    });\n  };\n\n  const sendCoin = async () => {\n    const nonce = await web3.eth.getTransactionCount(ADDR, 'latest'); // nonce starts counting from 0\n\n    console.log(nonce);\n    const transaction = {\n      'to': rcvAcc,\n      // faucet address to return eth\n      'value': 20000000,\n      'gas': 30000,\n      'nonce': nonce // optional data field to send message or execute smart contract\n\n    };\n    const signedTx = await web3.eth.accounts.signTransaction(transaction, PRIVATE_KEY);\n    web3.eth.sendSignedTransaction(signedTx.rawTransaction, function (error, hash) {\n      if (!error) console.log(\"🎉 The hash of your transaction is: \", hash, \"\\n Check Polygon Scan to view the status of your transaction!\");else console.log(\"❗Something went wrong while submitting your transaction:\", error);\n    });\n  };\n\n  const EstStartToknSale = async () => {\n    const price = toknPrice * 100000 + '0000000000000';\n    const estGas = await EstGasopenTokenBatch(chainId, startId, endId, price);\n    setGasFee(estGas);\n    setFlag(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"balance: \", balance, \" MATIC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\" PRIVATE_KEY :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: evt => setPriv(evt.target.value),\n        size: \"45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendCoin,\n        children: \"send coin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: evt => setRcvAddress(evt.target.value),\n        placeholder: \"receiver Address 0x...\",\n        size: \"45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: EstStartToknSale,\n        children: \"sale Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"tokenId\",\n        onChange: evt => setSID(evt.target.value),\n        size: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), \"~\", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"tokenId\",\n        onChange: evt => setEID(evt.target.value),\n        size: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this), \"price: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"price(MATIC)\",\n        onChange: evt => setPrice(evt.target.value),\n        size: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Wallet, \"oWx33vTqH/A0BPl/MNkGyS2yUBk=\");\n\n_c = Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useState","useEffect","EstGasopenTokenBatch","Wallet","web3","ADDR","DEBUG","balance","setBalance","rcvAcc","setRcvAddress","PRIVATE_KEY","setPriv","toknPrice","setPrice","startId","setSID","endId","setEID","getUserBal","eth","getBalance","then","balanc","count","sendCoin","nonce","getTransactionCount","console","log","transaction","signedTx","accounts","signTransaction","sendSignedTransaction","rawTransaction","error","hash","EstStartToknSale","price","estGas","chainId","setGasFee","setFlag","evt","target","value"],"sources":["/home/giparang/threadweb/fortune/client/src/pages/wallet.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { EstGasopenTokenBatch } from \"../utilityUnits/connMintService\";\n\nexport const Wallet = ({web3, ADDR}) => {\n  const DEBUG = 1;\n  const [balance, setBalance] = useState();\n  const [rcvAcc ,setRcvAddress] = useState('');\n  const [PRIVATE_KEY, setPriv] = useState(null);\n  const [toknPrice, setPrice] = useState();\n  const [startId, setSID] = useState();\n  const [endId, setEID] = useState();\n\n  useEffect(() => {\n    getUserBal();\n  },[]);\n  \n  const getUserBal = () => {\n    web3.eth.getBalance(ADDR).then(balanc => {\n      let count = 0;\n      do{\n        balanc /= 1000000;\n        ++count;\n      }while(count < 3)\n      setBalance(balanc);\n    })\n  }\n\n  const sendCoin = async() => {\n    const nonce = await web3.eth.getTransactionCount(ADDR, 'latest'); // nonce starts counting from 0\n    console.log(nonce)\n    const transaction = {\n     'to': rcvAcc, // faucet address to return eth\n     'value': 20000000,\n     'gas': 30000,\n     'nonce': nonce,\n     // optional data field to send message or execute smart contract\n    };\n    const signedTx = await web3.eth.accounts.signTransaction(transaction, PRIVATE_KEY);\n\n    web3.eth.sendSignedTransaction(signedTx.rawTransaction, function(error, hash) {\n\n      if (!error)\n        console.log(\"🎉 The hash of your transaction is: \", hash, \"\\n Check Polygon Scan to view the status of your transaction!\");\n      else\n        console.log(\"❗Something went wrong while submitting your transaction:\", error);\n    });\n  }\n  const EstStartToknSale = async() => {\n    const price = (toknPrice*100000+'0000000000000');\n    const estGas = await EstGasopenTokenBatch(chainId, startId, endId, price);\n    setGasFee(estGas);\n    setFlag(true);\n  }\n  return (\n    <>\n    <h2>wallet</h2>\n    <h4>balance: {balance} MATIC</h4>\n    <h5> PRIVATE_KEY :\n      <input onChange={(evt)=>setPriv(evt.target.value)} size='45'></input></h5>\n    <h5><button onClick={sendCoin}>send coin</button> :\n      <input onChange={(evt)=>setRcvAddress(evt.target.value)} placeholder='receiver Address 0x...' size='45'></input></h5>\n    <h5><button onClick={EstStartToknSale}>sale Token</button> \n      : <input placeholder='tokenId' onChange={(evt)=>setSID(evt.target.value)}size='5'/>\n      ~<input placeholder='tokenId' onChange={(evt)=>setEID(evt.target.value)}size='5'/>\n      price: <input placeholder='price(MATIC)' onChange={(evt)=>setPrice(evt.target.value)} size='10'/>  \n    </h5>\n    </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}