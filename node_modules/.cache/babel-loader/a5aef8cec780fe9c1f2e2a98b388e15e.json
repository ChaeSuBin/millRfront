{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/createChainId.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './modal.css';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postRegiPlayer, putChainId } from '../api';\nimport { SHA256 } from '../utilityUnits/SHA256';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateChainId = _ref => {\n  _s();\n\n  let {\n    uid,\n    web3\n  } = _ref;\n  const navigate = useNavigate();\n  const [showFlag, setFlag] = useState(false);\n  const [chainAccount, setAccount] = useState([]);\n  const [priv, setPriv] = useState();\n\n  const createAccount = async () => {\n    let accountKey = [];\n    const account = web3.eth.accounts.create();\n    const record = {\n      playerId: uid,\n      chainId: account.address\n    };\n    accountKey.push(account.address);\n    accountKey.push(account.privateKey);\n    setAccount(accountKey);\n    setFlag(true);\n  };\n\n  const doneBtn = () => {\n    if (chainAccount[1] === priv) {\n      const hPass = SHA256(chainAccount[1]);\n      const record = {\n        userId: uid,\n        pass: hPass,\n        addr: chainAccount[0]\n      };\n      postRegiPlayer(record).then(result => {\n        if (result === true) {\n          sessionStorage.clear();\n          navigate('/signinpage');\n        }\n      });\n    } else alert('PRIVATE KEY 를 정확히 입력하여 주십시오');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showFlag ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF89Successfuly Created\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 32\n        }, this), \"CHAIN ID: \", chainAccount[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 38\n        }, this), \"PRIVATE KEY: \", chainAccount[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 41\n        }, this), \"\\uBE44\\uBC00\\uD0A4\\uB294 \\uBD84\\uC2E4 \\uC2DC \\uB418\\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }, this), \"\\uBC18\\uB4DC\\uC2DC \\uBA54\\uBAA8\\uC7A5 \\uB4F1 \\uC790\\uC2E0\\uB9CC\\uC774 \\uC54C \\uC218 \\uC788\\uB294 \\uACF3\\uC5D0 \\uC62E\\uACA8 \\uC800\\uC7A5\\uD558\\uC2ED\\uC2DC\\uC624.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 46\n        }, this), \"\\uBE44\\uBC00\\uD0A4\\uB294 \\uC808\\uB300\\uB85C \\uD0C0\\uC778\\uC5D0\\uAC8C \\uC54C\\uB824\\uC8FC\\uC9C0 \\uB9C8\\uC2ED\\uC2DC\\uC624.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"PRIVATE_KET\",\n        onChange: evt => setPriv(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: doneBtn,\n        children: \"\\uC644\\uB8CC\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createAccount,\n        children: \"\\uACC4\\uC815 \\uB9CC\\uB4E4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(CreateChainId, \"Ubi0lSBrhCUqof63OExpTM81LuU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateChainId;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChainId\");","map":{"version":3,"names":["React","useState","useNavigate","postRegiPlayer","putChainId","SHA256","CreateChainId","uid","web3","navigate","showFlag","setFlag","chainAccount","setAccount","priv","setPriv","createAccount","accountKey","account","eth","accounts","create","record","playerId","chainId","address","push","privateKey","doneBtn","hPass","userId","pass","addr","then","result","sessionStorage","clear","alert","evt","target","value"],"sources":["/home/giparang/threadweb/fortune/client/src/components/createChainId.js"],"sourcesContent":["import React from 'react';\nimport './modal.css';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postRegiPlayer, putChainId } from '../api';\nimport { SHA256 } from '../utilityUnits/SHA256';\n\nexport const CreateChainId = ({uid, web3}) => {\n  const navigate = useNavigate();\n  const [showFlag, setFlag] = useState(false);\n  const [chainAccount, setAccount] = useState([]);\n  const [priv, setPriv] = useState();\n\n  const createAccount = async() => {\n    let accountKey = [];\n    const account = web3.eth.accounts.create();\n    const record = { \n      playerId: uid,\n      chainId : account.address\n    }\n    accountKey.push(account.address);\n    accountKey.push(account.privateKey);\n    setAccount(accountKey);\n    setFlag(true);\n  }\n  const doneBtn = () => {\n    if(chainAccount[1] === priv){\n      const hPass = SHA256(chainAccount[1]);\n      const record = {\n        userId: uid,\n        pass: hPass,\n        addr: chainAccount[0]\n      }\n      postRegiPlayer(record).then(result => {\n        if(result === true){\n          sessionStorage.clear();\n          navigate('/signinpage');\n        }\n      })\n    }\n    else\n      alert('PRIVATE KEY 를 정확히 입력하여 주십시오');\n  }\n  return(\n    <>\n      {showFlag ? <>\n        <p>\n          🎉Successfuly Created<br/>\n          CHAIN ID: {chainAccount[0]}<br/>\n          PRIVATE KEY: {chainAccount[1]}<br/>\n          비밀키는 분실 시 되찾을 수 없습니다.<br/>\n          반드시 메모장 등 자신만이 알 수 있는 곳에 옮겨 저장하십시오.<br/>\n          비밀키는 절대로 타인에게 알려주지 마십시오.\n        </p>\n        <input placeholder='PRIVATE_KET' onChange={(evt)=>setPriv(evt.target.value)}/>\n        <button onClick={doneBtn}>완료하기</button>\n      </>:<>\n        <button onClick={createAccount}>계정 만들기</button>\n      </>}\n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,QAA3C;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAiB;EAAA;;EAAA,IAAhB;IAACC,GAAD;IAAMC;EAAN,CAAgB;EAC5C,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAM,CAACQ,QAAD,EAAWC,OAAX,IAAsBV,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACW,YAAD,EAAeC,UAAf,IAA6BZ,QAAQ,CAAC,EAAD,CAA3C;EACA,MAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,EAAhC;;EAEA,MAAMe,aAAa,GAAG,YAAW;IAC/B,IAAIC,UAAU,GAAG,EAAjB;IACA,MAAMC,OAAO,GAAGV,IAAI,CAACW,GAAL,CAASC,QAAT,CAAkBC,MAAlB,EAAhB;IACA,MAAMC,MAAM,GAAG;MACbC,QAAQ,EAAEhB,GADG;MAEbiB,OAAO,EAAGN,OAAO,CAACO;IAFL,CAAf;IAIAR,UAAU,CAACS,IAAX,CAAgBR,OAAO,CAACO,OAAxB;IACAR,UAAU,CAACS,IAAX,CAAgBR,OAAO,CAACS,UAAxB;IACAd,UAAU,CAACI,UAAD,CAAV;IACAN,OAAO,CAAC,IAAD,CAAP;EACD,CAXD;;EAYA,MAAMiB,OAAO,GAAG,MAAM;IACpB,IAAGhB,YAAY,CAAC,CAAD,CAAZ,KAAoBE,IAAvB,EAA4B;MAC1B,MAAMe,KAAK,GAAGxB,MAAM,CAACO,YAAY,CAAC,CAAD,CAAb,CAApB;MACA,MAAMU,MAAM,GAAG;QACbQ,MAAM,EAAEvB,GADK;QAEbwB,IAAI,EAAEF,KAFO;QAGbG,IAAI,EAAEpB,YAAY,CAAC,CAAD;MAHL,CAAf;MAKAT,cAAc,CAACmB,MAAD,CAAd,CAAuBW,IAAvB,CAA4BC,MAAM,IAAI;QACpC,IAAGA,MAAM,KAAK,IAAd,EAAmB;UACjBC,cAAc,CAACC,KAAf;UACA3B,QAAQ,CAAC,aAAD,CAAR;QACD;MACF,CALD;IAMD,CAbD,MAeE4B,KAAK,CAAC,6BAAD,CAAL;EACH,CAjBD;;EAkBA,oBACE;IAAA,UACG3B,QAAQ,gBAAG;MAAA,wBACV;QAAA,2DACuB;UAAA;UAAA;UAAA;QAAA,QADvB,gBAEaE,YAAY,CAAC,CAAD,CAFzB,eAE6B;UAAA;UAAA;UAAA;QAAA,QAF7B,mBAGgBA,YAAY,CAAC,CAAD,CAH5B,eAGgC;UAAA;UAAA;UAAA;QAAA,QAHhC,mHAIuB;UAAA;UAAA;UAAA;QAAA,QAJvB,mLAKqC;UAAA;UAAA;UAAA;QAAA,QALrC;MAAA;QAAA;QAAA;QAAA;MAAA,QADU,eASV;QAAO,WAAW,EAAC,aAAnB;QAAiC,QAAQ,EAAG0B,GAAD,IAAOvB,OAAO,CAACuB,GAAG,CAACC,MAAJ,CAAWC,KAAZ;MAAzD;QAAA;QAAA;QAAA;MAAA,QATU,eAUV;QAAQ,OAAO,EAAEZ,OAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVU;IAAA,gBAAH,gBAWL;MAAA,uBACF;QAAQ,OAAO,EAAEZ,aAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADE;EAZN,iBADF;AAkBD,CAtDM;;GAAMV,a;UACMJ,W;;;KADNI,a"},"metadata":{},"sourceType":"module"}