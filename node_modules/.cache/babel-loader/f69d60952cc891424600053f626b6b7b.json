{"ast":null,"code":"async function request(path) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  //const url = `http://localhost:8139${path}`;\n  const url = `https://mintservice.asuscomm.com:8139${path}`; //const url = `https://ideaideaserver.herokuapp.com${path}`;\n\n  const response = await fetch(url, options);\n  return response.json();\n}\n\nexport async function getChainId(_userId) {\n  return request(`/chainacc/${_userId}`);\n}\nexport async function getMerge(_fileName) {\n  return request(`/merge/${_fileName}`);\n}\nexport async function temtTest(_fileHash) {\n  return request(`/temptest/${_fileHash}`);\n}\nexport async function putChainId(record) {\n  return request(`/setchainid`, {\n    body: JSON.stringify(record),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"PUT\"\n  });\n}\nexport async function putLogin(record) {\n  return request(`/usercheckin`, {\n    body: JSON.stringify(record),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"PUT\"\n  });\n}\nexport async function postUploadArtwork(record) {\n  return request(`/artworkupload`, {\n    body: JSON.stringify(record),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"POST\"\n  });\n}\nexport async function postUserRegi(record) {\n  console.log('v', JSON.stringify(record));\n  return request(`/regiplayer`, {\n    body: JSON.stringify(record),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"POST\"\n  });\n}","map":{"version":3,"names":["request","path","options","url","response","fetch","json","getChainId","_userId","getMerge","_fileName","temtTest","_fileHash","putChainId","record","body","JSON","stringify","headers","method","putLogin","postUploadArtwork","postUserRegi","console","log"],"sources":["/home/giparang/threadweb/fortune/client/src/api.js"],"sourcesContent":["async function request(path, options = {}) {\n    //const url = `http://localhost:8139${path}`;\n    const url = `https://mintservice.asuscomm.com:8139${path}`;\n    //const url = `https://ideaideaserver.herokuapp.com${path}`;\n    const response = await fetch(url, options);\n    return response.json();\n}\n\nexport async function getChainId(_userId) {\n  return request(`/chainacc/${_userId}`);\n}\nexport async function getMerge(_fileName) {\n  return request(`/merge/${_fileName}`);\n}\nexport async function temtTest(_fileHash) {\n  return request(`/temptest/${_fileHash}`);\n}\nexport async function putChainId(record) {\n  return request(`/setchainid`, {\n    body: JSON.stringify(record),\n    headers: {\"Content-Type\": \"application/json\"},\n    method: \"PUT\",\n  });\n}\nexport async function putLogin(record) {\n  return request(`/usercheckin`, {\n    body: JSON.stringify(record),\n    headers: {\"Content-Type\": \"application/json\"},\n    method: \"PUT\",\n  });\n}\nexport async function postUploadArtwork(record) {\n  return request(`/artworkupload`, {\n    body: JSON.stringify(record),\n    headers: {\"Content-Type\": \"application/json\"},\n    method: \"POST\",\n  });\n}\nexport async function postUserRegi(record) {\n  console.log('v', JSON.stringify(record));\n  return request(`/regiplayer`, {\n    body: JSON.stringify(record),\n    headers: {\"Content-Type\": \"application/json\"},\n    method: \"POST\",\n  });\n}"],"mappings":"AAAA,eAAeA,OAAf,CAAuBC,IAAvB,EAA2C;EAAA,IAAdC,OAAc,uEAAJ,EAAI;EACvC;EACA,MAAMC,GAAG,GAAI,wCAAuCF,IAAK,EAAzD,CAFuC,CAGvC;;EACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMD,OAAN,CAA5B;EACA,OAAOE,QAAQ,CAACE,IAAT,EAAP;AACH;;AAED,OAAO,eAAeC,UAAf,CAA0BC,OAA1B,EAAmC;EACxC,OAAOR,OAAO,CAAE,aAAYQ,OAAQ,EAAtB,CAAd;AACD;AACD,OAAO,eAAeC,QAAf,CAAwBC,SAAxB,EAAmC;EACxC,OAAOV,OAAO,CAAE,UAASU,SAAU,EAArB,CAAd;AACD;AACD,OAAO,eAAeC,QAAf,CAAwBC,SAAxB,EAAmC;EACxC,OAAOZ,OAAO,CAAE,aAAYY,SAAU,EAAxB,CAAd;AACD;AACD,OAAO,eAAeC,UAAf,CAA0BC,MAA1B,EAAkC;EACvC,OAAOd,OAAO,CAAE,aAAF,EAAgB;IAC5Be,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,MAAf,CADsB;IAE5BI,OAAO,EAAE;MAAC,gBAAgB;IAAjB,CAFmB;IAG5BC,MAAM,EAAE;EAHoB,CAAhB,CAAd;AAKD;AACD,OAAO,eAAeC,QAAf,CAAwBN,MAAxB,EAAgC;EACrC,OAAOd,OAAO,CAAE,cAAF,EAAiB;IAC7Be,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,MAAf,CADuB;IAE7BI,OAAO,EAAE;MAAC,gBAAgB;IAAjB,CAFoB;IAG7BC,MAAM,EAAE;EAHqB,CAAjB,CAAd;AAKD;AACD,OAAO,eAAeE,iBAAf,CAAiCP,MAAjC,EAAyC;EAC9C,OAAOd,OAAO,CAAE,gBAAF,EAAmB;IAC/Be,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,MAAf,CADyB;IAE/BI,OAAO,EAAE;MAAC,gBAAgB;IAAjB,CAFsB;IAG/BC,MAAM,EAAE;EAHuB,CAAnB,CAAd;AAKD;AACD,OAAO,eAAeG,YAAf,CAA4BR,MAA5B,EAAoC;EACzCS,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBR,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAjB;EACA,OAAOd,OAAO,CAAE,aAAF,EAAgB;IAC5Be,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,MAAf,CADsB;IAE5BI,OAAO,EAAE;MAAC,gBAAgB;IAAjB,CAFmB;IAG5BC,MAAM,EAAE;EAHoB,CAAhB,CAAd;AAKD"},"metadata":{},"sourceType":"module"}