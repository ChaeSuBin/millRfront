{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/giparang/threadweb/fortune/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";export var onFileInputChange=function onFileInputChange(e,setBuffer,setFileInfo,setCheckA){var fileByteArray=[];var fileInfo=[];var fileNum=0;var _loop=function _loop(){var reader=new FileReader();var fileBufferArray=[];fileInfo.push({name:e.target.files[fileNum].name,type:e.target.files[fileNum].type,size:e.target.files[fileNum].size});//console.log(e.target.files[fileNum]);\nreader.readAsArrayBuffer(e.target.files[fileNum]);reader.onloadend=function(_evt){if(_evt.target.readyState===FileReader.DONE){var arrayBuffer=_evt.target.result,array=new Uint8Array(arrayBuffer);var _iterator=_createForOfIteratorHelper(array),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var a=_step.value;fileBufferArray.push(a);}}catch(err){_iterator.e(err);}finally{_iterator.f();}fileByteArray.push(fileBufferArray);if(fileByteArray.length===fileNum){setCheckA(true);}}};++fileNum;};while(e.target.files.length>fileNum){_loop();}setBuffer(fileByteArray);setFileInfo(fileInfo);};","map":{"version":3,"names":["onFileInputChange","e","setBuffer","setFileInfo","setCheckA","fileByteArray","fileInfo","fileNum","reader","FileReader","fileBufferArray","push","name","target","files","type","size","readAsArrayBuffer","onloadend","_evt","readyState","DONE","arrayBuffer","result","array","Uint8Array","a","length"],"sources":["/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToBuffer.js"],"sourcesContent":["\nexport const onFileInputChange = (e, setBuffer, setFileInfo, setCheckA) => {\n  const fileByteArray = [];\n  const fileInfo = [];\n  let fileNum = 0;\n  \n  while(e.target.files.length > fileNum){\n    const reader = new FileReader();\n    const fileBufferArray = [];\n        \n    fileInfo.push({\n      name: e.target.files[fileNum].name,\n      type: e.target.files[fileNum].type,\n      size: e.target.files[fileNum].size\n    })\n    //console.log(e.target.files[fileNum]);\n    reader.readAsArrayBuffer(e.target.files[fileNum]);\n    reader.onloadend = (_evt) => {\n      if (_evt.target.readyState === FileReader.DONE) {\n        const arrayBuffer = _evt.target.result,\n        array = new Uint8Array(arrayBuffer);\n        for (const a of array) {\n          fileBufferArray.push(a);\n        }\n        fileByteArray.push(fileBufferArray);\n        if(fileByteArray.length === fileNum){\n          setCheckA(true);\n        }\n      }\n    }\n    ++fileNum;\n  }\n  setBuffer(fileByteArray);\n  setFileInfo(fileInfo);\n}"],"mappings":"qJACA,MAAO,IAAMA,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIC,CAAC,CAAEC,SAAS,CAAEC,WAAW,CAAEC,SAAS,CAAK,CACzE,GAAMC,cAAa,CAAG,EAAE,CACxB,GAAMC,SAAQ,CAAG,EAAE,CACnB,GAAIC,QAAO,CAAG,CAAC,CAAC,2BAGd,GAAMC,OAAM,CAAG,GAAIC,WAAU,EAAE,CAC/B,GAAMC,gBAAe,CAAG,EAAE,CAE1BJ,QAAQ,CAACK,IAAI,CAAC,CACZC,IAAI,CAAEX,CAAC,CAACY,MAAM,CAACC,KAAK,CAACP,OAAO,CAAC,CAACK,IAAI,CAClCG,IAAI,CAAEd,CAAC,CAACY,MAAM,CAACC,KAAK,CAACP,OAAO,CAAC,CAACQ,IAAI,CAClCC,IAAI,CAAEf,CAAC,CAACY,MAAM,CAACC,KAAK,CAACP,OAAO,CAAC,CAACS,IAChC,CAAC,CAAC,CACF;AACAR,MAAM,CAACS,iBAAiB,CAAChB,CAAC,CAACY,MAAM,CAACC,KAAK,CAACP,OAAO,CAAC,CAAC,CACjDC,MAAM,CAACU,SAAS,CAAG,SAACC,IAAI,CAAK,CAC3B,GAAIA,IAAI,CAACN,MAAM,CAACO,UAAU,GAAKX,UAAU,CAACY,IAAI,CAAE,CAC9C,GAAMC,YAAW,CAAGH,IAAI,CAACN,MAAM,CAACU,MAAM,CACtCC,KAAK,CAAG,GAAIC,WAAU,CAACH,WAAW,CAAC,CAAC,yCACpBE,KAAK,YAArB,+CAAuB,IAAZE,EAAC,aACVhB,eAAe,CAACC,IAAI,CAACe,CAAC,CAAC,CACzB,CAAC,qDACDrB,aAAa,CAACM,IAAI,CAACD,eAAe,CAAC,CACnC,GAAGL,aAAa,CAACsB,MAAM,GAAKpB,OAAO,CAAC,CAClCH,SAAS,CAAC,IAAI,CAAC,CACjB,CACF,CACF,CAAC,CACD,EAAEG,OAAO,CAAC,EAxBZ,MAAMN,CAAC,CAACY,MAAM,CAACC,KAAK,CAACa,MAAM,CAAGpB,OAAO,CAAC,SAyBtC,CACAL,SAAS,CAACG,aAAa,CAAC,CACxBF,WAAW,CAACG,QAAQ,CAAC,CACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}