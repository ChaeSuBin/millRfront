{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/uploadFiles.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { postUploadArtwork } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UploadFiles = _ref => {\n  let {\n    fileBufferList,\n    finalHash,\n    title,\n    desc\n  } = _ref;\n\n  const checkParams = () => {\n    console.log(fileBufferList[0].length);\n  }; //   const setFileChunks = () => {\n  //     let size = 1024 * 50; //50KB 50KB Section size\n  //     let fileChunks = [];\n  //     let index = 0; //Section num\n  //     for (let cur = 0; cur < file.size; cur += size) {\n  //       fileChunks.push({\n  //         hash: index++,\n  //         chunk: file.slice(cur, cur + size),\n  //       });\n  //     }\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"test-uploadfiles.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkParams,\n      children: \"checkFinal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // const uploadFiles = () => {\n//     const record = {\n//       title: title,\n//       desc: desc,\n//       hash: finalHash,\n//       //typeArr: _typeArr,\n//       //fileBuffer: _fileBuffer\n//     }\n//     //postUploadArtwork\n//   }\n\n_c = UploadFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFiles\");","map":{"version":3,"names":["React","useState","useEffect","postUploadArtwork","UploadFiles","fileBufferList","finalHash","title","desc","checkParams","console","log","length"],"sources":["/home/giparang/threadweb/fortune/client/src/components/uploadFiles.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { postUploadArtwork } from \"../api\";\n\nexport const UploadFiles = ({\n    fileBufferList,\n    finalHash,\n    title, desc,\n  }) => {\n  \n  const checkParams = () => {\n    console.log(fileBufferList[0].length);\n  }\n//   const setFileChunks = () => {\n//     let size = 1024 * 50; //50KB 50KB Section size\n//     let fileChunks = [];\n//     let index = 0; //Section num\n//     for (let cur = 0; cur < file.size; cur += size) {\n//       fileChunks.push({\n//         hash: index++,\n//         chunk: file.slice(cur, cur + size),\n//       });\n//     }\n//   }\n\n  return(\n    <>\n      <h5>test-uploadfiles.js</h5>\n      <button onClick={checkParams}>checkFinal</button>\n    </>\n  )\n}\n\n// const uploadFiles = () => {\n//     const record = {\n//       title: title,\n//       desc: desc,\n//       hash: finalHash,\n//       //typeArr: _typeArr,\n//       //fileBuffer: _fileBuffer\n//     }\n//     //postUploadArtwork\n//   }"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,QAAlC;;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAInB;EAAA,IAJoB;IACxBC,cADwB;IAExBC,SAFwB;IAGxBC,KAHwB;IAGjBC;EAHiB,CAIpB;;EAEN,MAAMC,WAAW,GAAG,MAAM;IACxBC,OAAO,CAACC,GAAR,CAAYN,cAAc,CAAC,CAAD,CAAd,CAAkBO,MAA9B;EACD,CAFD,CAFM,CAKR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEE,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEH,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD,CA3BM,C,CA6BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAtCaL,W"},"metadata":{},"sourceType":"module"}