{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/setFileHash.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { onFileInputChange } from \"../utilityUnits/fileToBuffer\";\nimport { fileToHash, setFinalHash } from '../utilityUnits/fileToHash';\nimport { FilesList } from \"../components/dispFileList\";\nimport { UploadFiles } from \"./uploadFiles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SetFileHash = _ref => {\n  _s();\n\n  let {\n    title,\n    desc,\n    pWire\n  } = _ref;\n  let te = -1;\n  const [fileBuffer, setFileBuffer] = useState([]);\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHash] = useState([]);\n  const [finalHash, setFinalH] = useState();\n  let FILE_HASHS = [];\n  let FILE_BUFFER = [];\n  useCallback(() => {\n    console.log(FILE_BUFFER);\n    sortFileSize(FILE_BUFFER).then(result => {\n      if (result) {\n        fileToHash(fileBuffer, setFileHash, setFILE_HASHS);\n        const finalHash = getFinalHash();\n        setFinalH(finalHash);\n        pWire(finalHash);\n      } else {\n        console.log(result);\n      }\n    });\n  }, [FILE_BUFFER]);\n\n  const setFILE_HASHS = hashArr => {\n    FILE_HASHS = hashArr;\n    console.log(hashArr);\n  };\n\n  const setFILE_BUFFER = buffer => {\n    FILE_BUFFER = buffer;\n    console.log(buffer);\n  };\n\n  const sortFileSize = async _fileBuffer => {\n    let asc = function (a, b) {\n      return a.length < b.length ? -1 : 1; //オブジェクトの昇順ソート\n    };\n\n    let ascIndex = function (a, b) {\n      return a.size < b.size ? -1 : 1;\n    };\n\n    if (_fileBuffer.length !== 0) {\n      setFileBuffer(_fileBuffer.sort(asc));\n      fileInfo.sort(ascIndex);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const getFinalHash = () => {\n    let fileNum = 0;\n    let hashsStr = '';\n    let fileTypeArr = [];\n\n    do {\n      console.log(fileHashs);\n      hashsStr += fileHashs[fileNum];\n      fileTypeArr.push(fileInfo[fileNum].type.split('/').pop());\n      ++fileNum;\n    } while (fileHashs.length > fileNum);\n\n    return setFinalHash(hashsStr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputfile\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: evt => onFileInputChange(evt, setFileBuffer, setFileInfo, setFILE_BUFFER),\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 158\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), fileInfo.map(uploadItems => /*#__PURE__*/_jsxDEV(FilesList, {\n      row: ++te,\n      title: uploadItems.name,\n      type: uploadItems.type,\n      size: uploadItems.size,\n      hash: fileHashs[te]\n    }, uploadItems.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(UploadFiles, {\n      title: title,\n      desc: desc,\n      fileBufferList: fileBuffer,\n      fileInfoList: fileInfo,\n      finalHash: finalHash\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SetFileHash, \"FP9z8/z9AJm75eMVY08gVKaKaik=\");\n\n_c = SetFileHash;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetFileHash\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","onFileInputChange","fileToHash","setFinalHash","FilesList","UploadFiles","SetFileHash","title","desc","pWire","te","fileBuffer","setFileBuffer","fileInfo","setFileInfo","fileHashs","setFileHash","finalHash","setFinalH","FILE_HASHS","FILE_BUFFER","console","log","sortFileSize","then","result","setFILE_HASHS","getFinalHash","hashArr","setFILE_BUFFER","buffer","_fileBuffer","asc","a","b","length","ascIndex","size","sort","fileNum","hashsStr","fileTypeArr","push","type","split","pop","evt","map","uploadItems","name"],"sources":["/home/giparang/threadweb/fortune/client/src/components/setFileHash.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { onFileInputChange } from \"../utilityUnits/fileToBuffer\";\nimport { fileToHash, setFinalHash } from '../utilityUnits/fileToHash'\nimport { FilesList } from \"../components/dispFileList\";\nimport { UploadFiles } from \"./uploadFiles\";\n\nexport const SetFileHash = ({title, desc, pWire}) => {\n\n  let te = -1;\n  const [fileBuffer, setFileBuffer] = useState([]);\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHash] = useState([]);\n  const [finalHash, setFinalH] = useState();\n  \n  let FILE_HASHS = [];\n  let FILE_BUFFER = [];\n\n  useCallback(()=>{\n    console.log(FILE_BUFFER);\n    sortFileSize(FILE_BUFFER).then(result => {\n      if(result){\n        fileToHash(fileBuffer, setFileHash, setFILE_HASHS);\n        const finalHash = getFinalHash();\n        setFinalH(finalHash);\n        pWire(finalHash);\n      }\n      else{\n        console.log(result);\n      }\n    })\n  },[FILE_BUFFER])\n\n  const setFILE_HASHS = (hashArr) => {\n    FILE_HASHS = hashArr\n    console.log(hashArr);\n  }\n  const setFILE_BUFFER = (buffer) => {\n    FILE_BUFFER = buffer;\n    console.log(buffer);\n  }\n\n  const sortFileSize = async(_fileBuffer) => {\n    let asc = function (a, b) {\n      return (a.length < b.length) ? -1 : 1;  //オブジェクトの昇順ソート\n    }\n    let ascIndex = function(a, b) {\n      return (a.size < b.size) ? -1 : 1;\n    }\n\n    if(_fileBuffer.length !== 0){\n      setFileBuffer(_fileBuffer.sort(asc));\n      fileInfo.sort(ascIndex);\n      return true;\n    }\n    else{\n      return false;\n    }  \n  }\n  \n  const getFinalHash = () => {\n    let fileNum = 0;\n    let hashsStr = '';\n    let fileTypeArr = [];\n    do {\n      console.log(fileHashs);\n      hashsStr += fileHashs[fileNum];\n      fileTypeArr.push((fileInfo[fileNum].type).split('/').pop());\n      ++fileNum;\n    } while (fileHashs.length > fileNum);\n\n    return setFinalHash(hashsStr);\n  }\n\n  return(\n    <div>\n      <h4>extract</h4>\n      <label className=\"inputfile\"><input type='file' onChange={(evt)=>onFileInputChange(evt, setFileBuffer, setFileInfo, setFILE_BUFFER)} multiple/></label><br/>\n      <br/>\n      {fileInfo.map(uploadItems => (\n        <FilesList\n          key={uploadItems.name}\n          row={++te}\n          title = {uploadItems.name}\n          type = {uploadItems.type}\n          size = {uploadItems.size}\n          hash = {fileHashs[te]}\n        />\n      ))}\n      <UploadFiles\n        title = {title}\n        desc = {desc}\n        fileBufferList = {fileBuffer}\n        fileInfoList = {fileInfo}\n        finalHash = {finalHash}\n      />\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}