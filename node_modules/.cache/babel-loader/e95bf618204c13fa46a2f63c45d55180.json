{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/createChainId.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './modal.css';\nimport { useState } from 'react';\nimport { putChainId } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateChainId = _ref => {\n  _s();\n\n  let {\n    uid,\n    web3\n  } = _ref;\n  const [modalFlag, setModal] = useState(false);\n  const [chainAccount, setAccount] = useState([]);\n\n  const createAccount = () => {\n    let accountKey = [];\n    const account = web3.eth.accounts.create();\n    const record = {\n      playerId: uid,\n      chainId: account.address\n    };\n    accountKey.push(account.address);\n    accountKey.push(account.privateKey);\n    setAccount(accountKey);\n    putChainId(record).then(result => {\n      if (result) {\n        setModal(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createAccount,\n      children: \"create chainId\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertModal, {\n      showFlag: modalFlag,\n      ADDR: chainAccount[0],\n      PRIVATE_KEY: chainAccount[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateChainId, \"kmF2f4rRZJ9MQGTBgHSBjdKgiaU=\");\n\n_c = CreateChainId;\n\nconst AlertModal = _ref2 => {\n  let {\n    showFlag,\n    ADDR,\n    PRIVATE_KEY\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showFlag ?\n    /*#__PURE__*/\n    // showFlagがtrueだったらModalを表示する\n    _jsxDEV(\"div\", {\n      id: \"overlay\",\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modalcontents\",\n        className: \"modalcontents\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83C\\uDF89Successfuly Created\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 32\n          }, this), \"CHAIN ID: \", ADDR, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 27\n          }, this), \"PRIVATE KEY: \", PRIVATE_KEY, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 37\n          }, this), \"\\uBE44\\uBC00\\uD0A4\\uB294 \\uBD84\\uC2E4 \\uC2DC \\uB418\\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 32\n          }, this), \"\\uBC18\\uB4DC\\uC2DC \\uBA54\\uBAA8\\uC7A5 \\uB4F1 \\uC790\\uC2E0\\uB9CC\\uC774 \\uC54C \\uC218 \\uC788\\uB294 \\uACF3\\uC5D0 \\uC62E\\uACA8 \\uC800\\uC7A5\\uD558\\uC2ED\\uC2DC\\uC624.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 46\n          }, this), \"\\uBE44\\uBC00\\uD0A4\\uB294 \\uC808\\uB300\\uB85C \\uD0C0\\uC778\\uC5D0\\uAC8C \\uC54C\\uB824\\uC8FC\\uC9C0 \\uB9C8\\uC2ED\\uC2DC\\uC624.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 35\n          }, this), \"*\\uD398\\uC774\\uC9C0\\uB97C \\uC0C8\\uB85C\\uACE0\\uCE68\\uD558\\uBA74 \\uC801\\uC6A9\\uB429\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) // showFlagがfalseの場合はModalは表示しない)\n\n  }, void 0, false);\n};\n\n_c2 = AlertModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateChainId\");\n$RefreshReg$(_c2, \"AlertModal\");","map":{"version":3,"names":["React","useState","putChainId","CreateChainId","uid","web3","modalFlag","setModal","chainAccount","setAccount","createAccount","accountKey","account","eth","accounts","create","record","playerId","chainId","address","push","privateKey","then","result","AlertModal","showFlag","ADDR","PRIVATE_KEY"],"sources":["/home/giparang/threadweb/fortune/client/src/components/createChainId.js"],"sourcesContent":["import React from 'react';\nimport './modal.css';\nimport { useState } from 'react';\nimport { putChainId } from '../api';\n\nexport const CreateChainId = ({uid, web3}) => {\n\n  const [modalFlag, setModal] = useState(false);\n  const [chainAccount, setAccount] = useState([]);\n\n  const createAccount = () => {\n    let accountKey = [];\n    const account = web3.eth.accounts.create();\n    const record = { \n      playerId: uid,\n      chainId : account.address\n    }\n    accountKey.push(account.address);\n    accountKey.push(account.privateKey);\n    setAccount(accountKey);\n\n    putChainId(record).then(result => {\n      if(result){\n        setModal(true);\n      }\n    })\n  }\n  return(\n    <>\n      <button onClick={createAccount}>create chainId</button>\n      <AlertModal \n        showFlag={modalFlag} \n        ADDR={chainAccount[0]} \n        PRIVATE_KEY={chainAccount[1]} />\n    </>\n  )\n}\n\nconst AlertModal = ({showFlag, ADDR, PRIVATE_KEY}) => {\n    \n    return(\n      <>{showFlag ? ( // showFlagがtrueだったらModalを表示する\n      <div id=\"overlay\" className='overlay'>\n        <div id=\"modalcontents\" className=\"modalcontents\">\n        <p>\n          🎉Successfuly Created<br/>\n          CHAIN ID: {ADDR}<br/>\n          PRIVATE KEY: {PRIVATE_KEY}<br/>\n          비밀키는 분실 시 되찾을 수 없습니다.<br/>\n          반드시 메모장 등 자신만이 알 수 있는 곳에 옮겨 저장하십시오.<br/>\n          비밀키는 절대로 타인에게 알려주지 마십시오.<br/>\n          *페이지를 새로고침하면 적용됩니다.\n        </p>\n        </div>\n      </div>\n      ) : (\n        <></>// showFlagがfalseの場合はModalは表示しない)\n      )}\n      </>\n    )\n  }"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAiB;EAAA;;EAAA,IAAhB;IAACC,GAAD;IAAMC;EAAN,CAAgB;EAE5C,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACO,YAAD,EAAeC,UAAf,IAA6BR,QAAQ,CAAC,EAAD,CAA3C;;EAEA,MAAMS,aAAa,GAAG,MAAM;IAC1B,IAAIC,UAAU,GAAG,EAAjB;IACA,MAAMC,OAAO,GAAGP,IAAI,CAACQ,GAAL,CAASC,QAAT,CAAkBC,MAAlB,EAAhB;IACA,MAAMC,MAAM,GAAG;MACbC,QAAQ,EAAEb,GADG;MAEbc,OAAO,EAAGN,OAAO,CAACO;IAFL,CAAf;IAIAR,UAAU,CAACS,IAAX,CAAgBR,OAAO,CAACO,OAAxB;IACAR,UAAU,CAACS,IAAX,CAAgBR,OAAO,CAACS,UAAxB;IACAZ,UAAU,CAACE,UAAD,CAAV;IAEAT,UAAU,CAACc,MAAD,CAAV,CAAmBM,IAAnB,CAAwBC,MAAM,IAAI;MAChC,IAAGA,MAAH,EAAU;QACRhB,QAAQ,CAAC,IAAD,CAAR;MACD;IACF,CAJD;EAKD,CAhBD;;EAiBA,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAEG,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MACE,QAAQ,EAAEJ,SADZ;MAEE,IAAI,EAAEE,YAAY,CAAC,CAAD,CAFpB;MAGE,WAAW,EAAEA,YAAY,CAAC,CAAD;IAH3B;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AASD,CA/BM;;GAAML,a;;KAAAA,a;;AAiCb,MAAMqB,UAAU,GAAG,SAAmC;EAAA,IAAlC;IAACC,QAAD;IAAWC,IAAX;IAAiBC;EAAjB,CAAkC;EAElD,oBACE;IAAA,UAAGF,QAAQ;IAAA;IAAK;IAChB;MAAK,EAAE,EAAC,SAAR;MAAkB,SAAS,EAAC,SAA5B;MAAA,uBACE;QAAK,EAAE,EAAC,eAAR;QAAwB,SAAS,EAAC,eAAlC;QAAA,uBACA;UAAA,2DACuB;YAAA;YAAA;YAAA;UAAA,QADvB,gBAEaC,IAFb,eAEkB;YAAA;YAAA;YAAA;UAAA,QAFlB,mBAGgBC,WAHhB,eAG4B;YAAA;YAAA;YAAA;UAAA,QAH5B,mHAIuB;YAAA;YAAA;YAAA;UAAA,QAJvB,mLAKqC;YAAA;YAAA;YAAA;UAAA,QALrC,0IAM0B;YAAA;YAAA;YAAA;UAAA,QAN1B;QAAA;UAAA;UAAA;UAAA;QAAA;MADA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADW,gBAeT,qCAfS,CAeJ;;EAfP,iBADF;AAoBD,CAtBH;;MAAMH,U"},"metadata":{},"sourceType":"module"}