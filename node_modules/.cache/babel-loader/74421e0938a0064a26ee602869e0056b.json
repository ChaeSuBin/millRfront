{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/uploadFiles.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { postUploadArtwork } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UploadFiles = _ref => {\n  let {\n    fileBufferList,\n    fileInfoList,\n    finalHash,\n    title,\n    desc\n  } = _ref;\n\n  const checkParams = () => {\n    console.log(fileInfoList[0]);\n  };\n\n  const setFileChunks = () => {\n    console.log('wow');\n    const size = 1024 * 50; //50KB 50KB Section size\n\n    let fileChunks = [];\n    let index = 0; //Section num\n\n    fileBufferList.map((file, index) => {\n      for (let cur = 0; cur < file.length; cur += size) {\n        fileChunks.push({\n          section: index++,\n          chunk: file.slice(cur, cur + size)\n        });\n      } //console.log(fileChunks);\n\n\n      uploadList(fileChunks);\n    });\n  };\n\n  const uploadList = fileChunks => {\n    fileChunks.map((item, index) => {\n      console.log(fileInfoList);\n      const record = {\n        fileName: fileInfoList[index].name,\n        section: item.section,\n        chunk: item.chunk\n      };\n      postUploadArtwork(record).then(result => {\n        console.log(result);\n      });\n    });\n  }; //   const uploadList = fileChunks.map((item, index) => {\n  //     let formData = new FormData();\n  //     formData.append(\"filename\", file.name);\n  //     formData.append(\"hash\", item.hash);\n  //     formData.append(\"chunk\", item.chunk);\n  //     return axios({\n  //       method: \"post\",\n  //       url: \"/upload\",\n  //       data: formData,\n  //     });\n  //   });\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"test-uploadfiles.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkParams,\n      children: \"checkParams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setFileChunks,\n      children: \"chunks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // const uploadFiles = () => {\n//     \n//     //postUploadArtwork\n//   }\n\n_c = UploadFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFiles\");","map":{"version":3,"names":["React","useState","useEffect","postUploadArtwork","UploadFiles","fileBufferList","fileInfoList","finalHash","title","desc","checkParams","console","log","setFileChunks","size","fileChunks","index","map","file","cur","length","push","section","chunk","slice","uploadList","item","record","fileName","name","then","result"],"sources":["/home/giparang/threadweb/fortune/client/src/components/uploadFiles.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { postUploadArtwork } from \"../api\";\n\nexport const UploadFiles = ({\n    fileBufferList,\n    fileInfoList,\n    finalHash,\n    title, desc,\n  }) => {\n\n  const checkParams = () => {\n    console.log(fileInfoList[0]);\n  }\n  const setFileChunks = () => {\n    console.log('wow')\n    const size = 1024 * 50; //50KB 50KB Section size\n    let fileChunks = [];\n    let index = 0; //Section num\n\n    fileBufferList.map((file, index) => {\n      for(let cur = 0; cur < file.length; cur += size) {\n        fileChunks.push({\n          section: index++,\n          chunk: file.slice(cur, cur + size),\n        });\n      }\n      //console.log(fileChunks);\n      uploadList(fileChunks);\n    })\n  }\n  const uploadList = (fileChunks) => {\n    fileChunks.map((item, index) => {\n      console.log(fileInfoList);\n      const record = {\n        fileName: fileInfoList[index].name,\n        section: item.section,\n        chunk: item.chunk,\n      }\n      postUploadArtwork(record).then(result => {\n        console.log(result);\n      })\n    })\n  }\n//   const uploadList = fileChunks.map((item, index) => {\n//     let formData = new FormData();\n//     formData.append(\"filename\", file.name);\n//     formData.append(\"hash\", item.hash);\n//     formData.append(\"chunk\", item.chunk);\n//     return axios({\n//       method: \"post\",\n//       url: \"/upload\",\n//       data: formData,\n//     });\n//   });\n  return(\n    <>\n      <h5>test-uploadfiles.js</h5>\n      <button onClick={checkParams}>checkParams</button>\n      <button onClick={setFileChunks}>chunks</button>\n    </>\n  )\n}\n\n// const uploadFiles = () => {\n//     \n//     //postUploadArtwork\n//   }"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,QAAlC;;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAKnB;EAAA,IALoB;IACxBC,cADwB;IAExBC,YAFwB;IAGxBC,SAHwB;IAIxBC,KAJwB;IAIjBC;EAJiB,CAKpB;;EAEN,MAAMC,WAAW,GAAG,MAAM;IACxBC,OAAO,CAACC,GAAR,CAAYN,YAAY,CAAC,CAAD,CAAxB;EACD,CAFD;;EAGA,MAAMO,aAAa,GAAG,MAAM;IAC1BF,OAAO,CAACC,GAAR,CAAY,KAAZ;IACA,MAAME,IAAI,GAAG,OAAO,EAApB,CAF0B,CAEF;;IACxB,IAAIC,UAAU,GAAG,EAAjB;IACA,IAAIC,KAAK,GAAG,CAAZ,CAJ0B,CAIX;;IAEfX,cAAc,CAACY,GAAf,CAAmB,CAACC,IAAD,EAAOF,KAAP,KAAiB;MAClC,KAAI,IAAIG,GAAG,GAAG,CAAd,EAAiBA,GAAG,GAAGD,IAAI,CAACE,MAA5B,EAAoCD,GAAG,IAAIL,IAA3C,EAAiD;QAC/CC,UAAU,CAACM,IAAX,CAAgB;UACdC,OAAO,EAAEN,KAAK,EADA;UAEdO,KAAK,EAAEL,IAAI,CAACM,KAAL,CAAWL,GAAX,EAAgBA,GAAG,GAAGL,IAAtB;QAFO,CAAhB;MAID,CANiC,CAOlC;;;MACAW,UAAU,CAACV,UAAD,CAAV;IACD,CATD;EAUD,CAhBD;;EAiBA,MAAMU,UAAU,GAAIV,UAAD,IAAgB;IACjCA,UAAU,CAACE,GAAX,CAAe,CAACS,IAAD,EAAOV,KAAP,KAAiB;MAC9BL,OAAO,CAACC,GAAR,CAAYN,YAAZ;MACA,MAAMqB,MAAM,GAAG;QACbC,QAAQ,EAAEtB,YAAY,CAACU,KAAD,CAAZ,CAAoBa,IADjB;QAEbP,OAAO,EAAEI,IAAI,CAACJ,OAFD;QAGbC,KAAK,EAAEG,IAAI,CAACH;MAHC,CAAf;MAKApB,iBAAiB,CAACwB,MAAD,CAAjB,CAA0BG,IAA1B,CAA+BC,MAAM,IAAI;QACvCpB,OAAO,CAACC,GAAR,CAAYmB,MAAZ;MACD,CAFD;IAGD,CAVD;EAWD,CAZD,CAtBM,CAmCR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACE,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAErB,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEG,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD,CA1DM,C,CA4DP;AACA;AACA;AACA;;KA/DaT,W"},"metadata":{},"sourceType":"module"}