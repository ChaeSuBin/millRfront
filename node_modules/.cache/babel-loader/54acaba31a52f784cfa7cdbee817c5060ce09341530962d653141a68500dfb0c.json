{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/uploadIDX/setItem.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postUploadItemIdx, getUserId } from '../../api';\nimport { eventCreateItem, setNFTidx } from '../../utilityUnits/connMintService';\nimport { WaitModal } from '../waitModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet count = 0;\nlet intervalId = null;\nexport const SetItemCpnt = _ref => {\n  _s();\n  let {\n    title,\n    desc,\n    toknUri,\n    rightInfo\n  } = _ref;\n  const SEND_ADDR = sessionStorage.getItem('chainid');\n  const navigate = useNavigate();\n  const [NumOfTokn, setNumOfTokn] = useState();\n  const [price, setValue] = useState();\n  const [PRIVATE_KEY, setPrivKey] = useState(null);\n  const [modalFlag, setFlag] = useState(false);\n  const [Royalty, setLowest] = useState(0);\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    // itemCreateEvtListener();\n  }, []);\n  const exclusiveParsing = () => {\n    let result = rightInfo.split('/');\n    //console.log(result[1]);\n    if (result[1] === 'Exclusive') {\n      setActive(true);\n      setNumOfTokn(1);\n    } else setActive(false);\n  };\n  const setItem = async () => {\n    itemCreateEvtListener();\n    const royality = parseInt(Royalty * 100000) + '0000000000000';\n    const value = parseInt(price * 100000) + '0000000000000';\n    const tokenUri = rightInfo + toknUri;\n    //const saveItemIdx = await uploadItemIdx();\n    if (title !== '' && desc !== '') {\n      setNFTidx(SEND_ADDR, PRIVATE_KEY, tokenUri, value, royality, NumOfTokn).then(result => {\n        if (result === true) {\n          intervalId = setInterval(() => {\n            if (count > 9) {\n              stopTimer();\n              setFlag(false);\n              alert('입력하신 Private Key가 다른 주소의 키 같습니다\\n 키를 확인 후 다시 시도하여주십시오.');\n            } else ++count;\n          }, 1000);\n        } else {\n          setFlag(false);\n          alert(`⚠️Err: ${result}`);\n        }\n      });\n    } else {\n      setFlag(false);\n      alert('Please enter the title and description of the item to be uploaded');\n    }\n  };\n  const uploadItemIdx = async _itemId => {\n    const userId = await getUserId(SEND_ADDR);\n    const record = {\n      itemId: parseInt(_itemId),\n      title: title,\n      desc: desc,\n      hash: toknUri,\n      userId: userId\n    };\n    postUploadItemIdx(record).then(response => {\n      console.log('checka');\n      if (response) {\n        setFlag(false);\n        stopTimer();\n        alert('🎉Successfully Created');\n        navigate(\"/\");\n      }\n    });\n  };\n  const itemCreateEvtListener = async () => {\n    console.log('wow');\n    // const listen = await eventCreateItem(SEND_ADDR);\n    eventCreateItem(SEND_ADDR).then(listen => {\n      if (listen) {\n        uploadItemIdx(listen.itemId);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uC544\\uC774\\uD15C \\uD310\\uB9E4\\uC815\\uBCF4 \\uC785\\uB825\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"quantity: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"quantity of token\",\n        onChange: evt => setNumOfTokn(evt.target.value),\n        disabled: active\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"price: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"price of token\",\n        onChange: evt => setValue(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"royalties: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"MATIC\",\n        onChange: evt => setLowest(evt.target.value),\n        defaultValue: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"private Key: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"input your private key to mint nft\",\n        onChange: evt => setPrivKey(evt.target.value),\n        size: \"45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setFlag(true);\n        setItem();\n      },\n      children: \"\\uD310\\uB9E4\\uC2DC\\uC791\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(WaitModal, {\n      showFlag: modalFlag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(SetItemCpnt, \"S2ONEqK3jFpHRnajdWvLJGhmef0=\", false, function () {\n  return [useNavigate];\n});\n_c = SetItemCpnt;\nconst stopTimer = () => {\n  clearInterval(intervalId);\n  intervalId = null;\n  count = 0;\n};\nvar _c;\n$RefreshReg$(_c, \"SetItemCpnt\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","postUploadItemIdx","getUserId","eventCreateItem","setNFTidx","WaitModal","count","intervalId","SetItemCpnt","title","desc","toknUri","rightInfo","SEND_ADDR","sessionStorage","getItem","navigate","NumOfTokn","setNumOfTokn","price","setValue","PRIVATE_KEY","setPrivKey","modalFlag","setFlag","Royalty","setLowest","active","setActive","exclusiveParsing","result","split","setItem","itemCreateEvtListener","royality","parseInt","value","tokenUri","then","setInterval","stopTimer","alert","uploadItemIdx","_itemId","userId","record","itemId","hash","response","console","log","listen","catch","err","evt","target","clearInterval"],"sources":["/home/giparang/threadweb/fortune/client/src/components/uploadIDX/setItem.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postUploadItemIdx, getUserId } from '../../api';\nimport { eventCreateItem, setNFTidx } from '../../utilityUnits/connMintService';\nimport { WaitModal } from '../waitModal';\n\nlet count = 0;\nlet intervalId = null;\n\nexport const SetItemCpnt = ({title, desc, toknUri, rightInfo}) => {\n  const SEND_ADDR = sessionStorage.getItem('chainid');\n  const navigate = useNavigate();\n  const [NumOfTokn, setNumOfTokn] = useState();\n  const [price, setValue] = useState();\n  const [PRIVATE_KEY, setPrivKey] = useState(null);\n  const [modalFlag, setFlag] = useState(false);\n  const [Royalty, setLowest] = useState(0);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    // itemCreateEvtListener();\n  },[])\n\n  const exclusiveParsing = () => {\n    let result = rightInfo.split('/');\n    //console.log(result[1]);\n    if(result[1] === 'Exclusive'){\n      setActive(true);\n      setNumOfTokn(1);\n    }\n    else\n      setActive(false);\n  }\n  const setItem = async() => {\n    itemCreateEvtListener();\n    const royality = parseInt(Royalty*100000)+'0000000000000';\n    const value = parseInt(price*100000)+'0000000000000';\n    const tokenUri = rightInfo+toknUri;\n    //const saveItemIdx = await uploadItemIdx();\n    if(title !== '' && desc !== '' ){\n      setNFTidx(SEND_ADDR, PRIVATE_KEY, tokenUri, value, royality, NumOfTokn).then(\n        result => {\n          if(result === true){\n            intervalId = setInterval(() => {\n              if(count > 9){\n                stopTimer();\n                setFlag(false);\n                alert('입력하신 Private Key가 다른 주소의 키 같습니다\\n 키를 확인 후 다시 시도하여주십시오.')\n              }\n              else\n                ++count;\n            }, 1000);\n          }\n          else{\n            setFlag(false);\n            alert(`⚠️Err: ${result}`);\n          }\n        })\n      }\n    else{\n      setFlag(false);\n      alert('Please enter the title and description of the item to be uploaded');\n    }\n  }\n  const uploadItemIdx = async(_itemId) => {\n    const userId = await getUserId(SEND_ADDR);\n    const record = {\n      itemId: parseInt(_itemId),\n      title: title,\n      desc: desc,\n      hash: toknUri,\n      userId: userId\n    }\n    postUploadItemIdx(record).then(response => {\n      console.log('checka')\n      if(response){\n        setFlag(false);\n        stopTimer();\n        alert('🎉Successfully Created');\n        navigate(\"/\");\n      }\n    })\n  }\n  const itemCreateEvtListener = async() => {\n    console.log('wow')\n    // const listen = await eventCreateItem(SEND_ADDR);\n    eventCreateItem(SEND_ADDR).then(listen => {\n      if(listen){\n        uploadItemIdx(listen.itemId);\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n  return(\n    <>\n    {/* <button onClick={putDBtoknIDX}>temp</button> */}\n    <h3>아이템 판매정보 입력</h3>\n    <p>quantity: <input placeholder='quantity of token' onChange={(evt)=>setNumOfTokn(evt.target.value)} disabled={active}/></p>\n    <p>price: <input placeholder='price of token' onChange={(evt)=>setValue(evt.target.value)} /></p>\n    <p>royalties: <input placeholder='MATIC' onChange={(evt)=>setLowest(evt.target.value)} defaultValue='0'/></p>\n    <p>private Key: <input placeholder='input your private key to mint nft' onChange={(evt)=>setPrivKey(evt.target.value)} size='45'/></p>\n    <button onClick={() => {setFlag(true); setItem();}}>판매시작</button>\n    <WaitModal showFlag={modalFlag} />\n    </>\n  )\n}\nconst stopTimer = () => {\n  clearInterval(intervalId);\n  intervalId=null;\n  count = 0;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}