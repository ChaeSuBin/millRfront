{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/pages/createNft.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { SetFileHash } from \"../components/setFileHash\";\nimport { MintItemCpnt } from \"../components/mintItem\";\nimport { RightBranch } from \"../components/rightBranch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateNft = _ref => {\n  _s();\n\n  let {\n    web3\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [desc, setDesc] = useState('');\n  const [itemHash, setHash] = useState(null);\n  const [plusUri, setRight] = useState();\n  const [loginFlag, setFlag] = useState(false);\n  useEffect(() => {\n    const uid = sessionStorage.getItem('userid');\n\n    if (uid === null) {\n      alert('로그인 후 이용가능합니다.');\n      setFlag(false);\n    } else {\n      alert('아이템 업로드 전 블록체인 지갑 주소와 Private key를 확인해주세요.');\n      setFlag(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loginFlag ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"title: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"title\",\n          onChange: evt => setTitle(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"description: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"docudesc\",\n          rows: \"5\",\n          cols: \"55\",\n          placeholder: \"description of the NFT to upload\\r\",\n          onChange: evt => setDesc(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightBranch, {\n        pWire: rightInfo => setRight(rightInfo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SetFileHash, {\n        pWire: hash => setHash(hash)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), itemHash == null ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(MintItemCpnt, {\n          title: title,\n          desc: desc,\n          toknUri: itemHash,\n          rightInfo: plusUri\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(CreateNft, \"go0PtnzjjDB8xpzpScKssDHllps=\");\n\n_c = CreateNft;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNft\");","map":{"version":3,"names":["React","useState","useEffect","SetFileHash","MintItemCpnt","RightBranch","CreateNft","web3","title","setTitle","desc","setDesc","itemHash","setHash","plusUri","setRight","loginFlag","setFlag","uid","sessionStorage","getItem","alert","evt","target","value","rightInfo","hash"],"sources":["/home/giparang/threadweb/fortune/client/src/pages/createNft.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { SetFileHash } from \"../components/setFileHash\";\nimport { MintItemCpnt } from \"../components/mintItem\";\nimport { RightBranch } from \"../components/rightBranch\";\n\nexport const CreateNft = ({web3}) => {\n  const [title, setTitle] = useState('');\n  const [desc, setDesc] = useState('');\n  const [itemHash, setHash] = useState(null);\n  const [plusUri, setRight] = useState();\n  const [loginFlag, setFlag] = useState(false);\n\n  useEffect(() => {\n    const uid = sessionStorage.getItem('userid');\n    if(uid === null){\n      alert('로그인 후 이용가능합니다.')\n      setFlag(false);\n    }\n    else{\n      alert('아이템 업로드 전 블록체인 지갑 주소와 Private key를 확인해주세요.');\n      setFlag(true);\n    }\n  },[])\n  return(\n    <>\n      {loginFlag ? <>\n        <h5>title: <input placeholder='title' onChange={(evt)=>setTitle(evt.target.value)}/></h5>\n        <h5>description: <br/>\n        <textarea name=\"docudesc\" rows='5' cols='55' placeholder=\"description of the NFT to upload&#13;\" \n          onChange={(evt) => setDesc(evt.target.value)}/></h5>\n        <RightBranch pWire={(rightInfo)=>setRight(rightInfo)}/>\n        <SetFileHash pWire={(hash)=>setHash(hash)} />\n        {itemHash == null ?\n          <>\n          </> : <>\n            <MintItemCpnt title={title} desc={desc} toknUri={itemHash} rightInfo={plusUri}/>\n          </>\n        }  \n      </>:<>\n        <p>로그인이 필요합니다.</p>\n      </>}\n      \n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,WAAT,QAA4B,2BAA5B;;;AAEA,OAAO,MAAMC,SAAS,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EACnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACW,QAAD,EAAWC,OAAX,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACa,OAAD,EAAUC,QAAV,IAAsBd,QAAQ,EAApC;EACA,MAAM,CAACe,SAAD,EAAYC,OAAZ,IAAuBhB,QAAQ,CAAC,KAAD,CAArC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMgB,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAZ;;IACA,IAAGF,GAAG,KAAK,IAAX,EAAgB;MACdG,KAAK,CAAC,gBAAD,CAAL;MACAJ,OAAO,CAAC,KAAD,CAAP;IACD,CAHD,MAII;MACFI,KAAK,CAAC,4CAAD,CAAL;MACAJ,OAAO,CAAC,IAAD,CAAP;IACD;EACF,CAVQ,EAUP,EAVO,CAAT;EAWA,oBACE;IAAA,UACGD,SAAS,gBAAG;MAAA,wBACX;QAAA,mCAAW;UAAO,WAAW,EAAC,OAAnB;UAA2B,QAAQ,EAAGM,GAAD,IAAOb,QAAQ,CAACa,GAAG,CAACC,MAAJ,CAAWC,KAAZ;QAApD;UAAA;UAAA;UAAA;QAAA,QAAX;MAAA;QAAA;QAAA;QAAA;MAAA,QADW,eAEX;QAAA,yCAAiB;UAAA;UAAA;UAAA;QAAA,QAAjB,eACA;UAAU,IAAI,EAAC,UAAf;UAA0B,IAAI,EAAC,GAA/B;UAAmC,IAAI,EAAC,IAAxC;UAA6C,WAAW,EAAC,oCAAzD;UACE,QAAQ,EAAGF,GAAD,IAASX,OAAO,CAACW,GAAG,CAACC,MAAJ,CAAWC,KAAZ;QAD5B;UAAA;UAAA;UAAA;QAAA,QADA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFW,eAKX,QAAC,WAAD;QAAa,KAAK,EAAGC,SAAD,IAAaV,QAAQ,CAACU,SAAD;MAAzC;QAAA;QAAA;QAAA;MAAA,QALW,eAMX,QAAC,WAAD;QAAa,KAAK,EAAGC,IAAD,IAAQb,OAAO,CAACa,IAAD;MAAnC;QAAA;QAAA;QAAA;MAAA,QANW,EAOVd,QAAQ,IAAI,IAAZ,gBACC,qCADD,gBAEO;QAAA,uBACJ,QAAC,YAAD;UAAc,KAAK,EAAEJ,KAArB;UAA4B,IAAI,EAAEE,IAAlC;UAAwC,OAAO,EAAEE,QAAjD;UAA2D,SAAS,EAAEE;QAAtE;UAAA;UAAA;UAAA;QAAA;MADI,iBATG;IAAA,gBAAH,gBAaN;MAAA,uBACF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADE;EAdN,iBADF;AAqBD,CAvCM;;GAAMR,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}