{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/setMyNft.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getSymbol, getTokenUri, getTokenStatus } from '../utilityUnits/connMintService';\nimport { ListItemsCpnt } from './itemCpnt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SetMyNFT = _ref => {\n  _s();\n\n  let {\n    chainId\n  } = _ref;\n  const [toknList, setToknList] = useState([]);\n  const [toknUri, setToknUri] = useState([]);\n  const [toknStatus, setStatus] = useState([]);\n  useEffect(() => {\n    toknListViewer();\n  }, []);\n\n  const toknListViewer = async () => {\n    let toknUriArr = [];\n    let toknStatusArr = [];\n    const ownedArr = await getToknIdList(chainId);\n    setToknList(ownedArr);\n\n    for (let fori = 0; fori < ownedArr.length; ++fori) {\n      toknUriArr.push(await getToknUri(ownedArr[fori]));\n      toknStatusArr.push(await getToknStatus(ownedArr[fori]));\n    }\n\n    setToknUri(toknUriArr);\n    setStatus(toknStatusArr);\n  };\n\n  const getToknStatus = async _toknId => {\n    const toknStatus = await getTokenStatus(_toknId);\n    let count = 0; //console.log(typeof toknStatus[0]);\n\n    do {\n      toknStatus[0] /= 100;\n      ++count;\n    } while (count < 9);\n\n    if (toknStatus[0] != 0) return `${toknStatus[0]} MATIC`;else return 'not for sale';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"owend NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), toknList.map((searchItems, index) => /*#__PURE__*/_jsxDEV(ListItemsCpnt, {\n      toknId: searchItems,\n      toknUri: toknUri[index],\n      status: toknStatus[index]\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}; // const getToknIdList = async(_chainId) => {\n//   const f = function (a, b) { return a - b }\n//   const toknIdArrStr = await getOwnedToken(_chainId);\n//   const ownedArr = toknIdArrStr.slice().sort(f);\n//   //.map(str => parseInt(str, 10))\n//   return ownedArr;\n// }\n\n_s(SetMyNFT, \"mQ3Ky99IEnzHXQA83MhHKx++o7k=\");\n\n_c = SetMyNFT;\n\nconst getToknUri = async _toknId => {\n  return await getTokenUri(_toknId);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SetMyNFT\");","map":{"version":3,"names":["React","useState","useEffect","getSymbol","getTokenUri","getTokenStatus","ListItemsCpnt","SetMyNFT","chainId","toknList","setToknList","toknUri","setToknUri","toknStatus","setStatus","toknListViewer","toknUriArr","toknStatusArr","ownedArr","getToknIdList","fori","length","push","getToknUri","getToknStatus","_toknId","count","map","searchItems","index"],"sources":["/home/giparang/threadweb/fortune/client/src/components/setMyNft.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { \n    getSymbol, \n    getTokenUri, \n    getTokenStatus,\n} from '../utilityUnits/connMintService';\nimport { ListItemsCpnt } from './itemCpnt';\n\nexport const SetMyNFT = ({chainId}) => {\n  \n  const [toknList, setToknList] = useState([]);\n  const [toknUri, setToknUri] = useState([]);\n  const [toknStatus, setStatus] = useState([]);\n\n  useEffect(()=>{\n    toknListViewer();\n  },[])\n\n  const toknListViewer = async() => {\n    let toknUriArr = [];\n    let toknStatusArr = [];\n\n    const ownedArr = await getToknIdList(chainId);\n    setToknList(ownedArr);\n    \n    for(let fori = 0; fori < ownedArr.length; ++fori){\n      toknUriArr.push(await getToknUri(ownedArr[fori]));\n      toknStatusArr.push(await getToknStatus(ownedArr[fori]))\n    }\n    setToknUri(toknUriArr);\n    setStatus(toknStatusArr);\n  }\n  \n  const getToknStatus = async(_toknId) => {\n    const toknStatus = await getTokenStatus(_toknId);\n    let count = 0;\n    //console.log(typeof toknStatus[0]);\n    do{\n      toknStatus[0] /= 100;\n      ++count;\n    }while(count < 9)\n    \n    if(toknStatus[0] != 0)\n      return `${toknStatus[0]} MATIC`;\n    else\n      return 'not for sale';\n  }\n\n  return(\n    <>\n      <h2>owend NFT</h2>\n      {toknList.map((searchItems, index) => (\n        <ListItemsCpnt\n          key={index}\n          toknId={searchItems}\n          toknUri={toknUri[index]}\n          status={toknStatus[index]}\n        />\n      ))}\n    </>\n  )\n}\n// const getToknIdList = async(_chainId) => {\n//   const f = function (a, b) { return a - b }\n//   const toknIdArrStr = await getOwnedToken(_chainId);\n//   const ownedArr = toknIdArrStr.slice().sort(f);\n//   //.map(str => parseInt(str, 10))\n//   return ownedArr;\n// }\nconst getToknUri = async(_toknId) => {\n  return await getTokenUri(_toknId);\n}\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACIC,SADJ,EAEIC,WAFJ,EAGIC,cAHJ,QAIO,iCAJP;AAKA,SAASC,aAAT,QAA8B,YAA9B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAe;EAAA;;EAAA,IAAd;IAACC;EAAD,CAAc;EAErC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACY,UAAD,EAAaC,SAAb,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;EAEAC,SAAS,CAAC,MAAI;IACZa,cAAc;EACf,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMA,cAAc,GAAG,YAAW;IAChC,IAAIC,UAAU,GAAG,EAAjB;IACA,IAAIC,aAAa,GAAG,EAApB;IAEA,MAAMC,QAAQ,GAAG,MAAMC,aAAa,CAACX,OAAD,CAApC;IACAE,WAAW,CAACQ,QAAD,CAAX;;IAEA,KAAI,IAAIE,IAAI,GAAG,CAAf,EAAkBA,IAAI,GAAGF,QAAQ,CAACG,MAAlC,EAA0C,EAAED,IAA5C,EAAiD;MAC/CJ,UAAU,CAACM,IAAX,CAAgB,MAAMC,UAAU,CAACL,QAAQ,CAACE,IAAD,CAAT,CAAhC;MACAH,aAAa,CAACK,IAAd,CAAmB,MAAME,aAAa,CAACN,QAAQ,CAACE,IAAD,CAAT,CAAtC;IACD;;IACDR,UAAU,CAACI,UAAD,CAAV;IACAF,SAAS,CAACG,aAAD,CAAT;EACD,CAbD;;EAeA,MAAMO,aAAa,GAAG,MAAMC,OAAN,IAAkB;IACtC,MAAMZ,UAAU,GAAG,MAAMR,cAAc,CAACoB,OAAD,CAAvC;IACA,IAAIC,KAAK,GAAG,CAAZ,CAFsC,CAGtC;;IACA,GAAE;MACAb,UAAU,CAAC,CAAD,CAAV,IAAiB,GAAjB;MACA,EAAEa,KAAF;IACD,CAHD,QAGOA,KAAK,GAAG,CAHf;;IAKA,IAAGb,UAAU,CAAC,CAAD,CAAV,IAAiB,CAApB,EACE,OAAQ,GAAEA,UAAU,CAAC,CAAD,CAAI,QAAxB,CADF,KAGE,OAAO,cAAP;EACH,CAbD;;EAeA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGJ,QAAQ,CAACkB,GAAT,CAAa,CAACC,WAAD,EAAcC,KAAd,kBACZ,QAAC,aAAD;MAEE,MAAM,EAAED,WAFV;MAGE,OAAO,EAAEjB,OAAO,CAACkB,KAAD,CAHlB;MAIE,MAAM,EAAEhB,UAAU,CAACgB,KAAD;IAJpB,GACOA,KADP;MAAA;MAAA;MAAA;IAAA,QADD,CAFH;EAAA,gBADF;AAaD,CArDM,C,CAsDP;AACA;AACA;AACA;AACA;AACA;AACA;;GA5DatB,Q;;KAAAA,Q;;AA6Db,MAAMgB,UAAU,GAAG,MAAME,OAAN,IAAkB;EACnC,OAAO,MAAMrB,WAAW,CAACqB,OAAD,CAAxB;AACD,CAFD"},"metadata":{},"sourceType":"module"}