{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/pages/createNft.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { onFileInputChange, getFiles } from \"../components/uploadFile\";\nimport { getFileHash } from \"../components/SHA256\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateNft = () => {\n  _s();\n\n  const [fileBuffer, setFileBuffer] = useState();\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHash] = useState([]);\n\n  const fileToHash = () => {\n    let fileNum = 0;\n    let fileHashArr = [];\n\n    do {\n      fileHashArr.push(getFileHash(fileBuffer[fileNum]));\n      ++fileNum;\n    } while (fileBuffer.length > fileNum);\n\n    setFileHash(fileHashArr);\n  };\n\n  const FilesList = _eachfile => {\n    fileToHash();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: _eachfile.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputfile\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: onFileInputChange,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 102\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getFiles(setFileBuffer, setFileInfo),\n      children: \"set file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), fileInfo.map(uploadItems => /*#__PURE__*/_jsxDEV(FilesList, {\n      title: uploadItems.name,\n      type: uploadItems.type,\n      size: uploadItems.size\n    }, uploadItems.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), fileHashs.map(files => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateNft, \"NsnmyJrQKKUZXC5BRnS8HcwGuzY=\");\n\n_c = CreateNft;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNft\");","map":{"version":3,"names":["React","useState","onFileInputChange","getFiles","getFileHash","CreateNft","fileBuffer","setFileBuffer","fileInfo","setFileInfo","fileHashs","setFileHash","fileToHash","fileNum","fileHashArr","push","length","FilesList","_eachfile","title","map","uploadItems","name","type","size","files"],"sources":["/home/giparang/threadweb/fortune/client/src/pages/createNft.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { onFileInputChange, getFiles } from \"../components/uploadFile\";\nimport { getFileHash } from \"../components/SHA256\";\n\nexport const CreateNft = () => {\n\n  const [fileBuffer, setFileBuffer] = useState();\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHash] = useState([]);\n\n  const fileToHash = () => {\n    let fileNum = 0\n    let fileHashArr = [];\n\n    do {\n      fileHashArr.push(getFileHash(fileBuffer[fileNum]));\n      ++fileNum;\n    } while (fileBuffer.length > fileNum);\n    \n    setFileHash(fileHashArr);\n  }\n\n  const FilesList = (_eachfile) => {\n    fileToHash();\n    return(\n      <>\n        <p>{_eachfile.title}</p>\n      </>\n    )\n  }\n  return(\n    <div className=\"App\">\n      <p>extract</p>\n      <label className=\"inputfile\"><input type='file' onChange={onFileInputChange} multiple/></label><br/>\n      <button onClick={()=>getFiles(setFileBuffer, setFileInfo)}>set file</button>\n\n      {fileInfo.map(uploadItems => (\n        <FilesList\n          key={uploadItems.name}\n          title = {uploadItems.name}\n          type = {uploadItems.type}\n          size = {uploadItems.size}\n        />\n      ))}\n      {fileHashs.map(files => (\n        <p>{files}</p>\n      ))}\n    </div>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,0BAA5C;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAE7B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,EAA5C;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACS,SAAD,EAAYC,WAAZ,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;;EAEA,MAAMW,UAAU,GAAG,MAAM;IACvB,IAAIC,OAAO,GAAG,CAAd;IACA,IAAIC,WAAW,GAAG,EAAlB;;IAEA,GAAG;MACDA,WAAW,CAACC,IAAZ,CAAiBX,WAAW,CAACE,UAAU,CAACO,OAAD,CAAX,CAA5B;MACA,EAAEA,OAAF;IACD,CAHD,QAGSP,UAAU,CAACU,MAAX,GAAoBH,OAH7B;;IAKAF,WAAW,CAACG,WAAD,CAAX;EACD,CAVD;;EAYA,MAAMG,SAAS,GAAIC,SAAD,IAAe;IAC/BN,UAAU;IACV,oBACE;MAAA,uBACE;QAAA,UAAIM,SAAS,CAACC;MAAd;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAKD,CAPD;;EAQA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,SAAS,EAAC,WAAjB;MAAA,uBAA6B;QAAO,IAAI,EAAC,MAAZ;QAAmB,QAAQ,EAAEjB,iBAA7B;QAAgD,QAAQ;MAAxD;QAAA;QAAA;QAAA;MAAA;IAA7B;MAAA;MAAA;MAAA;IAAA,QAFF,eAEiG;MAAA;MAAA;MAAA;IAAA,QAFjG,eAGE;MAAQ,OAAO,EAAE,MAAIC,QAAQ,CAACI,aAAD,EAAgBE,WAAhB,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,EAKGD,QAAQ,CAACY,GAAT,CAAaC,WAAW,iBACvB,QAAC,SAAD;MAEE,KAAK,EAAIA,WAAW,CAACC,IAFvB;MAGE,IAAI,EAAID,WAAW,CAACE,IAHtB;MAIE,IAAI,EAAIF,WAAW,CAACG;IAJtB,GACOH,WAAW,CAACC,IADnB;MAAA;MAAA;MAAA;IAAA,QADD,CALH,EAaGZ,SAAS,CAACU,GAAV,CAAcK,KAAK,iBAClB;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QADD,CAbH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA7CM;;GAAMpB,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}