{"ast":null,"code":"import { getFileHash } from \"./SHA256\";\nexport const fileToHash = (_fileBuffer, setFileHash) => {\n  let fileNum = 0;\n  let fileHashArr = [];\n\n  try {\n    do {\n      //console.log(getFileHash(fileBuffer[fileNum].join('')));\n      fileHashArr.push(getFileHash(_fileBuffer[fileNum].join('')));\n      ++fileNum;\n    } while (_fileBuffer.length > fileNum);\n\n    console.log(fileHashArr);\n    setFileHash(fileHashArr);\n  } catch (e) {\n    console.log('file upload version: intratest8888');\n  }\n};\nexport const setFinalHash = str => {\n  console.log(str);\n};","map":{"version":3,"names":["getFileHash","fileToHash","_fileBuffer","setFileHash","fileNum","fileHashArr","push","join","length","console","log","e","setFinalHash","str"],"sources":["/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToHash.js"],"sourcesContent":["import { getFileHash } from \"./SHA256\";\n\nexport const fileToHash = (_fileBuffer, setFileHash) => {\n  let fileNum = 0\n  let fileHashArr = [];\n\n  try{\n    do {\n      //console.log(getFileHash(fileBuffer[fileNum].join('')));\n      fileHashArr.push(getFileHash(_fileBuffer[fileNum].join('')));\n      ++fileNum;\n    } while (_fileBuffer.length > fileNum);\n      console.log(fileHashArr);\n      setFileHash(fileHashArr);\n    }\n  catch(e){\n    console.log('file upload version: intratest8888');\n  }\n}\n\nexport const setFinalHash = (str) => {\n  console.log(str);\n}"],"mappings":"AAAA,SAASA,WAAT,QAA4B,UAA5B;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAcC,WAAd,KAA8B;EACtD,IAAIC,OAAO,GAAG,CAAd;EACA,IAAIC,WAAW,GAAG,EAAlB;;EAEA,IAAG;IACD,GAAG;MACD;MACAA,WAAW,CAACC,IAAZ,CAAiBN,WAAW,CAACE,WAAW,CAACE,OAAD,CAAX,CAAqBG,IAArB,CAA0B,EAA1B,CAAD,CAA5B;MACA,EAAEH,OAAF;IACD,CAJD,QAISF,WAAW,CAACM,MAAZ,GAAqBJ,OAJ9B;;IAKEK,OAAO,CAACC,GAAR,CAAYL,WAAZ;IACAF,WAAW,CAACE,WAAD,CAAX;EACD,CARH,CASA,OAAMM,CAAN,EAAQ;IACNF,OAAO,CAACC,GAAR,CAAY,oCAAZ;EACD;AACF,CAhBM;AAkBP,OAAO,MAAME,YAAY,GAAIC,GAAD,IAAS;EACnCJ,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,CAFM"},"metadata":{},"sourceType":"module"}