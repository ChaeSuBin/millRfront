{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/setFileHash.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { onFileInputChange } from \"../utilityUnits/fileToBuffer\";\nimport { fileToHash, setFinalHash } from '../utilityUnits/fileToHash';\nimport { FilesList } from \"../components/dispFileList\";\nimport { postUploadArtwork } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SetFileHash = () => {\n  _s();\n\n  let te = -1;\n  const [fileBuffer, setFileBuffer] = useState([]);\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHash] = useState([]);\n  const [finalHash, setFinalH] = useState();\n  const [fileType, setType] = useState([]);\n  useEffect(() => {\n    sortFileSize(); // setTimeout(() => {\n    //   fileToHash(fileBuffer, setFileHash);\n    // }, 200);\n  }, [fileInfo]);\n\n  const sortFileSize = () => {\n    let asc = function (a, b) {\n      console.log(a.length);\n      return a.length < b.length ? -1 : 1; //オブジェクトの昇順ソート\n    };\n\n    console.log(fileBuffer.sort(asc));\n  };\n\n  const getFinalHash = () => {\n    let fileNum = 0;\n    let hashsStr = '';\n    let fileTypeArr = [];\n\n    do {\n      hashsStr += fileHashs[fileNum];\n      fileTypeArr.push(fileInfo[fileNum].type.split('/').pop());\n      ++fileNum;\n    } while (fileHashs.length > fileNum);\n\n    setFinalH(setFinalHash(hashsStr));\n    console.log(hashsStr);\n    setType(fileTypeArr);\n  };\n\n  const uploadItem = () => {\n    getFinalHash();\n    console.log(fileType);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputfile\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: evt => onFileInputChange(evt, setFileBuffer, setFileInfo),\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 142\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), fileInfo.map(uploadItems => /*#__PURE__*/_jsxDEV(FilesList, {\n      row: ++te,\n      title: uploadItems.name,\n      type: uploadItems.type,\n      size: uploadItems.size,\n      hash: fileHashs[te]\n    }, uploadItems.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadItem,\n      children: \"uploadFiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SetFileHash, \"Nxk1I7tjhJU5W9GAiUDdxN0s5k4=\");\n\n_c = SetFileHash;\n\nconst uploadFiles = (_title, _desc, _hash, _typeArr, _fileBuffer) => {\n  const record = {\n    title: _title,\n    desc: _desc,\n    hash: _hash,\n    typeArr: _typeArr,\n    fileBuffer: _fileBuffer\n  }; //postUploadArtwork\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SetFileHash\");","map":{"version":3,"names":["React","useState","useEffect","onFileInputChange","fileToHash","setFinalHash","FilesList","postUploadArtwork","SetFileHash","te","fileBuffer","setFileBuffer","fileInfo","setFileInfo","fileHashs","setFileHash","finalHash","setFinalH","fileType","setType","sortFileSize","asc","a","b","console","log","length","sort","getFinalHash","fileNum","hashsStr","fileTypeArr","push","type","split","pop","uploadItem","evt","map","uploadItems","name","size","uploadFiles","_title","_desc","_hash","_typeArr","_fileBuffer","record","title","desc","hash","typeArr"],"sources":["/home/giparang/threadweb/fortune/client/src/components/setFileHash.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { onFileInputChange } from \"../utilityUnits/fileToBuffer\";\nimport { fileToHash, setFinalHash } from '../utilityUnits/fileToHash'\nimport { FilesList } from \"../components/dispFileList\";\nimport { postUploadArtwork } from \"../api\";\n\nexport const SetFileHash = () => {\n\n  let te = -1;\n  const [fileBuffer, setFileBuffer] = useState([]);\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHash] = useState([]);\n  const [finalHash, setFinalH] = useState();\n  const [fileType, setType] = useState([]);\n\n  useEffect(()=>{\n    sortFileSize();\n    // setTimeout(() => {\n    //   fileToHash(fileBuffer, setFileHash);\n    // }, 200);\n  },[fileInfo])\n\n  const sortFileSize = () => {\n    let asc = function (a, b) {\n      console.log(a.length);\n      return (a.length < b.length) ? -1 : 1;  //オブジェクトの昇順ソート\n    }\n    console.log(fileBuffer.sort(asc));\n  }\n  \n  const getFinalHash = () => {\n    let fileNum = 0;\n    let hashsStr = '';\n    let fileTypeArr = [];\n    do {\n      hashsStr += fileHashs[fileNum];\n      fileTypeArr.push((fileInfo[fileNum].type).split('/').pop());\n      ++fileNum;\n    } while (fileHashs.length > fileNum);\n    setFinalH(setFinalHash(hashsStr));\n    console.log(hashsStr);\n    setType(fileTypeArr);\n  }\n\n  const uploadItem = () => {\n    getFinalHash();\n    console.log(fileType);\n  }\n  return(\n    <div>\n      <p>extract</p>\n      <label className=\"inputfile\"><input type='file' onChange={(evt)=>onFileInputChange(evt, setFileBuffer, setFileInfo)} multiple/></label><br/>\n      <br/>\n      {fileInfo.map(uploadItems => (\n        <FilesList\n          key={uploadItems.name}\n          row={++te}\n          title = {uploadItems.name}\n          type = {uploadItems.type}\n          size = {uploadItems.size}\n          hash = {fileHashs[te]}\n        />\n      ))}\n      <button onClick={uploadItem}>uploadFiles</button>\n    </div>\n  )\n}\nconst uploadFiles = (_title, _desc, _hash, _typeArr, _fileBuffer) => {\n    const record = {\n      title: _title,\n      desc: _desc,\n      hash: _hash,\n      typeArr: _typeArr,\n      fileBuffer: _fileBuffer\n    }\n    //postUploadArtwork\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}