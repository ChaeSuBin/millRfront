{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/pages/createNft.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { SetFileHash } from \"../components/uploadIDX/setFileHash\";\nimport { MintItemCpnt } from \"../components/uploadIDX/mintItem\";\nimport { RightBranch } from \"../components/uploadIDX/rightBranch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateNft = _ref => {\n  _s();\n\n  let {\n    web3\n  } = _ref;\n  const uid = sessionStorage.getItem('userid');\n  const [title, setTitle] = useState('');\n  const [desc, setDesc] = useState('');\n  const [itemHash, setHash] = useState(null);\n  const [plusUri, setRight] = useState();\n  const [loginFlag, setFlag] = useState(false);\n  useEffect(() => {\n    checkLogined(uid);\n    console.log(uid);\n  }, []);\n\n  const checkLogined = uid => {\n    if (uid === null) {\n      setFlag(false);\n    } else {\n      setFlag(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loginFlag ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"\\uD310\\uB9E4 \\uC218\\uB7C9: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"quantity of token\",\n          onChange: evt => setNumOfTokn(evt.target.value),\n          disabled: active\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"\\uD310\\uB9E4 \\uAC00\\uACA9: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"price of token\",\n          onChange: evt => setValue(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"\\uB85C\\uC5F4\\uD2F0: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"MATIC\",\n          onChange: evt => setLowest(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"private Key: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"input your private key to mint nft\",\n          onChange: evt => setPrivKey(evt.target.value),\n          size: \"45\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"title: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"title\",\n          onChange: evt => setTitle(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"description: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"docudesc\",\n          rows: \"5\",\n          cols: \"55\",\n          placeholder: \"description of the NFT to upload\\r\",\n          onChange: evt => setDesc(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightBranch, {\n        pWire: rightInfo => setRight(rightInfo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SetFileHash, {\n        pWire: hash => setHash(hash)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD310\\uB9E4 \\uC544\\uC774\\uD15C \\uC5C5\\uB85C\\uB4DC\\uB97C \\uC704\\uD574 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(CreateNft, \"go0PtnzjjDB8xpzpScKssDHllps=\");\n\n_c = CreateNft;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNft\");","map":{"version":3,"names":["React","useState","useEffect","SetFileHash","MintItemCpnt","RightBranch","CreateNft","web3","uid","sessionStorage","getItem","title","setTitle","desc","setDesc","itemHash","setHash","plusUri","setRight","loginFlag","setFlag","checkLogined","console","log","evt","setNumOfTokn","target","value","active","setValue","setLowest","setPrivKey","rightInfo","hash"],"sources":["/home/giparang/threadweb/fortune/client/src/pages/createNft.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { SetFileHash } from \"../components/uploadIDX/setFileHash\";\nimport { MintItemCpnt } from \"../components/uploadIDX/mintItem\";\nimport { RightBranch } from \"../components/uploadIDX/rightBranch\";\n\nexport const CreateNft = ({web3}) => {\n  const uid = sessionStorage.getItem('userid');\n  const [title, setTitle] = useState('');\n  const [desc, setDesc] = useState('');\n  const [itemHash, setHash] = useState(null);\n  const [plusUri, setRight] = useState();\n  const [loginFlag, setFlag] = useState(false);\n\n  useEffect(() => {\n    checkLogined(uid);\n    console.log(uid);\n  },[])\n\n  const checkLogined = (uid) => {\n    if(uid === null){\n      setFlag(false);\n    }\n    else{\n      setFlag(true);\n    }\n  }\n\n  return(\n    <>\n      {loginFlag ? <>\n        <h5>판매 수량: <input placeholder='quantity of token' onChange={(evt)=>setNumOfTokn(evt.target.value)} disabled={active}/></h5>\n        <h5>판매 가격: <input placeholder='price of token' onChange={(evt)=>setValue(evt.target.value)} /></h5>\n        <h5>로열티: <input placeholder='MATIC' onChange={(evt)=>setLowest(evt.target.value)}/></h5>\n        <h5>private Key: <input placeholder='input your private key to mint nft' onChange={(evt)=>setPrivKey(evt.target.value)} size='45'/></h5>\n        <h5>title: <input placeholder='title' onChange={(evt)=>setTitle(evt.target.value)}/></h5>\n        <h5>description: <br/>\n        <textarea name=\"docudesc\" rows='5' cols='55' placeholder=\"description of the NFT to upload&#13;\" \n          onChange={(evt) => setDesc(evt.target.value)}/></h5>\n        <RightBranch pWire={(rightInfo)=>setRight(rightInfo)}/>\n        <SetFileHash pWire={(hash)=>setHash(hash)} />\n      </>:<>\n        <p>판매 아이템 업로드를 위해 로그인이 필요합니다.</p>\n      </>}\n      \n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,SAASC,WAAT,QAA4B,qCAA5B;;;AAEA,OAAO,MAAMC,SAAS,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EACnC,MAAMC,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAZ;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACc,QAAD,EAAWC,OAAX,IAAsBf,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACgB,OAAD,EAAUC,QAAV,IAAsBjB,QAAQ,EAApC;EACA,MAAM,CAACkB,SAAD,EAAYC,OAAZ,IAAuBnB,QAAQ,CAAC,KAAD,CAArC;EAEAC,SAAS,CAAC,MAAM;IACdmB,YAAY,CAACb,GAAD,CAAZ;IACAc,OAAO,CAACC,GAAR,CAAYf,GAAZ;EACD,CAHQ,EAGP,EAHO,CAAT;;EAKA,MAAMa,YAAY,GAAIb,GAAD,IAAS;IAC5B,IAAGA,GAAG,KAAK,IAAX,EAAgB;MACdY,OAAO,CAAC,KAAD,CAAP;IACD,CAFD,MAGI;MACFA,OAAO,CAAC,IAAD,CAAP;IACD;EACF,CAPD;;EASA,oBACE;IAAA,UACGD,SAAS,gBAAG;MAAA,wBACX;QAAA,uDAAW;UAAO,WAAW,EAAC,mBAAnB;UAAuC,QAAQ,EAAGK,GAAD,IAAOC,YAAY,CAACD,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAApE;UAAwF,QAAQ,EAAEC;QAAlG;UAAA;UAAA;UAAA;QAAA,QAAX;MAAA;QAAA;QAAA;QAAA;MAAA,QADW,eAEX;QAAA,uDAAW;UAAO,WAAW,EAAC,gBAAnB;UAAoC,QAAQ,EAAGJ,GAAD,IAAOK,QAAQ,CAACL,GAAG,CAACE,MAAJ,CAAWC,KAAZ;QAA7D;UAAA;UAAA;UAAA;QAAA,QAAX;MAAA;QAAA;QAAA;QAAA;MAAA,QAFW,eAGX;QAAA,gDAAS;UAAO,WAAW,EAAC,OAAnB;UAA2B,QAAQ,EAAGH,GAAD,IAAOM,SAAS,CAACN,GAAG,CAACE,MAAJ,CAAWC,KAAZ;QAArD;UAAA;UAAA;UAAA;QAAA,QAAT;MAAA;QAAA;QAAA;QAAA;MAAA,QAHW,eAIX;QAAA,yCAAiB;UAAO,WAAW,EAAC,oCAAnB;UAAwD,QAAQ,EAAGH,GAAD,IAAOO,UAAU,CAACP,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAAnF;UAAuG,IAAI,EAAC;QAA5G;UAAA;UAAA;UAAA;QAAA,QAAjB;MAAA;QAAA;QAAA;QAAA;MAAA,QAJW,eAKX;QAAA,mCAAW;UAAO,WAAW,EAAC,OAAnB;UAA2B,QAAQ,EAAGH,GAAD,IAAOZ,QAAQ,CAACY,GAAG,CAACE,MAAJ,CAAWC,KAAZ;QAApD;UAAA;UAAA;UAAA;QAAA,QAAX;MAAA;QAAA;QAAA;QAAA;MAAA,QALW,eAMX;QAAA,yCAAiB;UAAA;UAAA;UAAA;QAAA,QAAjB,eACA;UAAU,IAAI,EAAC,UAAf;UAA0B,IAAI,EAAC,GAA/B;UAAmC,IAAI,EAAC,IAAxC;UAA6C,WAAW,EAAC,oCAAzD;UACE,QAAQ,EAAGH,GAAD,IAASV,OAAO,CAACU,GAAG,CAACE,MAAJ,CAAWC,KAAZ;QAD5B;UAAA;UAAA;UAAA;QAAA,QADA;MAAA;QAAA;QAAA;QAAA;MAAA,QANW,eASX,QAAC,WAAD;QAAa,KAAK,EAAGK,SAAD,IAAad,QAAQ,CAACc,SAAD;MAAzC;QAAA;QAAA;QAAA;MAAA,QATW,eAUX,QAAC,WAAD;QAAa,KAAK,EAAGC,IAAD,IAAQjB,OAAO,CAACiB,IAAD;MAAnC;QAAA;QAAA;QAAA;MAAA,QAVW;IAAA,gBAAH,gBAWN;MAAA,uBACF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADE;EAZN,iBADF;AAmBD,CAzCM;;GAAM3B,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}