{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/fortune/client/src/components/web3Connector.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport getWeb3 from '../getWeb3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Web3connector = () => {\n  _s();\n\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    connector();\n  });\n\n  const connector = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n      const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n      const networkId = await web3.eth.net.getId();\n      setWeb3(web3);\n      web3.eth.getBlock('latest').then(result => {\n        console.log(result);\n        web3.eth.getTransaction(result.transactions[0]).then(result => {\n          console.log(result.from, result.value);\n        });\n      });\n    } catch (error) {\n      alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n      console.error(error);\n    }\n  };\n\n  const getAccount = () => {\n    window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    }).then(result => {\n      setAccount(result[0]);\n    }).catch(error => {\n      setErrorMessage(error.message);\n    });\n  };\n\n  const getUserBal = () => {\n    web3.eth.getBalance(account).then(balanc => {\n      console.log(balanc);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"web3 connector running\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: getAccount,\n      children: \"Confirm Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), account, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getUserBal,\n      children: \"UserBal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Web3connector, \"pA6mdRqA2T77tusleSOdZ5MiehU=\");\n\n_c = Web3connector;\n\nvar _c;\n\n$RefreshReg$(_c, \"Web3connector\");","map":{"version":3,"names":["React","useState","useEffect","getWeb3","Web3connector","account","setAccount","web3","setWeb3","errorMessage","setErrorMessage","connector","accounts","eth","getAccounts","networkId","net","getId","getBlock","then","result","console","log","getTransaction","transactions","from","value","error","alert","getAccount","window","ethereum","request","method","catch","message","getUserBal","getBalance","balanc"],"sources":["/home/giparang/threadweb/fortune/client/src/components/web3Connector.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport getWeb3 from '../getWeb3';\n\nexport const Web3connector = () => {\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    connector();\n  })\n\n  const connector = async() => {\n    try{\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n          \n      setWeb3(web3);\n      web3.eth.getBlock('latest').then(result =>{\n        console.log(result);\n        web3.eth.getTransaction(result.transactions[0]).then(result =>{\n        console.log(result.from, result.value);\n        });\n      });\n    }\n    catch(error){\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  }\n\n  const getAccount = () => {\n    window.ethereum.request({ method: \"eth_requestAccounts\" }).then((result) => {\n\t\tsetAccount(result[0]);\n\t  }).catch((error) => {\n\t  setErrorMessage(error.message);\n\t  });\n  }\n  const getUserBal = () => {\n    web3.eth.getBalance(account).then(balanc => {\n      console.log(balanc);\n    })\n  }\n\n  return(\n    <>\n      <p>web3 connector running</p>\n      <a onClick={getAccount}>Confirm Account</a>\n      {account}\n      <br/>\n      <button onClick={getUserBal}>UserBal</button>\n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACjC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;EAEAC,SAAS,CAAC,MAAM;IACdS,SAAS;EACV,CAFQ,CAAT;;EAIA,MAAMA,SAAS,GAAG,YAAW;IAC3B,IAAG;MACD;MACA,MAAMJ,IAAI,GAAG,MAAMJ,OAAO,EAA1B,CAFC,CAGD;;MACA,MAAMS,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASC,WAAT,EAAvB,CAJC,CAKD;;MACA,MAAMC,SAAS,GAAG,MAAMR,IAAI,CAACM,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;MAEAT,OAAO,CAACD,IAAD,CAAP;MACAA,IAAI,CAACM,GAAL,CAASK,QAAT,CAAkB,QAAlB,EAA4BC,IAA5B,CAAiCC,MAAM,IAAG;QACxCC,OAAO,CAACC,GAAR,CAAYF,MAAZ;QACAb,IAAI,CAACM,GAAL,CAASU,cAAT,CAAwBH,MAAM,CAACI,YAAP,CAAoB,CAApB,CAAxB,EAAgDL,IAAhD,CAAqDC,MAAM,IAAG;UAC9DC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACK,IAAnB,EAAyBL,MAAM,CAACM,KAAhC;QACC,CAFD;MAGD,CALD;IAMD,CAfD,CAgBA,OAAMC,KAAN,EAAY;MACVC,KAAK,CACF,wEADE,CAAL;MAGAP,OAAO,CAACM,KAAR,CAAcA,KAAd;IACD;EACF,CAvBD;;EAyBA,MAAME,UAAU,GAAG,MAAM;IACvBC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;MAAEC,MAAM,EAAE;IAAV,CAAxB,EAA2Dd,IAA3D,CAAiEC,MAAD,IAAY;MAC9Ed,UAAU,CAACc,MAAM,CAAC,CAAD,CAAP,CAAV;IACE,CAFA,EAEEc,KAFF,CAESP,KAAD,IAAW;MACpBjB,eAAe,CAACiB,KAAK,CAACQ,OAAP,CAAf;IACC,CAJA;EAKD,CAND;;EAOA,MAAMC,UAAU,GAAG,MAAM;IACvB7B,IAAI,CAACM,GAAL,CAASwB,UAAT,CAAoBhC,OAApB,EAA6Bc,IAA7B,CAAkCmB,MAAM,IAAI;MAC1CjB,OAAO,CAACC,GAAR,CAAYgB,MAAZ;IACD,CAFD;EAGD,CAJD;;EAMA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAG,OAAO,EAAET,UAAZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGxB,OAHH,eAIE;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAQ,OAAO,EAAE+B,UAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADF;AASD,CAxDM;;GAAMhC,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}