[{"D:\\workspace\\BBwork_block\\millRfront\\src\\index.js":"1","D:\\workspace\\BBwork_block\\millRfront\\src\\App.js":"2","D:\\workspace\\BBwork_block\\millRfront\\src\\reportWebVitals.js":"3","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\createNft.js":"4","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\rootPage.js":"5","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\userInfo.js":"6","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\loginPage.js":"7","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\itemDtail.js":"8","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\helpDesk.js":"9","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\cooperHome.js":"10","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\donatelist.js":"11","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\naviCpnt.js":"12","D:\\workspace\\BBwork_block\\millRfront\\src\\api.js":"13","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\itemCpnt.js":"14","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\wallet.js":"15","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\setMyNft.js":"16","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\createChainId.js":"17","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\uploadIDX\\rightBranch.js":"18","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\uploadIDX\\setItem.js":"19","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\uploadIDX\\setFileHash.js":"20","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\waitModal.js":"21","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\helpCpnt.js":"22","D:\\workspace\\BBwork_block\\millRfront\\src\\utilityUnits\\SHA256.js":"23","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\detailPages\\setItemIDX.js":"24","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\detailPages\\fileListViewer.js":"25","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\detailPages\\toknMint.js":"26","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\detailPages\\toknTransfer.js":"27","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\detailPages\\setBlockIDX.js":"28","D:\\workspace\\BBwork_block\\millRfront\\src\\utilityUnits\\connMintService.js":"29","D:\\workspace\\BBwork_block\\millRfront\\src\\utilityUnits\\connTradeService.js":"30","D:\\workspace\\BBwork_block\\millRfront\\src\\utilityUnits\\fileToBuffer.js":"31","D:\\workspace\\BBwork_block\\millRfront\\src\\utilityUnits\\fileToHash.js":"32","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\dispFileList.js":"33","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\uploadIDX\\uploadFiles.js":"34"},{"size":558,"mtime":1672215397299,"results":"35","hashOfConfig":"36"},{"size":2127,"mtime":1673431465768,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1672215397306,"results":"38","hashOfConfig":"36"},{"size":2882,"mtime":1673431971636,"results":"39","hashOfConfig":"36"},{"size":2444,"mtime":1674498488161,"results":"40","hashOfConfig":"36"},{"size":913,"mtime":1672215397306,"results":"41","hashOfConfig":"36"},{"size":3217,"mtime":1672215397304,"results":"42","hashOfConfig":"36"},{"size":4717,"mtime":1672286631031,"results":"43","hashOfConfig":"36"},{"size":4558,"mtime":1672215397302,"results":"44","hashOfConfig":"36"},{"size":272,"mtime":1672215397301,"results":"45","hashOfConfig":"36"},{"size":631,"mtime":1672286631029,"results":"46","hashOfConfig":"36"},{"size":1114,"mtime":1673431300000,"results":"47","hashOfConfig":"36"},{"size":3907,"mtime":1674500387985,"results":"48","hashOfConfig":"36"},{"size":1398,"mtime":1672215397290,"results":"49","hashOfConfig":"36"},{"size":5183,"mtime":1672215397306,"results":"50","hashOfConfig":"36"},{"size":7161,"mtime":1672215397292,"results":"51","hashOfConfig":"36"},{"size":2117,"mtime":1672215397285,"results":"52","hashOfConfig":"36"},{"size":3538,"mtime":1672215397293,"results":"53","hashOfConfig":"36"},{"size":4962,"mtime":1672286631025,"results":"54","hashOfConfig":"36"},{"size":2642,"mtime":1672215397294,"results":"55","hashOfConfig":"36"},{"size":477,"mtime":1672215397296,"results":"56","hashOfConfig":"36"},{"size":2827,"mtime":1672286631019,"results":"57","hashOfConfig":"36"},{"size":5058,"mtime":1672215397307,"results":"58","hashOfConfig":"36"},{"size":1135,"mtime":1672215397287,"results":"59","hashOfConfig":"36"},{"size":1494,"mtime":1672215397285,"results":"60","hashOfConfig":"36"},{"size":1919,"mtime":1672215397287,"results":"61","hashOfConfig":"36"},{"size":1367,"mtime":1672215397287,"results":"62","hashOfConfig":"36"},{"size":1816,"mtime":1672286631017,"results":"63","hashOfConfig":"36"},{"size":10512,"mtime":1672215397308,"results":"64","hashOfConfig":"36"},{"size":3262,"mtime":1672215397309,"results":"65","hashOfConfig":"36"},{"size":1033,"mtime":1672215397309,"results":"66","hashOfConfig":"36"},{"size":509,"mtime":1672215397310,"results":"67","hashOfConfig":"36"},{"size":267,"mtime":1672215397288,"results":"68","hashOfConfig":"36"},{"size":1196,"mtime":1672215397295,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f74n0k",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},"D:\\workspace\\BBwork_block\\millRfront\\src\\index.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\App.js",["192","193"],[],"import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Web3 from \"web3/dist/web3.min.js\";\r\nimport { CreateNft } from './pages/createNft.js';\r\nimport { HomePage } from './pages/rootPage';\r\nimport { UserInfoPage } from \"./pages/userInfo\";\r\nimport { LoginInput, RegistInput } from './pages/loginPage';\r\nimport { ItemDetail } from \"./pages/itemDtail\";\r\nimport { HelpDesk } from \"./pages/helpDesk\";\r\nimport { CoperHome } from \"./pages/cooperHome\";\r\nimport { DonateList } from \"./pages/donatelist\";\r\nimport { Nav } from './components/naviCpnt';\r\nfunction App() {\r\n  const [triger, setTriger] = useState(false);\r\n  const uid = sessionStorage.getItem('userid');\r\n  const FROM_ADDR = sessionStorage.getItem('chainid');\r\n  const web3 = new Web3('https://rpc-mumbai.maticvigil.com');\r\n  \r\n  return (\r\n    <div>\r\n      <header className=\"App\">\r\n        <Router>\r\n          <Nav userId={uid} chainId={FROM_ADDR}></Nav>\r\n          <section className=\"\">\r\n            <Routes>\r\n              <Route exact path='/' element={<HomePage />}/>\r\n              <Route exact path='/donatetemp' element={<DonateList />}/>\r\n              <Route exact path='/cooperlate' element={<CoperHome />}/>\r\n              <Route exact path='/helpdesk' element={<HelpDesk />}/>\r\n              <Route exact path='/userregist' element={<RegistInput web3={web3}/>}/>\r\n              <Route exact path='/signinpage' element={<LoginInput triger={(param) => setTriger(param)}/>}/>\r\n              <Route exact path='/myinfo' element={<UserInfoPage web3={web3} chainId={FROM_ADDR}/>}/>\r\n              <Route exact path='/filetohash' element={<CreateNft web3={web3} />}/>\r\n              <Route exact path='/itemdetails/:mode/:id' element={<ItemDetail />}/>\r\n            </Routes>\r\n          </section>\r\n        </Router>\r\n      </header><br/><br/>\r\n      <footer>millRnft v0.4.4 <br/>본 서비스는 베타버전으로서 NFT의 저작재산권등 이용 권리에 실제 효력은 없음을 밝힙니다.</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\workspace\\BBwork_block\\millRfront\\src\\reportWebVitals.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\createNft.js",["194"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { SetFileHash } from \"../components/uploadIDX/setFileHash\";\r\nimport { SetItemCpnt } from \"../components/uploadIDX/setItem\";\r\nimport { RightBranch } from \"../components/uploadIDX/rightBranch\";\r\n\r\nexport const CreateNft = ({web3}) => {\r\n  const SEND_ADDR = sessionStorage.getItem('chainid');\r\n  const [title, setTitle] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n  const [strLen, setStrLen] = useState(0);\r\n  const [itemHash, setHash] = useState(null);\r\n  const [plusUri, setRight] = useState();\r\n  const [loginFlag, setFlag] = useState(false);\r\n\r\n  useEffect(() => {\r\n    initCheck();\r\n  },[])\r\n\r\n  const initCheck = async() => {\r\n    const balZero = await getUserBal();\r\n    checkLogined(balZero);\r\n  }\r\n  const getUserBal = async() => {\r\n    return new Promise(resolve => {\r\n      if(SEND_ADDR === null){\r\n        resolve(true);\r\n      }\r\n      web3.eth.getBalance(SEND_ADDR).then(balanc => {\r\n        let count = 0;\r\n        do{\r\n          balanc /= 1000000;\r\n          ++count;\r\n        }while(count < 3)\r\n        if(balanc < 0.01)\r\n          resolve(true);\r\n        else\r\n          resolve(false);\r\n      })\r\n    })\r\n  }\r\n  const countString = (value) => {\r\n    setStrLen(value.length);\r\n    if(value.length > 120){\r\n      alert('글자수는 최대 120자를 넘길 수 없습니다.')\r\n    }\r\n    else{\r\n      setDesc(value);\r\n    }\r\n  }\r\n  const checkLogined = (balZero) => {\r\n    if(balZero){\r\n      setFlag(false);\r\n    }\r\n    else{\r\n      setFlag(true);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {loginFlag ? <><br/><br/><br/>\r\n        <h3>아이템 제목/설명/이용범위 설정.</h3>\r\n        <p>title: <input placeholder='title' onChange={(evt)=>setTitle(evt.target.value)}/></p>\r\n        <p>description: <br/>\r\n          <textarea name=\"docudesc\" rows='5' cols='55' placeholder=\"업로드할 파일의 설명을 간단히 입력해주세요.&#13;\" \r\n            onChange={(evt) => countString(evt.target.value)}/><br/>\r\n            입력가능: {strLen}/120\r\n        </p>\r\n        <input type=\"checkbox\" value=\"RDT\" />To introduce a new talent<br/>\r\n        <RightBranch pWire={(rightInfo)=>setRight(rightInfo)}/>\r\n        {itemHash == null ?\r\n          <>\r\n            <SetFileHash pWire={(hash)=>setHash(hash)} />\r\n          </> : <>\r\n            <SetItemCpnt title={title} desc={desc} toknUri={itemHash} rightInfo={plusUri}/>\r\n          </>\r\n        }  \r\n      </>:<>\r\n        <p>로그인 되지 않은 사용자거나 판매 아이템 업로드를 위한 폴리곤 코인(matic 코인)이 부족합니다.<br/>\r\n        계정에 폴리곤 코인을 충전 후 다시 시도하여주시기 바랍니다.<br/>\r\n        테스트 코인의 충전은 <a className=\"App-link\" href=\"https://mumbaifaucet.com/\">'여기'</a>에서 할 수 있습니다.</p>\r\n      </>}\r\n      \r\n    </>\r\n  )\r\n}",[],"D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\rootPage.js",["195","196"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { getOpenedItem, getOpenedTokn } from \"../api\";\r\nimport { ListItemsCpnt } from \"../components/itemCpnt\";\r\n\r\nexport const HomePage = () => {\r\n  const [opendList, setOpend] = useState([]);\r\n  const [pageNum, setPage] = useState(1);\r\n  const [allItemRows, setRows] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getOpenedItems(1);\r\n  },[]);\r\n  \r\n  const getOpenedItems = async(_pageNum) => {\r\n    const itemInfo = await getOpenedItem(_pageNum);\r\n    // console.log(itemInfo[0]);\r\n    setRows(itemInfo[1]);\r\n    setOpend(itemInfo[0]);\r\n  }\r\n  const getOpenedTokns = async() => {\r\n    let toknList = [];\r\n    let itemLen = 0;\r\n    const itemInfo = await getOpenedTokn();\r\n    console.log(itemInfo);\r\n    while(itemLen < itemInfo.toknIdList.length){\r\n      toknList[itemLen] = {\r\n        title: itemInfo.items[itemLen].title,\r\n        description: itemInfo.items[itemLen].description, \r\n        toknId: itemInfo.toknIdList[itemLen]};\r\n      ++itemLen;\r\n    }\r\n    setOpend(toknList);\r\n  }\r\n  const refreshPage = () => {\r\n    window.location.assign('./filetohash');\r\n  }\r\n  const nextPage = (_page) => {\r\n    if(allItemRows > _page*5){\r\n      setPage(pageNum+1);\r\n      getOpenedItems(_page+1);\r\n    }\r\n  }\r\n  const prevPage = (_page) => {\r\n    console.log(_page);\r\n    if(_page > 1){\r\n      setPage(pageNum-1);\r\n      getOpenedItems(_page-1);\r\n    }\r\n  }\r\n  return(\r\n    <>\r\n      <p style={{textAlign: \"center\"}}>\r\n      <Link to=\"/filetohash\" style={{ textDecoration: 'none' }}>\r\n        <button onClick={refreshPage} style={{fontSize:\"large\"}}>아이템 업로드</button>\r\n      </Link></p>\r\n      <label><input type=\"radio\" onChange={()=>getOpenedItems(pageNum)} name='comm' defaultChecked/>\r\n        초기판매 아이템 목록 </label>\r\n      <label><input type=\"radio\" onChange={getOpenedTokns} name='comm'/>\r\n        2차거래 NFT 목록 </label><br/>\r\n      {opendList.map((searchItems, index) => (\r\n        <ListItemsCpnt\r\n          key={index}\r\n          title={searchItems.title}\r\n          desc={searchItems.description}\r\n          toknId = {searchItems.toknId}\r\n          itemId = {searchItems.id}\r\n        />\r\n      ))}\r\n      <a onClick={()=>prevPage(pageNum)} style={{cursor: \"pointer\"}} >prev⬅️</a>\r\n      {' '+pageNum+' '}\r\n      <a onClick={()=>nextPage(pageNum)} style={{cursor: \"pointer\"}} >➡️next</a>\r\n    </>\r\n  )\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\userInfo.js",["197"],[],"import React from 'react';\r\nimport { SetMyNFT } from '../components/setMyNft';\r\nimport { Wallet } from './wallet';\r\n\r\nexport const UserInfoPage = ({web3, chainId}) => {\r\n  const scanUrl = `https://mumbai.polygonscan.com/address/${chainId}`;\r\n  const uid = sessionStorage.getItem('userid');\r\n\r\n  return(\r\n    <>\r\n      <h2>Account Info</h2>\r\n      <h4>user ID: {uid}</h4>\r\n      {chainId == \"false\" ? <>\r\n        <h4>현재 사용하시는 브라우저가 최신버전이 아니거나 지원하지 않는 브라우저입니다</h4>\r\n        </>:<>\r\n        {chainId == null ? \r\n        <>\r\n          <h4>chainId: 아직 {uid} 계정에 연결되어있는 폴리곤 지갑이 없습니다.</h4>\r\n        </> : <>\r\n          <h4>지갑 주소: <a href={scanUrl}>{chainId}</a></h4>\r\n          <Wallet web3={web3} ADDR={chainId} />\r\n          <SetMyNFT chainId={chainId} />\r\n        </>}\r\n        </>}\r\n    </>\r\n  )\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\loginPage.js",["198","199","200","201","202","203","204","205","206"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { putLogin, getMatchCode, getChainId, postTempuserTable } from \"../api\";\r\nimport { CreateChainId } from \"../components/createChainId\";\r\nimport { SHA256 } from \"../utilityUnits/SHA256\";\r\n\r\nexport const LoginInput = ({triger}) => {\r\n  const navigate = useNavigate();\r\n  const [inputId, setId] = useState();\r\n  const [inputPass, setPass] = useState();\r\n  const [inputPassConfirm, setConfirm] = useState();\r\n  const [findMode, setFlag] = useState(false);\r\n  const [inputVc, setVc] = useState(null);\r\n  \r\n  const keyPress = (evt) => {\r\n    if(evt.key === 'Enter') submit();\r\n  }\r\n  const submit = async() => {\r\n    const hPass = SHA256(inputPass);\r\n    const record = {\r\n      playerId: inputId,\r\n      playerPass: hPass\r\n    };\r\n    const result = await putLogin(record);\r\n    if(result){\r\n      sessionStorage.setItem('userid', inputId);\r\n\r\n      getChainId(inputId).then(chainId => {\r\n        if(chainId !== null)\r\n          sessionStorage.setItem('chainid', chainId);\r\n        triger(true);\r\n        navigate(\"/\");\r\n        window.location.reload();\r\n      })\r\n    }\r\n    else{\r\n      alert('❗confirm your ID and PASS again');\r\n    }\r\n  }\r\n  return(\r\n    <section>\r\n      <h2>login</h2>\r\n        <h5>Email: <input onChange={(event) => setId(event.target.value)} name=\"id\" placeholder='id'/></h5>\r\n        <h5>pass: <input  onKeyPress={keyPress} type='password' \r\n          onChange={(event) => setPass(event.target.value)} name=\"pw\" placeholder='password'/></h5>\r\n        <button onClick={submit}>login</button>\r\n        <br/>\r\n        <p>millRnft가 처음이시라면 <a className=\"App-link\" href=\"https://millrnft.com/userregist\">'여기'</a>에서 회원가입 진행</p>\r\n        <br/><br/><a style={{cursor: \"not-allowed\"}}><p>주의: 잊어버린 Private Key는 되찾을 수 없습니다.</p></a>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport const RegistInput = ({web3}) => {\r\n  const [inputId, setId] = useState();\r\n  const [inputVerif, setCode] = useState();\r\n  const [inputConfirm, setConfirm] = useState();\r\n  const [vcFlag, setVcFlag] = useState(false);\r\n  const [sendFlag, setSFlag] = useState(false);\r\n  \r\n  const sendVcode = () => {\r\n    postTempuserTable({playerId: inputId});\r\n    setSFlag(true);\r\n  }\r\n  const verifBtn = async() => {\r\n    const matchResult = await getMatchCode(inputId, inputVerif);\r\n    console.log(matchResult);\r\n    setVcFlag(matchResult);\r\n    if(matchResult)\r\n      alert('인증되었습니다');\r\n    else\r\n      alert('잘못된 요청코드입니다 코드를 다시 확인하여 주십시오');\r\n  }\r\n\r\n  return(\r\n    <section>\r\n        <h4>Email: <input placeholder='id' onChange={(evt)=>setId(evt.target.value)}/>\r\n        <button onClick={sendVcode}>인증번호 전송</button></h4>\r\n        {sendFlag ? <p>인증번호가 메일주소 {inputId} 로 전송되었습니다.</p>:<></>}\r\n        <h4>인증번호: <input placeholder='verif' onChange={(evt)=>setCode(evt.target.value)}/>\r\n        <button onClick={verifBtn}>인증하기</button></h4>   \r\n        {vcFlag ? <>\r\n          <CreateChainId uid={inputId} web3={web3}/>\r\n        </>:<>\r\n        </>}\r\n    </section>\r\n  )\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\itemDtail.js",["207"],[],"import React, { useEffect, useState }from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getItemFiles, getItemInfo, getItemInfoFromToknId } from '../components/detailPages/setItemIDX';\r\nimport { FileListViewer } from'../components/detailPages/fileListViewer';\r\nimport { getBlockInfo, getNftInfo } from '../components/detailPages/setBlockIDX';\r\nimport { WaitModal } from '../components/waitModal';\r\nimport { buyToknMint } from '../components/detailPages/toknMint';\r\nimport { buyToknTransfer } from '../components/detailPages/toknTransfer';\r\nimport { Help } from '../components/helpCpnt';\r\n\r\nexport const  ItemDetail = () => {\r\n  const FROM_ADDR = sessionStorage.getItem('chainid');\r\n  const locate = useParams();\r\n  const [itemInfo, setII] = useState({title: '', desc: ''});\r\n  const [itemInfoB, setIB] = useState({price: null, royalty: null, useRange: null, remain: null });\r\n  const [fileList, setFlist] = useState([]);\r\n  const [buyMode, setMode] = useState(false);\r\n  const [buyFlag, setFlag] = useState(false);\r\n  const [waitFlag, set_w_Flag] = useState(false);\r\n  const [helpFlag, setHelp] = useState(false);\r\n  const [helpMode, setHmode] = useState();\r\n  \r\n  useEffect(() => {\r\n    currentMode(locate.id, locate.mode);\r\n  },[])\r\n\r\n  const currentMode = (_rowId, _mode) => {\r\n    if(_mode === 'item')\r\n      modeIgetInfo(_rowId);\r\n    else\r\n      modeTgetInfo(_rowId) //not rowId -> toknId\r\n  }\r\n  const modeIgetInfo = async(_rowId) => {\r\n    const itemInfo = await getItemInfo(_rowId);\r\n    setII(itemInfo);\r\n    const fileList = await getItemFiles(itemInfo.hash);\r\n    setFlist(fileList);\r\n    const itemInfoB = await getBlockInfo(itemInfo.itemId);\r\n    setIB(itemInfoB);\r\n  }\r\n  const modeTgetInfo = async(_toknId) => {\r\n    setMode(true);\r\n    const toknInfo = await getNftInfo(_toknId);\r\n    setIB(toknInfo);\r\n    const fileList = await getItemFiles(toknInfo.fileHash);\r\n    setFlist(fileList);\r\n    const itemInfo = await getItemInfoFromToknId(_toknId);\r\n    setII(itemInfo);\r\n  }\r\n  const openHelp = (evt, _displayMode) => {\r\n    setHelp(true);\r\n    setHmode(_displayMode);\r\n    document.addEventListener('click',closeModal);\r\n    evt.stopPropagation();\r\n  }\r\n  const closeModal = () => {\r\n    setHelp(false);\r\n    document.removeEventListener('click',closeModal);\r\n  }\r\n  return (\r\n  <><br/><br/>\r\n    <h3>title: {itemInfo.title}</h3>\r\n    <h4>가격: {itemInfoB.price} MATIC</h4>\r\n    <h4 onClick={(evt) => openHelp(evt, 6)} style={{cursor: \"help\"}}>기부처: {itemInfo.tempdonate} ❓</h4>\r\n    <h4 style={{cursor: \"help\"}}>기부금: {itemInfoB.royalty} MATIC </h4>\r\n    <h4 onClick={(evt) => openHelp(evt, 0)} style={{cursor: \"help\"}}>이용가능 범위: {itemInfoB.useRange}  ❓</h4>\r\n    \r\n    {buyMode ? \r\n      <>\r\n        <h4>판매상태: {itemInfoB.door}</h4>\r\n      </> : <>\r\n        <h4>남은 수량: {itemInfoB.remain}개 남음</h4>  \r\n      </>}\r\n    <button onClick={() => setFlag(true)}>구매하기</button>\r\n    {fileList.map((searchItems, index) => (\r\n      <FileListViewer\r\n        key={index}\r\n        fileName={searchItems}\r\n        toknUri = {itemInfo.hash}\r\n        permission = {true}\r\n      />\r\n    ))}\r\n    <BuyModal\r\n      showFlag={buyFlag}\r\n      setFlag = {setFlag}\r\n      setFlag2 = {set_w_Flag}\r\n      addr = {FROM_ADDR}\r\n      price = {itemInfoB.price}\r\n      itemId = {itemInfo.itemId}\r\n      buyMode = {buyMode}\r\n    />\r\n    <WaitModal\r\n      showFlag={waitFlag}\r\n    />\r\n    <Help\r\n      showFlag={helpFlag}\r\n      display={helpMode}\r\n    />\r\n  <br/><br/></>\r\n  );\r\n}\r\nconst BuyModal = ({showFlag, setFlag2, setFlag, addr, price, itemId, buyMode}) => {\r\n  const [PRIVATE_KEY, setPriv] = useState();\r\n  \r\n  return(<>\r\n    {showFlag ? ( // showFlagがtrueだったらModalを表示する\r\n    <div id=\"overlay\" className='overlay'>\r\n      <div id=\"modalcontents\" className=\"modalcontents\">\r\n        {addr === null ? <>\r\n          <p>로그인 후 이용가능한 서비스 입니다</p>\r\n        </>:<>\r\n          <h4>가격: {price} Matic</h4>\r\n          <h5> PRIVATE_KEY :\r\n            <input onChange={(evt)=>setPriv(evt.target.value)} size='45'></input></h5>\r\n          {buyMode ? <button onClick={() => {setFlag2(true); buyToknTransfer(price, itemId, setFlag2, addr, PRIVATE_KEY)}}>구매하기</button> : \r\n            <button onClick={() => {setFlag2(true); buyToknMint(price, itemId, setFlag2, addr, PRIVATE_KEY);}}>구매하기</button>}\r\n          {/* <button onClick={() => {set_w_Flag(true); buyTokn(PRIVATE_KEY);}}>Buy</button> */}\r\n        </>}\r\n        <button onClick={()=>setFlag(false)}>cancel</button>\r\n      </div>\r\n    </div>\r\n    ) : (\r\n      <></>// showFlagがfalseの場合はModalは表示しない)\r\n    )}\r\n  </>)\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\helpDesk.js",["208"],[],"import React, { useState }from 'react';\r\nimport { getFileBolb } from '../api';\r\n\r\nexport const HelpDesk= () => {\r\n  const [howMint, setHM] = useState(false);\r\n  const [howSale, setHS] = useState(false);\r\n  const [howMatc, setMT] = useState(false);\r\n  const [getMatc, setGM] = useState(false);\r\n  const [whatpri, setPK] = useState(false);\r\n\r\n  const howtomint = () => {\r\n    if(howMint) setHM(false);\r\n    else setHM(true);\r\n  }\r\n  const whatpriv = () => {\r\n    if(whatpri) setPK(false);\r\n    else setPK(true);\r\n  }\r\n  const howtosale = () => {\r\n    if(howSale) setHS(false);\r\n    else setHS(true);\r\n  }\r\n  const whatmatic = () => {\r\n    if(howMatc) setMT(false);\r\n    else setMT(true);\r\n  }\r\n  const getmatic = () => {\r\n    if(getMatc)\r\n      setGM(false);\r\n    else\r\n      setGM(true);\r\n  }\r\n  const downTemplete = () => {\r\n    getFileBolb('8ba6421cfffc9728fa365d8f203bbb19d54991f1c7ef1915e8fd709931f7e78d', 'Creator Infomation.docx').then(response => {\r\n      let url = window.URL.createObjectURL(response);\r\n      let a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'Creator Infomation.docx';\r\n      a.click();\r\n    })\r\n  }\r\n  return(\r\n    <>\r\n      <h2>help</h2>\r\n      <h4 style={{cursor: \"pointer\"}} onClick={whatpriv}>지갑주소는 뭐고 Private key는 뭔가요?</h4>\r\n      {whatpri ?\r\n      <ul>\r\n        <li>지갑주소는 블록체인 네트워크상에 존재하는 고유한 주소값입니다.</li>\r\n        <li>지갑주소를 통해 보유한 코인을 확인하고 거래정보를 추적합니다.</li>\r\n        <li>Private key는 블록체인상에서 거래를 발생시킬 시 사용하는 개인서명입니다</li>\r\n        <li>모든 거래는 수수료를 동반하며 이때 Private key로 서명을 해주어야 거래가 일어납니다.</li>\r\n        <li>때문에 Private key가 타인에게 노출되면 원치않는 거래가 일어날 수 있으니 절대로 타인에게 알려주어서는 안됩니다. </li>\r\n        <li>Private key는 MillRnft에서 따로 데이터베이스에 저장하지 않으니 잊어버리지 않도록 잘 관리합시다.</li>\r\n      </ul> : <></>}\r\n      <h4 style={{cursor: \"pointer\"}} onClick={getmatic}>코인은 어떻게 얻나요?</h4>\r\n      {getMatc ? \r\n      <ul>\r\n        <li>테스트 기간중 메틱코인은 아래의 URL 에서 하루에 0.5 코인씩 얻을 수 있습니다.</li>\r\n        <li><a href='https://mumbaifaucet.com/'>테스트 코인 얻으러 가기</a></li>\r\n        <li> Test 기간이 끝나면, '거래소'를 통해서 구입합니다. <br/>(이 방법에 대해서는 test기간 후, 안내드립니다.)</li>\r\n      </ul> : <></>\r\n      }\r\n      <h4 style={{cursor: \"pointer\"}} onClick={howtomint}>NFT는 어떻게 만들어 판매하나요?</h4>\r\n      {howMint ? \r\n      <ol>\r\n        (본 작업을 수행하기 전 0.01 이상의 MATIC 코인이 있는지 확인하십시오)\r\n        <li>좌상단의 home 버튼을 눌러 '홈 화면'으로 이동</li>\r\n        <li>'홈 화면'에서 createNFT 버튼을 눌러 아이템 생성페이지로 이동</li>\r\n        <li>아이템의 제목과 부가설명을 입력</li>\r\n        <li>choose file 버튼을 클릭하여 업로드할 파일 선택</li>\r\n        <li>extract 버튼을 클릭하여 파일 식별자 생성<br/>(이 작업은 시간이 걸립니다)</li>\r\n        <li>식별자 생성 완료 후 보여지는 upload 버튼을 클릭하여 파일 업로드</li>\r\n        <li>발행할 NFT 갯수와 PRIVATE_KEY 를 입력후 판매시작 버튼을 클릭</li>\r\n        <li>홈 화면으로 이동하여 배포중인 NFT 토글 클릭</li>\r\n        <li>판매중인 내 아이템 확인</li>\r\n      </ol> : <></>}\r\n      <h4 style={{cursor: \"pointer\"}} onClick={howtosale}> 보유한 NFT는 어떻게 판매하나요?</h4>\r\n      {howSale ? \r\n      <ol>\r\n        (본 작업을 수행하기 전 0.01 이상의 MATIC 코인이 있는지 확인하십시오)\r\n        <li>화면 상단의 Account Info 버튼을 눌러 '계정정보' 페이지로 이동</li>\r\n        <li>화면 아래의 보유한 NFT 목록에서 판매를 원하는 NFT 클릭</li>\r\n        <li>해당 NFT 정보를 확인하고 판매가격과 Private key를 입력</li>\r\n        <li>start sale 버튼을 눌러 판매 시작</li>\r\n        <li>'홈 화면'으로 이동하여 거래중인 NFT 토글 클릭 </li>\r\n        <li>판매중인 내 NFT 확인</li>\r\n      </ol> : <></>}\r\n      <p>문서형식 파일 업로드 양식<button onClick={downTemplete}>download</button></p>\r\n    </>\r\n  )\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\cooperHome.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\donatelist.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\components\\naviCpnt.js",["209"],[],"import '../App.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Nav = ({userId, chainId}) => {\r\n  const[logined, setLogined] = useState(false);\r\n  \r\n  useEffect(()=>{\r\n    if(userId !== null)\r\n      setLogined(true);\r\n    else if(sessionStorage.getItem('userid') !== null)\r\n      setLogined(true);\r\n  },[userId])\r\n\r\n  const storageClear = () => {\r\n    sessionStorage.clear();\r\n    window.location.reload();\r\n  }\r\n  return (\r\n    <nav style={{fontSize: \"large\"}}>\r\n      <Link to=\"/\" className=\"space\">home</Link>\r\n      {logined ? \r\n        <>\r\n          <a style={{cursor: \"pointer\"}} onClick={storageClear} className=\"space\">signout</a>\r\n          <Link to=\"/myinfo\" className=\"space\">Account Info</Link>\r\n        </>:<Link to=\"/signinpage\" className=\"space\">\r\n          signin\r\n        </Link>\r\n      }\r\n      <Link to=\"/cooperlate\" className=\"space\">group</Link>\r\n      <Link to=\"/donatetemp\" className='space'>endowment</Link>\r\n      <Link to='/helpdesk' className=\"space\">help</Link>\r\n      {/* {userId} : {chainId} */}\r\n    </nav>\r\n  );\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\api.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\components\\itemCpnt.js",["210"],[],"import React from 'react';\r\nimport './card.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { getToknStatus, hexToUTF8 } from '../utilityUnits/connMintService';\r\n\r\nexport const  ListItemsCpnt = ({title, desc, toknId, itemId}) => {\r\n  const sumNailUrl = null;\r\n\r\n  return (\r\n    <><div className=\"ToDoListItem\">\r\n      { toknId === undefined ? \r\n      <Link to={'/itemdetails/item/' + itemId } style={{ textDecoration: 'none' }}>\r\n      <div className=\"ToDoListItem-title\">title: {title}</div></Link>\r\n      :<Link to={'/itemdetails/token/' + toknId } style={{ textDecoration: 'none' }}>\r\n      <div className=\"ToDoListItem-title\">title: {title}</div></Link>}\r\n      \r\n        { sumNailUrl===null ? <></>\r\n          : <div><img src={sumNailUrl} /></div>\r\n        }\r\n      <div className=\"ToDoListItem-description\">description: {desc}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const  ListItemsModal = ({title, desc, toknId, setToknId, setToknStt, flag}) => {\r\n\r\n  const clickTitle = async() => {\r\n    const toknState = await getToknStatus(toknId);\r\n    setToknStt(await hexToUTF8(toknState.status));\r\n    setToknId(toknId);\r\n    flag(true);\r\n  }\r\n  return (\r\n    <><div className=\"ToDoListItem\">\r\n      <div className=\"ToDoListItem-title\" onClick={clickTitle}>title: {title}</div>\r\n      <div className=\"ToDoListItem-description\">description: {desc}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\pages\\wallet.js",["211","212","213","214","215"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { \r\n  getApproveState,\r\n  getDeposit,\r\n  withdrawSaleItemPrice,\r\n} from \"../utilityUnits/connMintService\";\r\nimport { getTradeBalance, withdrawSaleToknPrice } from \"../utilityUnits/connTradeService\";\r\nimport { Help } from \"../components/helpCpnt\";\r\nimport { SHA256 } from \"../utilityUnits/SHA256\";\r\n\r\nexport const Wallet = ({web3, ADDR}) => {\r\n  const [flagSend, setSendFlag] = useState(false);\r\n  const [earning, setEarning] = useState();\r\n  const [tradeEarning, setTEarning] = useState();\r\n  const [balance, setBalance] = useState();\r\n\r\n  const [PRIVATE_KEY, setPriv] = useState(null);\r\n  const [modalFlag2, setFlag2] = useState(false);\r\n  const [helpMode, setHelpMod] = useState();\r\n\r\n  useEffect(() => {\r\n    getUserBal();\r\n  },[]);\r\n  \r\n  const getUserBal = async() => {\r\n    let salesPrice = await getDeposit(ADDR);\r\n    let earningTokn = await getTradeBalance(ADDR);\r\n    web3.eth.getBalance(ADDR).then(balanc => {\r\n      let count = 0;\r\n      do{\r\n        balanc /= 1000000;\r\n        salesPrice /= 1000000;\r\n        earningTokn /= 1000000;\r\n        ++count;\r\n      }while(count < 3)\r\n      setBalance(balanc);\r\n      setEarning(salesPrice);\r\n      setTEarning(earningTokn);\r\n    })\r\n  }\r\n\r\n  const helpOpen = (evt, helpMode) => {\r\n    setFlag2(true);\r\n    setHelpMod(helpMode);\r\n    document.addEventListener('click', helpClose);\r\n    evt.stopPropagation();\r\n  }\r\n  const helpClose = () => {\r\n    setFlag2(false);\r\n    document.removeEventListener('click', helpClose);\r\n  }\r\n\r\n  const withdrawFromMintservice = () => {\r\n    if(validationCheck()){\r\n      const amountCoin = parseInt(earning*100000)+'0000000000000';\r\n      withdrawSaleItemPrice(ADDR, PRIVATE_KEY, amountCoin).then(result => {\r\n        if(result === true)\r\n          alert('withdraw completed');\r\n        else\r\n          alert(result);\r\n      })\r\n    }\r\n  }\r\n  const withdrawFromTradeService = () => {\r\n    if(validationCheck()){\r\n      const amountCoin = parseInt(tradeEarning*100000)+'0000000000000';\r\n      withdrawSaleToknPrice(ADDR, PRIVATE_KEY, amountCoin).then(result => {\r\n        if(result === true)\r\n          alert('withdraw completed');\r\n        else\r\n          alert(result);\r\n      })\r\n    }\r\n  }\r\n  const validationCheck = () => {\r\n    if(PRIVATE_KEY !== null)\r\n      return true\r\n    else{\r\n      alert('!Private Key required');\r\n      return false}\r\n  }\r\n  const tempbtn = () => {\r\n    const pHash = SHA256(PRIVATE_KEY);\r\n    console.log(pHash);\r\n  }\r\n  return (\r\n  <>\r\n    <h2>wallet</h2>\r\n    <h4>잔고: {balance} MATIC\r\n      <button onClick={()=>setSendFlag(true)}>send</button></h4>\r\n    <h4><a style={{cursor: \"help\"}} onClick={(evt)=>helpOpen(evt, 2)}>아이템 발행 수입: {earning} MATIC</a>\r\n      <button onClick={withdrawFromMintservice}>내 잔고로 이체</button></h4>\r\n    <h4><a style={{cursor: \"help\"}} onClick={(evt)=>helpOpen(evt, 2)}>NFT 판매 수입: {tradeEarning} MATIC</a>\r\n      <button onClick={withdrawFromTradeService}>내 잔고로 이체</button></h4>\r\n    <h5> PRIVATE_KEY :\r\n      <input onChange={(evt)=>setPriv(evt.target.value)} size='45'></input></h5>\r\n    {/* <button onClick={tempbtn}>gethash</button> */}\r\n    <CoinSendModal\r\n      showFlag = {flagSend}\r\n      setFlag = {setSendFlag}\r\n      web3 = {web3}\r\n      ADDR = {ADDR}\r\n      PRIVATE_KEY = {PRIVATE_KEY}\r\n    />\r\n    <Help\r\n      showFlag={modalFlag2}\r\n      display = {helpMode}\r\n    />\r\n  </>\r\n  );\r\n}\r\nconst CoinSendModal = ({showFlag, setFlag, web3, ADDR, PRIVATE_KEY}) => {\r\n  const [rcvAcc ,setRcvAddress] = useState('');\r\n  const [sendAmount, setAmount] = useState(0);\r\n\r\n  const sendCoin = async() => {\r\n    const value = parseInt(sendAmount*100000)+'0000000000000';\r\n    const nonce = await web3.eth.getTransactionCount(ADDR, 'latest'); // nonce starts counting from 0\r\n    const transaction = {\r\n     'to': rcvAcc, // faucet address to return eth\r\n     'value': value,\r\n     'gas': 30000,\r\n     'nonce': nonce,\r\n     // optional data field to send message or execute smart contract\r\n    };\r\n    const signedTx = await web3.eth.accounts.signTransaction(transaction, PRIVATE_KEY);\r\n\r\n    web3.eth.sendSignedTransaction(signedTx.rawTransaction, function(error, hash) {\r\n\r\n      if (!error)\r\n        console.log(\"🎉 The hash of your transaction is: \", hash, \"\\n Check Polygon Scan to view the status of your transaction!\");\r\n      else\r\n        console.log(\"❗Something went wrong while submitting your transaction:\", error);\r\n    });\r\n  }\r\n\r\n  return(<>\r\n    {showFlag ? ( // showFlagがtrueだったらModalを表示する\r\n    <div id=\"overlay\" className='overlay'>\r\n      <div id=\"modalcontents\" className=\"modalcontents\">\r\n        <h5>Transfer Amount: <input onChange={(evt) => setAmount(evt.target.value)}/></h5>\r\n        <h5>Receiver:<input onChange={(evt)=>setRcvAddress(evt.target.value)} placeholder='receiver Address 0x...' size='45'></input></h5>\r\n        <button onClick={sendCoin}>send coin</button> \r\n        <button onClick={()=>setFlag(false)}>cancel</button>\r\n      </div>\r\n    </div>\r\n    ) : (\r\n      <></>// showFlagがfalseの場合はModalは表示しない)\r\n    )}\r\n  </>)\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\setMyNft.js",["216","217","218","219","220","221","222"],[],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { getItemsIdList, getOwnedItems, getOwnedTokns, getUserId, putLogin, putToknSale } from '../api';\r\nimport { ListItemsModal, ListItemsCpnt } from './itemCpnt';\r\nimport { \r\n  getItemStatus,\r\n  getApproveState,\r\n  setApprovalAll,\r\n  openToken,\r\n  closeToken\r\n} from \"../utilityUnits/connMintService\";\r\nimport { SHA256 } from '../utilityUnits/SHA256';\r\n\r\nexport const SetMyNFT = ({chainId}) => {\r\n  \r\n  const [toknId, settoknId] = useState([]);\r\n  const [toknStatus, setToknStt] = useState();\r\n  const [toknMatch, setToknMatch] = useState([]);\r\n  const [itemList, setItemList] = useState([]);\r\n  const [modalFlag, setFlag] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    itemListViewer();\r\n    toknListViewer();\r\n  },[])\r\n\r\n  const itemListViewer = async() => {\r\n    const userId = await getUserId(chainId);\r\n    const items = await getOwnedItems(userId);\r\n    setItemList(items);\r\n  }\r\n  const toknListViewer = async() => {\r\n    let itemInfoArr = [{title: null, desc: null}];\r\n\r\n    const userId = await getUserId(chainId);\r\n    const item = await getOwnedTokns(userId);\r\n    console.log(item);\r\n    let itemLen = 0;\r\n    while(itemLen < item[0].length){\r\n      itemInfoArr[itemLen] = {\r\n        title: item[0][itemLen].title, \r\n        desc: item[0][itemLen].description, \r\n        toknId: item[1][itemLen].toknid\r\n      };  \r\n      ++itemLen;\r\n    }\r\n    console.log(itemInfoArr);\r\n    if(item[0].length > 0)\r\n      setToknMatch(itemInfoArr);\r\n  }\r\n\r\n  const getToknStatus = async(_toknId) => {\r\n    const toknStatus = await getItemStatus(_toknId);\r\n    let count = 0;\r\n    //console.log(typeof toknStatus[0]);\r\n    do{\r\n      toknStatus[0] /= 100;\r\n      ++count;\r\n    }while(count < 9)\r\n    \r\n    if(toknStatus[0] != 0)\r\n      return `${toknStatus[0]} MATIC`;\r\n    else\r\n      return 'not for sale';\r\n  }\r\n  return(\r\n    <>\r\n      <h2>업로드한 아이템 목록.</h2>\r\n      {itemList.length === 0 ? \r\n        <p>There are no items uploaded yet</p>:<></>}\r\n      {itemList.map((searchItems, index) => (\r\n        <ListItemsCpnt\r\n          key={index}\r\n          title={searchItems.title}\r\n          desc={searchItems.description}\r\n          itemId = {searchItems.id}\r\n        />\r\n      ))}\r\n      <h2>보유한 NFT 목록.</h2>\r\n      <a>알림-현재 보유한 NFT 목록의 표시가 부정확한 에러가 발생하여 수정중입니다.</a>\r\n      {toknMatch.length === 0 ?\r\n        <p>No NFT in your account</p>:<></>}\r\n      {toknMatch.map((searchItems, index) => (\r\n        <ListItemsModal\r\n          key={index}\r\n          title={searchItems.title}\r\n          desc={searchItems.desc}\r\n          toknId={searchItems.toknId}\r\n          setToknId={(id) => settoknId(id)}\r\n          setToknStt={(stt) => setToknStt(stt)}\r\n          flag={(tru)=>setFlag(tru)}\r\n        />\r\n      ))}\r\n      <SaleModal\r\n        showFlag={modalFlag}\r\n        setFlagFunc={setFlag}\r\n        selectedId={toknId}\r\n        toknState = {toknStatus}\r\n        ADDR = {chainId}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst SaleModal = ({showFlag, setFlagFunc, selectedId, toknState, ADDR}) => {\r\n  const [PRIVATE_KEY, setPriv] = useState();\r\n  const [toknPrice, setPrice] = useState();\r\n  \r\n  const startSale = async() => {\r\n    const approveState = await getApproveState(ADDR);\r\n    if(approveState){\r\n      console.log('coz');\r\n      openTokn();\r\n    }\r\n    else{\r\n      const approve_result = await setApproval();\r\n      if(approve_result === true){\r\n        console.log('kpk');\r\n        openTokn();}\r\n      else\r\n        alert(`No permissions granted.\\n${approve_result}`);\r\n    }\r\n  }\r\n  const openTokn = async() => {\r\n    if(toknPrice !== undefined){\r\n      const record = {\r\n        playerId: sessionStorage.getItem('userid'),\r\n        playerPass: SHA256(PRIVATE_KEY)\r\n      }\r\n      if(await putLogin(record)){\r\n        const tokenPrice = parseInt(toknPrice*100000)+'0000000000000';\r\n        openToken(ADDR, PRIVATE_KEY, tokenPrice, selectedId).then(result => {\r\n          if(result === true){\r\n            const recorde = {\r\n              toknId: selectedId,\r\n              price: toknPrice,\r\n              state: true\r\n            }\r\n            putToknSale(recorde).then(resultIdx => {\r\n              if(resultIdx){\r\n                alert(`NFT (ID: ${selectedId}) sale started`);\r\n                setFlagFunc(false);\r\n              }\r\n            })\r\n          }\r\n          else{\r\n            console.log(result);\r\n            alert('not enough gas');\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        alert('check again your Private key');\r\n      }\r\n    }\r\n    else\r\n      alert('please set a selling price');\r\n  }\r\n  const closeTokn = async() => {\r\n    if(PRIVATE_KEY !== undefined){\r\n      closeToken(ADDR, PRIVATE_KEY, selectedId).then(result => {\r\n        if(result === true){\r\n          const record = {\r\n            toknId: selectedId,\r\n            price: 0,\r\n            state: false\r\n          }\r\n          putToknSale(record).then(resultIdx => {\r\n            if(resultIdx){\r\n              alert(`NFT (ID: ${selectedId}) closed`);\r\n              setFlagFunc(false);\r\n            }\r\n          })\r\n        }\r\n        else{\r\n          //console.log(result);\r\n          alert(result);}\r\n      })\r\n    }\r\n    else\r\n      alert('!PRIVATE_KEY required');\r\n  }\r\n  const setApproval = () => {\r\n    return new Promise(resolve => {\r\n      if(window.confirm('Grant NFT transfer permission to below SmartContract\\n0x1434F691eCefeA03ce6532a4cA99FD7E08764e2d')){\r\n        setApprovalAll(ADDR, PRIVATE_KEY, true).then(result => {\r\n          console.log(result);\r\n          resolve(result);\r\n        })\r\n      }\r\n      else{\r\n        resolve(false);\r\n      }\r\n    })\r\n  }\r\n  const setApprovalFalse = async() => {\r\n    setApprovalAll(ADDR, PRIVATE_KEY, false).then(result => {\r\n      console.log(result);\r\n    })\r\n  }\r\n  const temp = async() => {\r\n    const approveState = await getApproveState(ADDR);\r\n    console.log(approveState);\r\n    console.log(toknState);\r\n  }\r\n  return(<>\r\n    {showFlag ? ( // showFlagがtrueだったらModalを表示する\r\n    <div id=\"overlay\" className='overlay'>\r\n      <div id=\"modalcontents\" className=\"modalcontents\">\r\n        <button onClick={()=>setFlagFunc(false)}>close</button>\r\n        <h4>NFT ID: {selectedId}</h4>\r\n        <h5> PRIVATE_KEY :\r\n          <input onChange={(evt)=>setPriv(evt.target.value)} size='45'></input></h5>\r\n        <h5> price : \r\n          <input placeholder='price(MATIC)' onChange={(evt)=>setPrice(evt.target.value)} size='10'/></h5>\r\n        <Link to={`/itemdetails/token/${selectedId}`} style={{ textDecoration: 'none' }}>\r\n          click to check detail this NFT\r\n        </Link><br/><br/>\r\n        {toknState==='Open' ? \r\n          <button onClick={closeTokn}>close sale</button>:\r\n          <button onClick={startSale}>sale start</button>\r\n        }\r\n        {/* <button onClick={setApprovalFalse}>setfalse</button>\r\n        <button onClick={temp}>temp</button> */}\r\n      </div>\r\n    </div>\r\n    ) : (\r\n      <></>// showFlagがfalseの場合はModalは表示しない)\r\n    )}\r\n  </>)\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\createChainId.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\components\\uploadIDX\\rightBranch.js",["223","224","225","226","227"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nexport const RightBranch = ({pWire}) => {\r\n  const [right, setRight] = useState(['RR','RDW','RE','RPP']);//c\r\n  const [disable, setDisable] = useState(false);\r\n  const [exclusive, setExclusive] = useState('Public');//a\r\n  const [comm, setComm] = useState('CO');//b\r\n  const [viewRight, setView] = useState(false);\r\n  const [tradeable, setTra] = useState(true);//d\r\n  const [plusUri, setUri] = useState('');\r\n\r\n  useEffect(()=>{\r\n    let toknLisence;\r\n    if(tradeable) toknLisence = `Tradeable/${exclusive}/${comm}/${right.join(\"-\")}/`;\r\n    else toknLisence = `nonTradea/${exclusive}/${comm}/${right.join(\"-\")}/`;\r\n    setUri(toknLisence);\r\n    pWire(toknLisence);\r\n  },[exclusive, comm, right, tradeable])\r\n\r\n  const checkTradeable = (evt) => {\r\n    if(evt.target.value !== \"PO\") setTra(false);\r\n    else setTra(true);\r\n  }\r\n  const checkExclusive = (evt) => {\r\n    if(evt.target.value !== \"GE\") setExclusive('Exclusive');\r\n    else setExclusive('Public');\r\n  }\r\n  const checkCommercial = (evt) => {\r\n    // setRight([]);\r\n    if(evt.target.value === \"CO\"){\r\n      setComm(\"CO\");\r\n      setView(true);\r\n    }\r\n    else if(evt.target.value === \"NC\"){\r\n      setComm(\"NC\");\r\n      setView(true);\r\n    }\r\n    else{\r\n      setComm(\"NC\");\r\n      setView(false);\r\n    }\r\n  }\r\n//   const checkRight = (evt) => {\r\n//     if(evt.target.value === 'RA'){\r\n//       if(disable) setDisable(false);\r\n//       else setDisable(true);\r\n//     }\r\n//     else{\r\n//       let rightStr = '';\r\n//     }\r\n//   }\r\n  const checkRight = (evt) => {\r\n    if (right.includes(evt.target.value)) {\r\n      setRight(\r\n        right.filter((checkedValue) => checkedValue !== evt.target.value)\r\n      );\r\n    } else {\r\n      setRight([...right, evt.target.value]);\r\n    }\r\n  };\r\n  const temp = () => {\r\n    console.log(plusUri);\r\n  }\r\n  return(\r\n    <>\r\n      {/* <button onClick={temp}>console</button> */}\r\n      <br/>저작권 이용 가능 여부 지정<br/>\r\n      <label><input type=\"radio\" value=\"CO\" onChange={checkCommercial} defaultChecked={true} name='comm'/>\r\n        영리목적 이용 허가 </label>\r\n      <label><input type=\"radio\" value=\"NC\" onChange={checkCommercial} name='comm'/>\r\n        비영리적 이용 허가 </label><br/>\r\n      {viewRight ? \r\n      <>\r\n        <br/>허가할 이용 범위 지정<br/>\r\n        {/* <label><input type=\"checkbox\" value=\"RA\" checked={right.includes(\"RA\")} onChange={checkRight} name='right'/>\r\n        모든 권리</label> */}\r\n        <label><input type=\"checkbox\" value=\"RDT\" defaultChecked={true}onChange={checkRight} disabled={disable}/>\r\n        복제하여 배포/전송 가능</label>\r\n        <label><input type=\"checkbox\" value=\"DW\" defaultChecked={true}onChange={checkRight} disabled={disable}/>\r\n        2차적 저작물 작성 가능</label>\r\n        <label><input type=\"checkbox\" value=\"EP\" defaultChecked={true}onChange={checkRight} disabled={disable}/>\r\n        공공전시/공연 가능</label>\r\n        <label><input type=\"checkbox\" value=\"RWA\" defaultChecked={true}onChange={checkRight} disabled={disable}/>\r\n        복제하여 타 문서에 기재/첨부 가능</label><br/>\r\n      </> : <></>}\r\n      {/* <br/>타인간 거래 가능여부 선택<br/>\r\n      <label><input type=\"radio\" value=\"PO\" onChange={checkTradeable} name='tradeable' defaultChecked/>\r\n        가능함 </label>\r\n      <label><input type=\"radio\" value=\"DI\" onChange={checkTradeable} name='tradeable'/>\r\n        불가함 </label><br/> */}\r\n    </>\r\n  )\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\uploadIDX\\setItem.js",["228","229","230","231","232","233","234","235"],[],"import React from 'react';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { postUploadItemIdx, getUserId, putLogin } from '../../api';\r\nimport { eventCreateItem, setNFTidx } from '../../utilityUnits/connMintService';\r\nimport { SHA256 } from '../../utilityUnits/SHA256';\r\nimport { WaitModal } from '../waitModal';\r\nimport { Help } from '../helpCpnt';\r\n\r\nexport const SetItemCpnt = ({title, desc, toknUri, rightInfo}) => {\r\n  const SEND_ADDR = sessionStorage.getItem('chainid');\r\n  const navigate = useNavigate();\r\n  const [NumOfTokn, setNumOfTokn] = useState();\r\n  const [price, setValue] = useState();\r\n  const [PRIVATE_KEY, setPrivKey] = useState(null);\r\n  const [modalFlag, setFlag] = useState(false);\r\n  const [Royalty, setLowest] = useState(0);\r\n  const [donate, setDonate] = useState();\r\n  const [active, setActive] = useState(false);\r\n  const [helpFlag, setHelp] = useState(false);\r\n  const [helpMode, setHmode] = useState();\r\n\r\n  const exclusiveParsing = () => {\r\n    let result = rightInfo.split('/');\r\n    //console.log(result[1]);\r\n    if(result[1] === 'Exclusive'){\r\n      setActive(true);\r\n      setNumOfTokn(1);\r\n    }\r\n    else\r\n      setActive(false);\r\n  }\r\n\r\n  const setItem = async() => {\r\n    const royality = parseInt(Royalty*100000)+'0000000000000';\r\n    const value = parseInt(price*100000)+'0000000000000';\r\n    const tokenUri = rightInfo+toknUri;\r\n    \r\n    if(title !== '' && desc !== '' && price !== undefined && NumOfTokn !== undefined){\r\n      const record = {\r\n        playerId: sessionStorage.getItem('userid'),\r\n        playerPass: SHA256(PRIVATE_KEY)\r\n      }\r\n      if(await putLogin(record)){\r\n        setNFTidx(SEND_ADDR, PRIVATE_KEY, tokenUri, value, royality, NumOfTokn).then(result => {\r\n          if(result === true){\r\n            console.log(10000);\r\n            uploadItemIdx();\r\n          }\r\n          else{\r\n            alert('폴리곤 네트워크에 정보를 쓰기위한 수수료(gas)가 부족합니다\\n계좌의 폴리곤 코인을 충전 후 다시 시도하여 주십시오.');\r\n            setFlag(false);\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        alert('Private Key 를 다시 확인 후 시도하십시오');\r\n        setFlag(false);}\r\n    }\r\n    else{\r\n      setFlag(false);\r\n      alert('아이템 정보, 발행 정보를 정확히 입력한 후 다시 시도하십시오');\r\n    }\r\n  }\r\n  const uploadItemIdx = async(_itemId) => {\r\n    const userId = await getUserId(SEND_ADDR);\r\n    const record = {\r\n      //itemId: parseInt(_itemId),\r\n      title: title,\r\n      desc: desc,\r\n      hash: toknUri,\r\n      userId: userId,\r\n      fromAddr: SEND_ADDR,\r\n      tempdonate: donate,\r\n    }\r\n    postUploadItemIdx(record).then(response => {\r\n      console.log('checka')\r\n      if(response){\r\n        setFlag(false);\r\n        alert('🎉Successfully Created');\r\n        navigate(\"/\");\r\n      }\r\n    })\r\n  }\r\n  // const itemCreateEvtListener = async() => {\r\n  //   eventCreateItem(SEND_ADDR).then(listen => {\r\n  //     if(listen){\r\n  //       uploadItemIdx(listen.itemId);\r\n  //     }\r\n  //   }).catch(err => {\r\n  //     console.log(err);\r\n  //   })\r\n  // }\r\n  const openHelp = (evt, _displayMode) => {\r\n    setHelp(true);\r\n    setHmode(_displayMode);\r\n    document.addEventListener('click',closeModal);\r\n    evt.stopPropagation();\r\n  }\r\n  const closeModal = () => {\r\n    setHelp(false);\r\n    document.removeEventListener('click',closeModal);\r\n  }\r\n  return(\r\n    <>\r\n    {/* <button onClick={putDBtoknIDX}>temp</button> */}\r\n    <h3>아이템 판매정보 입력</h3>\r\n    <p>하기란은 스마트컨트랙트에 의해 보장되며 이후 수정이 불가합니다.</p>d\r\n    <p>발행수량: <input type=\"number\" placeholder='quantity of token' onChange={(evt)=>setNumOfTokn(evt.target.value)} disabled={active}/><a onClick={(evt) => openHelp(evt, 4)} style={{cursor: \"help\"}}>❓</a></p>\r\n    <p>발행가격: <input type=\"number\" step=\"0.01\" placeholder='price of token' onChange={(evt)=>setValue(evt.target.value)} /><a onClick={(evt) => openHelp(evt, 5)} style={{cursor: \"help\"}}>❓</a></p>\r\n    <p>기부금: <input type=\"number\" placeholder='MATIC' onChange={(evt)=>setLowest(evt.target.value)} defaultValue='0'/><a onClick={(evt) => openHelp(evt, 1)} style={{cursor: \"help\"}}>❓</a></p>\r\n    <p>기부처: <input placeholder='Organization' onChange={(evt)=>setDonate(evt.target.value)} /><a onClick={(evt) => openHelp(evt, 1)} style={{cursor: \"help\"}}>❓</a></p>\r\n    <p>private Key: <input placeholder='input your private key to mint nft' onChange={(evt)=>setPrivKey(evt.target.value)} size='45'/></p>\r\n    <button onClick={() => {setFlag(true); setItem();}}>판매시작</button>\r\n    <WaitModal showFlag={modalFlag} />\r\n    <Help\r\n      showFlag={helpFlag}\r\n      display={helpMode}\r\n    />\r\n    </>\r\n  )\r\n}\r\n// const stopTimer = () => {\r\n//   clearInterval(intervalId);\r\n//   intervalId=null;\r\n//   count = 0;\r\n// }","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\uploadIDX\\setFileHash.js",["236"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { onFileInputChange } from \"../../utilityUnits/fileToBuffer\";\r\nimport { fileToHash, setFinalHash } from '../../utilityUnits/fileToHash'\r\nimport { FilesList } from \"../../components/dispFileList\";\r\nimport { UploadFiles } from \"./uploadFiles\";\r\n\r\nexport const SetFileHash = ({pWire}) => {\r\n\r\n  let te = -1;\r\n  let hashArr = [];\r\n  const [fileBuffer, setFileBuffer] = useState([]);\r\n  const [fileInfo, setFileInfo] = useState([]);\r\n  const [fileHashs, setFileHashs] = useState([]);\r\n  const [endHash, setEndHash] = useState();\r\n  const [passA, setCheckA] = useState(false);\r\n\r\n  useEffect(() => {\r\n    pWire(endHash);\r\n  },[endHash])\r\n  \r\n  const extractHash = async() => {\r\n    setCheckA(false);\r\n    sortFileSize().then(result => {\r\n      if(result){\r\n        getFileHashArr();\r\n      }\r\n    })\r\n  }\r\n  const getFileHashArr = () => {\r\n    hashArr = fileToHash(fileBuffer, setFileHashs);\r\n    const endHash = getFinalHash(hashArr);\r\n    UploadFiles(fileBuffer, fileInfo, endHash);\r\n    setEndHash(endHash);\r\n  }\r\n\r\n  const sortFileSize = async() => {\r\n    let asc = function (a, b) {\r\n      return (a.length < b.length) ? -1 : 1;  //オブジェクトの昇順ソート\r\n    }\r\n    let ascIndex = function(a, b) {\r\n      return (a.size < b.size) ? -1 : 1;\r\n    }\r\n    if(fileBuffer.length !== 0){\r\n      fileBuffer.sort(asc);\r\n      fileInfo.sort(ascIndex);\r\n      return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }  \r\n  }\r\n  \r\n  const getFinalHash = (_hashArr) => {\r\n    let fileNum = 0;\r\n    let hashsStr = '';\r\n    //let fileTypeArr = [];\r\n    do {\r\n      hashsStr += _hashArr[fileNum];\r\n      //fileTypeArr.push((fileInfo[fileNum].type).split('/').pop());\r\n      ++fileNum;\r\n    } while (_hashArr.length > fileNum);\r\n    return setFinalHash(hashsStr);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h3>업로드할 파일 선택</h3>\r\n      <p>문서, 이미지, 오디오, 동영상 파일 가능</p>\r\n      <label className=\"inputfile\"><input type='file' \r\n        onChange={(evt)=>\r\n          onFileInputChange(evt, setFileBuffer, setFileInfo, setCheckA)} \r\n        multiple/></label><br/>\r\n      <br/>\r\n      {fileInfo.map(uploadItems => (\r\n        <FilesList\r\n          key={uploadItems.name}\r\n          row={++te}\r\n          title = {uploadItems.name}\r\n          type = {uploadItems.type}\r\n          size = {uploadItems.size}\r\n          hash = {fileHashs[te]}\r\n        />\r\n      ))}\r\n      {passA ? \r\n      <>\r\n        <button onClick={extractHash}>파일 업로드</button>-버튼을 누른 후 잠시 기다려주세요.\r\n      </>:<>\r\n      \r\n      </>}\r\n    </div>\r\n  )\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\waitModal.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\components\\helpCpnt.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\utilityUnits\\SHA256.js",["237","238","239","240","241"],[],"//import filestream from \"fs\";\r\n\r\nexport const getFileHash = (_fileBuffer) => {\r\n    return SHA256(_fileBuffer);\r\n}\r\n\r\nexport const SHA256 = (s) => {\r\n    var chrsz   = 8;\r\n    var hexcase = 0;\r\n  \r\n    function safe_add (x, y) {\r\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n        return (msw << 16) | (lsw & 0xFFFF);\r\n    }\r\n  \r\n    function S (X, n) { return ( X >>> n ) | (X << (32 - n)); }\r\n    function R (X, n) { return ( X >>> n ); }\r\n    function Ch(x, y, z) { return ((x & y) ^ ((~x) & z)); }\r\n    function Maj(x, y, z) { return ((x & y) ^ (x & z) ^ (y & z)); }\r\n    function Sigma0256(x) { return (S(x, 2) ^ S(x, 13) ^ S(x, 22)); }\r\n    function Sigma1256(x) { return (S(x, 6) ^ S(x, 11) ^ S(x, 25)); }\r\n    function Gamma0256(x) { return (S(x, 7) ^ S(x, 18) ^ R(x, 3)); }\r\n    function Gamma1256(x) { return (S(x, 17) ^ S(x, 19) ^ R(x, 10)); }\r\n  \r\n    function core_sha256 (m, l) {\r\n         \r\n        var K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1,\r\n            0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\r\n            0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786,\r\n            0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\r\n            0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147,\r\n            0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\r\n            0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B,\r\n            0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\r\n            0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A,\r\n            0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\r\n            0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);\r\n\r\n        var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);\r\n\r\n        var W = new Array(64);\r\n        var a, b, c, d, e, f, g, h, i, j;\r\n        var T1, T2;\r\n  \r\n        m[l >> 5] |= 0x80 << (24 - l % 32);\r\n        m[((l + 64 >> 9) << 4) + 15] = l;\r\n  \r\n        for ( var i = 0; i<m.length; i+=16 ) {\r\n            a = HASH[0];\r\n            b = HASH[1];\r\n            c = HASH[2];\r\n            d = HASH[3];\r\n            e = HASH[4];\r\n            f = HASH[5];\r\n            g = HASH[6];\r\n            h = HASH[7];\r\n  \r\n            for ( var j = 0; j<64; j++) {\r\n                if (j < 16) W[j] = m[j + i];\r\n                else W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\r\n  \r\n                T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\r\n                T2 = safe_add(Sigma0256(a), Maj(a, b, c));\r\n  \r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = safe_add(d, T1);\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = safe_add(T1, T2);\r\n            }\r\n  \r\n            HASH[0] = safe_add(a, HASH[0]);\r\n            HASH[1] = safe_add(b, HASH[1]);\r\n            HASH[2] = safe_add(c, HASH[2]);\r\n            HASH[3] = safe_add(d, HASH[3]);\r\n            HASH[4] = safe_add(e, HASH[4]);\r\n            HASH[5] = safe_add(f, HASH[5]);\r\n            HASH[6] = safe_add(g, HASH[6]);\r\n            HASH[7] = safe_add(h, HASH[7]);\r\n        }\r\n        return HASH;\r\n    }\r\n  \r\n    function str2binb (str) {\r\n        var bin = Array();\r\n        var mask = (1 << chrsz) - 1;\r\n        for(var i = 0; i < str.length * chrsz; i += chrsz) {\r\n            bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i%32);\r\n        }\r\n        return bin;\r\n    }\r\n  \r\n    function Utf8Encode(string) {\r\n        string = string.replace(/\\r\\n/g,\"\\n\");\r\n        var utftext = \"\";\r\n  \r\n        for (var n = 0; n < string.length; n++) {\r\n  \r\n            var c = string.charCodeAt(n);\r\n  \r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            }\r\n            else if((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n            else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n  \r\n        }\r\n  \r\n        return utftext;\r\n    }\r\n  \r\n    function binb2hex (binarray) {\r\n        var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n        var str = \"\";\r\n        for(var i = 0; i < binarray.length * 4; i++) {\r\n            str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\r\n            hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\r\n        }\r\n        return str;\r\n    }\r\n  \r\n    s = Utf8Encode(s);\r\n    return binb2hex(core_sha256(str2binb(s), s.length * chrsz));\r\n  \r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\detailPages\\setItemIDX.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\components\\detailPages\\fileListViewer.js",["242","243","244"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { getFileBolb } from \"../../api\";\r\n\r\nexport const FileListViewer = ({fileName, toknUri, permission}) => {\r\n  \r\n  const FilePreview = () => {\r\n    const file = fileName.split('.');\r\n    if(file[1] === 'png' ||\r\n      file[1] === 'jpg' ||\r\n      file[1] === 'jpeg' ||\r\n      file[1] === 'JPG' || \r\n      file[1] === 'JPEG' || \r\n      file[1] === 'bmp'){\r\n      const imgStock = `https://mintservice.asuscomm.com:8139/getimagestock/${toknUri}/${fileName}`;\r\n      return(<>\r\n        <img style={{width: '700px'}} src={imgStock}/>\r\n      </>)\r\n    }\r\n    else if(file[1] === 'flac' || \r\n      file[1] === 'wav' ||\r\n      file[1] === 'mp3' || \r\n      file[1] === 'MP3'){\r\n      const auxStock = `https://mintservice.asuscomm.com:8139/getaudiostock/${toknUri}/${fileName}`;\r\n      return(<>\r\n        <audio controls src={auxStock} />\r\n      </>)\r\n    }\r\n  }\r\n    const downloadFileData = () => {\r\n      if(permission){\r\n        getFileBolb(toknUri, fileName).then(response => {\r\n          let url = window.URL.createObjectURL(response);\r\n          let a = document.createElement('a');\r\n          a.href = url;\r\n          a.download = fileName;\r\n          a.click();\r\n        })\r\n      }\r\n      else{\r\n        alert('Attempt to download without permission');\r\n      }\r\n    }\r\n    return(\r\n    <>\r\n      <h5>{fileName}<br/>\r\n        <FilePreview />\r\n        <button onClick={downloadFileData}>download</button>\r\n      </h5>\r\n    </>\r\n    )\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\detailPages\\toknMint.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\components\\detailPages\\toknTransfer.js",["245","246"],[],"import { buyedToknChange, getUserId, putLogin } from '../../api';\r\nimport { buyNFT } from '../../utilityUnits/connTradeService.js'\r\nimport { SHA256 } from '../../utilityUnits/SHA256';\r\n\r\nlet intervalId = null;\r\nlet count = 0;\r\n\r\nexport const buyToknTransfer = async(_price, _itemId, set_w_Flag, FROM_ADDR, PRIVATE_KEY) => {\r\n  const record = {\r\n    playerId: sessionStorage.getItem('userid'),\r\n    playerPass: SHA256(PRIVATE_KEY)\r\n  }\r\n  if(await putLogin(record)){\r\n    const value = parseInt(_price*100000) + '0000000000000';\r\n    buyNFT(FROM_ADDR, PRIVATE_KEY, _itemId, value).then(result => {\r\n      if(result === true)\r\n        updateToknIdx(FROM_ADDR);\r\n      else{\r\n        alert('거래에 필요한 폴리곤 코인이 부족합니다 \\n 코인을 충전한 후 다시 시도하여 주십시오');\r\n        set_w_Flag(false)\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    alert(`⚠️ Private Key 를 확인 후 다시 시도하십시오`);\r\n    set_w_Flag(false);\r\n  }\r\n}\r\n\r\nconst updateToknIdx = async(_buyerAddr) => {\r\n\tconst userId = await getUserId(_buyerAddr);\r\n\tconst record = {\r\n\t\tuserId: userId,\r\n    fromAddr: _buyerAddr\r\n\t}\r\n\tbuyedToknChange(record).then(result => {\r\n\t\tif(result){\r\n      if(!alert('🎉Successfully purchased'))\r\n        window.location.reload();\r\n\t\t}\r\n\t})\r\n}\r\nconst stopTimer = () => {\r\n  clearInterval(intervalId);\r\n  intervalId=null;\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\components\\detailPages\\setBlockIDX.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\utilityUnits\\connMintService.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\utilityUnits\\connTradeService.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\utilityUnits\\fileToBuffer.js",["247"],[],"\r\nexport const onFileInputChange = (e, setBuffer, setFileInfo, setCheckA) => {\r\n  const fileByteArray = [];\r\n  const fileInfo = [];\r\n  let fileNum = 0;\r\n  \r\n  while(e.target.files.length > fileNum){\r\n    const reader = new FileReader();\r\n    const fileBufferArray = [];\r\n        \r\n    fileInfo.push({\r\n      name: e.target.files[fileNum].name,\r\n      type: e.target.files[fileNum].type,\r\n      size: e.target.files[fileNum].size\r\n    })\r\n    //console.log(e.target.files[fileNum]);\r\n    reader.readAsArrayBuffer(e.target.files[fileNum]);\r\n    reader.onloadend = (_evt) => {\r\n      if (_evt.target.readyState === FileReader.DONE) {\r\n        const arrayBuffer = _evt.target.result,\r\n        array = new Uint8Array(arrayBuffer);\r\n        for (const a of array) {\r\n          fileBufferArray.push(a);\r\n        }\r\n        fileByteArray.push(fileBufferArray);\r\n        if(fileByteArray.length === fileNum){\r\n          setCheckA(true);\r\n        }\r\n      }\r\n    }\r\n    ++fileNum;\r\n  }\r\n  setBuffer(fileByteArray);\r\n  setFileInfo(fileInfo);\r\n}","D:\\workspace\\BBwork_block\\millRfront\\src\\utilityUnits\\fileToHash.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\components\\dispFileList.js",[],[],"D:\\workspace\\BBwork_block\\millRfront\\src\\components\\uploadIDX\\uploadFiles.js",["248","249","250"],[],"import { postUploadArtwork, getMerge } from \"../../api\";\r\n\r\nexport const UploadFiles = ( fileBufferList, fileInfoList, finalHash ) => {\r\n  let uploadState = false;\r\n  \r\n    const size = 1024 * 50; //50KB 50KB Section size\r\n    fileBufferList.map(async(file, index) => {\r\n      let fileChunks = [];\r\n      let fileIndex = 0;\r\n      for(let cur = 0; cur < file.length; cur += size) {\r\n        fileChunks.push({\r\n          section: fileIndex++,\r\n          chunk: file.slice(cur, cur + size),\r\n        });\r\n      }\r\n      uploadList(fileInfoList, fileChunks, index++);\r\n    })\r\n    setTimeout(()=>{\r\n      mergeChunks(fileInfoList, finalHash);\r\n\t  },2000);\r\n}\r\nconst uploadList = (fileInfoList, fileChunks, _index) => {\r\n  fileChunks.map((item, index) => {\r\n    const record = {\r\n      fileName: fileInfoList[_index].name,\r\n      section: item.section,\r\n      chunk: item.chunk,\r\n    }\r\n    console.log(record);\r\n    postUploadArtwork(record).then(result => {\r\n      console.log(result);\r\n    })\r\n  })\r\n}\r\nconst mergeChunks = async(fileInfoList, finalHash) => {\r\n  fileInfoList.map((item, idx) => {\r\n    getMerge(item.name, finalHash).then(response => {\r\n      console.log(response);\r\n    })\r\n  })\r\n}",{"ruleId":"251","severity":1,"message":"252","line":1,"column":27,"nodeType":"253","messageId":"254","endLine":1,"endColumn":36},{"ruleId":"251","severity":1,"message":"255","line":19,"column":10,"nodeType":"253","messageId":"254","endLine":19,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":17,"column":5,"nodeType":"258","endLine":17,"endColumn":7,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":70,"column":7,"nodeType":"262","endLine":70,"endColumn":71},{"ruleId":"260","severity":1,"message":"261","line":72,"column":7,"nodeType":"262","endLine":72,"endColumn":71},{"ruleId":"263","severity":1,"message":"264","line":13,"column":16,"nodeType":"265","messageId":"266","endLine":13,"endColumn":18},{"ruleId":"251","severity":1,"message":"267","line":11,"column":10,"nodeType":"253","messageId":"254","endLine":11,"endColumn":26},{"ruleId":"251","severity":1,"message":"268","line":11,"column":28,"nodeType":"253","messageId":"254","endLine":11,"endColumn":38},{"ruleId":"251","severity":1,"message":"269","line":12,"column":10,"nodeType":"253","messageId":"254","endLine":12,"endColumn":18},{"ruleId":"251","severity":1,"message":"270","line":12,"column":20,"nodeType":"253","messageId":"254","endLine":12,"endColumn":27},{"ruleId":"251","severity":1,"message":"271","line":13,"column":10,"nodeType":"253","messageId":"254","endLine":13,"endColumn":17},{"ruleId":"251","severity":1,"message":"272","line":13,"column":19,"nodeType":"253","messageId":"254","endLine":13,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":49,"column":19,"nodeType":"262","endLine":49,"endColumn":54},{"ruleId":"251","severity":1,"message":"273","line":57,"column":10,"nodeType":"253","messageId":"254","endLine":57,"endColumn":22},{"ruleId":"251","severity":1,"message":"268","line":57,"column":24,"nodeType":"253","messageId":"254","endLine":57,"endColumn":34},{"ruleId":"256","severity":1,"message":"274","line":25,"column":5,"nodeType":"258","endLine":25,"endColumn":7,"suggestions":"275"},{"ruleId":"251","severity":1,"message":"276","line":23,"column":9,"nodeType":"253","messageId":"254","endLine":23,"endColumn":18},{"ruleId":"260","severity":1,"message":"261","line":24,"column":11,"nodeType":"262","endLine":24,"endColumn":83},{"ruleId":"277","severity":1,"message":"278","line":18,"column":18,"nodeType":"262","endLine":18,"endColumn":42},{"ruleId":"251","severity":1,"message":"279","line":4,"column":3,"nodeType":"253","messageId":"254","endLine":4,"endColumn":18},{"ruleId":"256","severity":1,"message":"280","line":24,"column":5,"nodeType":"258","endLine":24,"endColumn":7,"suggestions":"281"},{"ruleId":"251","severity":1,"message":"282","line":83,"column":9,"nodeType":"253","messageId":"254","endLine":83,"endColumn":16},{"ruleId":"260","severity":1,"message":"261","line":92,"column":9,"nodeType":"262","endLine":92,"endColumn":71},{"ruleId":"260","severity":1,"message":"261","line":94,"column":9,"nodeType":"262","endLine":94,"endColumn":71},{"ruleId":"251","severity":1,"message":"283","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":24},{"ruleId":"256","severity":1,"message":"284","line":26,"column":5,"nodeType":"258","endLine":26,"endColumn":7,"suggestions":"285"},{"ruleId":"251","severity":1,"message":"286","line":53,"column":9,"nodeType":"253","messageId":"254","endLine":53,"endColumn":22},{"ruleId":"263","severity":1,"message":"287","line":62,"column":22,"nodeType":"265","messageId":"266","endLine":62,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":81,"column":7,"nodeType":"262","endLine":81,"endColumn":10},{"ruleId":"251","severity":1,"message":"288","line":197,"column":9,"nodeType":"253","messageId":"254","endLine":197,"endColumn":25},{"ruleId":"251","severity":1,"message":"289","line":202,"column":9,"nodeType":"253","messageId":"254","endLine":202,"endColumn":13},{"ruleId":"251","severity":1,"message":"290","line":5,"column":19,"nodeType":"253","messageId":"254","endLine":5,"endColumn":29},{"ruleId":"256","severity":1,"message":"291","line":18,"column":5,"nodeType":"258","endLine":18,"endColumn":40,"suggestions":"292"},{"ruleId":"251","severity":1,"message":"293","line":20,"column":9,"nodeType":"253","messageId":"254","endLine":20,"endColumn":23},{"ruleId":"251","severity":1,"message":"294","line":24,"column":9,"nodeType":"253","messageId":"254","endLine":24,"endColumn":23},{"ruleId":"251","severity":1,"message":"289","line":61,"column":9,"nodeType":"253","messageId":"254","endLine":61,"endColumn":13},{"ruleId":"251","severity":1,"message":"252","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":19},{"ruleId":"251","severity":1,"message":"295","line":2,"column":31,"nodeType":"253","messageId":"254","endLine":2,"endColumn":37},{"ruleId":"251","severity":1,"message":"296","line":5,"column":10,"nodeType":"253","messageId":"254","endLine":5,"endColumn":25},{"ruleId":"251","severity":1,"message":"297","line":23,"column":9,"nodeType":"253","messageId":"254","endLine":23,"endColumn":25},{"ruleId":"260","severity":1,"message":"261","line":109,"column":135,"nodeType":"262","endLine":109,"endColumn":199},{"ruleId":"260","severity":1,"message":"261","line":110,"column":123,"nodeType":"262","endLine":110,"endColumn":187},{"ruleId":"260","severity":1,"message":"261","line":111,"column":118,"nodeType":"262","endLine":111,"endColumn":182},{"ruleId":"260","severity":1,"message":"261","line":112,"column":95,"nodeType":"262","endLine":112,"endColumn":159},{"ruleId":"256","severity":1,"message":"291","line":19,"column":5,"nodeType":"258","endLine":19,"endColumn":14,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":28,"column":17,"nodeType":"301","messageId":"302","endLine":38,"endColumn":60},{"ruleId":"299","severity":1,"message":"300","line":40,"column":20,"nodeType":"301","messageId":"302","endLine":40,"endColumn":125},{"ruleId":"303","severity":1,"message":"304","line":49,"column":19,"nodeType":"253","messageId":"305","endLine":49,"endColumn":20},{"ruleId":"303","severity":1,"message":"306","line":59,"column":23,"nodeType":"253","messageId":"305","endLine":59,"endColumn":24},{"ruleId":"299","severity":1,"message":"300","line":89,"column":19,"nodeType":"307","messageId":"302","endLine":89,"endColumn":26},{"ruleId":"251","severity":1,"message":"252","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":26},{"ruleId":"251","severity":1,"message":"308","line":1,"column":28,"nodeType":"253","messageId":"254","endLine":1,"endColumn":36},{"ruleId":"277","severity":1,"message":"278","line":16,"column":9,"nodeType":"262","endLine":16,"endColumn":55},{"ruleId":"251","severity":1,"message":"309","line":6,"column":5,"nodeType":"253","messageId":"254","endLine":6,"endColumn":10},{"ruleId":"251","severity":1,"message":"310","line":43,"column":7,"nodeType":"253","messageId":"254","endLine":43,"endColumn":16},{"ruleId":"311","severity":1,"message":"312","line":18,"column":24,"nodeType":"313","messageId":"314","endLine":30,"endColumn":6},{"ruleId":"251","severity":1,"message":"315","line":4,"column":7,"nodeType":"253","messageId":"254","endLine":4,"endColumn":18},{"ruleId":"316","severity":1,"message":"317","line":23,"column":32,"nodeType":"313","messageId":"318","endLine":23,"endColumn":34},{"ruleId":"316","severity":1,"message":"317","line":36,"column":32,"nodeType":"313","messageId":"318","endLine":36,"endColumn":34},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'triger' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initCheck'. Either include it or remove the dependency array.","ArrayExpression",["319"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'inputPassConfirm' is assigned a value but never used.","'setConfirm' is assigned a value but never used.","'findMode' is assigned a value but never used.","'setFlag' is assigned a value but never used.","'inputVc' is assigned a value but never used.","'setVc' is assigned a value but never used.","'inputConfirm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentMode', 'locate.id', and 'locate.mode'. Either include them or remove the dependency array.",["320"],"'whatmatic' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'getApproveState' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserBal'. Either include it or remove the dependency array.",["321"],"'tempbtn' is assigned a value but never used.","'getItemsIdList' is defined but never used.","React Hook useEffect has missing dependencies: 'itemListViewer' and 'toknListViewer'. Either include them or remove the dependency array.",["322"],"'getToknStatus' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'setApprovalFalse' is assigned a value but never used.","'temp' is assigned a value but never used.","'setDisable' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pWire'. Either include it or remove the dependency array. If 'pWire' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["323"],"'checkTradeable' is assigned a value but never used.","'checkExclusive' is assigned a value but never used.","'useRef' is defined but never used.","'eventCreateItem' is defined but never used.","'exclusiveParsing' is assigned a value but never used.",["324"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-redeclare","'i' is already defined.","redeclared","'j' is already defined.","CallExpression","'useState' is defined but never used.","'count' is assigned a value but never used.","'stopTimer' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'fileNum'.","ArrowFunctionExpression","unsafeRefs","'uploadState' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},"Update the dependencies array to be: [initCheck]",{"range":"337","text":"338"},"Update the dependencies array to be: [currentMode, locate.id, locate.mode]",{"range":"339","text":"340"},"Update the dependencies array to be: [getUserBal]",{"range":"341","text":"342"},"Update the dependencies array to be: [itemListViewer, toknListViewer]",{"range":"343","text":"344"},"Update the dependencies array to be: [exclusive, comm, right, tradeable, pWire]",{"range":"345","text":"346"},"Update the dependencies array to be: [endHash, pWire]",{"range":"347","text":"348"},[663,665],"[initCheck]",[1249,1251],"[currentMode, locate.id, locate.mode]",[812,814],"[getUserBal]",[833,835],"[itemListViewer, toknListViewer]",[726,761],"[exclusive, comm, right, tradeable, pWire]",[680,689],"[endHash, pWire]"]