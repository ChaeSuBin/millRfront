[{"/home/giparang/threadweb/fortune/client/src/index.js":"1","/home/giparang/threadweb/fortune/client/src/App.js":"2","/home/giparang/threadweb/fortune/client/src/reportWebVitals.js":"3","/home/giparang/threadweb/fortune/client/src/pages/createNft.js":"4","/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToHash.js":"5","/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToBuffer.js":"6","/home/giparang/threadweb/fortune/client/src/utilityUnits/SHA256.js":"7","/home/giparang/threadweb/fortune/client/src/components/dispFileList.js":"8","/home/giparang/threadweb/fortune/client/src/getWeb3.js":"9","/home/giparang/threadweb/fortune/client/src/components/web3Connector.js":"10","/home/giparang/threadweb/fortune/client/src/components/interactionTe.js":"11","/home/giparang/threadweb/fortune/client/src/pages/rootPage.js":"12","/home/giparang/threadweb/fortune/client/src/components/naviCpnt.js":"13","/home/giparang/threadweb/fortune/client/src/pages/loginPage.js":"14","/home/giparang/threadweb/fortune/client/src/api.js":"15","/home/giparang/threadweb/fortune/client/src/pages/wallet.js":"16","/home/giparang/threadweb/fortune/client/src/pages/userInfo.js":"17","/home/giparang/threadweb/fortune/client/src/components/createChainId.js":"18","/home/giparang/threadweb/fortune/client/src/components/setMyNft.js":"19","/home/giparang/threadweb/fortune/client/src/utilityUnits/connMintService.js":"20","/home/giparang/threadweb/fortune/client/src/components/itemCpnt.js":"21","/home/giparang/threadweb/fortune/client/src/pages/itemDtail.js":"22","/home/giparang/threadweb/fortune/client/src/pages/helpDesk.js":"23","/home/giparang/threadweb/fortune/client/src/utilityUnits/connTradeService.js":"24","/home/giparang/threadweb/fortune/client/src/components/helpCpnt.js":"25","/home/giparang/threadweb/fortune/client/src/components/uploadIDX/rightBranch.js":"26","/home/giparang/threadweb/fortune/client/src/components/uploadIDX/setFileHash.js":"27","/home/giparang/threadweb/fortune/client/src/components/uploadIDX/uploadFiles.js":"28","/home/giparang/threadweb/fortune/client/src/components/uploadIDX/setItem.js":"29","/home/giparang/threadweb/fortune/client/src/components/waitModal.js":"30","/home/giparang/threadweb/fortune/client/src/components/detailPages/setItemIDX.js":"31","/home/giparang/threadweb/fortune/client/src/components/detailPages/fileListViewer.js":"32","/home/giparang/threadweb/fortune/client/src/components/detailPages/setBlockIDX.js":"33","/home/giparang/threadweb/fortune/client/src/components/detailPages/toknMint.js":"34","/home/giparang/threadweb/fortune/client/src/components/detailPages/toknTransfer.js":"35"},{"size":541,"mtime":1668010763333,"results":"36","hashOfConfig":"37"},{"size":2405,"mtime":1669963975566,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1661743902138,"results":"39","hashOfConfig":"37"},{"size":1599,"mtime":1667915930885,"results":"40","hashOfConfig":"37"},{"size":489,"mtime":1665479788864,"results":"41","hashOfConfig":"37"},{"size":999,"mtime":1667908832192,"results":"42","hashOfConfig":"37"},{"size":4923,"mtime":1663663500625,"results":"43","hashOfConfig":"37"},{"size":249,"mtime":1662025337430,"results":"44","hashOfConfig":"37"},{"size":1160,"mtime":1662308755621,"results":"45","hashOfConfig":"46"},{"size":1442,"mtime":1663319418115,"results":"47","hashOfConfig":"46"},{"size":2195,"mtime":1663403238827,"results":"48","hashOfConfig":"46"},{"size":1783,"mtime":1668682653877,"results":"49","hashOfConfig":"37"},{"size":956,"mtime":1665115784478,"results":"50","hashOfConfig":"37"},{"size":3088,"mtime":1669728263904,"results":"51","hashOfConfig":"37"},{"size":3792,"mtime":1669978540405,"results":"52","hashOfConfig":"37"},{"size":5032,"mtime":1669983620548,"results":"53","hashOfConfig":"37"},{"size":699,"mtime":1669728545819,"results":"54","hashOfConfig":"37"},{"size":2056,"mtime":1669723479994,"results":"55","hashOfConfig":"37"},{"size":6813,"mtime":1669982660619,"results":"56","hashOfConfig":"37"},{"size":10195,"mtime":1669948904555,"results":"57","hashOfConfig":"37"},{"size":1358,"mtime":1667302836403,"results":"58","hashOfConfig":"37"},{"size":3770,"mtime":1669978784078,"results":"59","hashOfConfig":"37"},{"size":4487,"mtime":1667825330092,"results":"60","hashOfConfig":"37"},{"size":3154,"mtime":1669945705484,"results":"61","hashOfConfig":"37"},{"size":1849,"mtime":1665628844902,"results":"62","hashOfConfig":"37"},{"size":3353,"mtime":1666315890521,"results":"63","hashOfConfig":"37"},{"size":2484,"mtime":1667918330741,"results":"64","hashOfConfig":"37"},{"size":1156,"mtime":1667911004151,"results":"65","hashOfConfig":"37"},{"size":3372,"mtime":1669904126307,"results":"66","hashOfConfig":"37"},{"size":462,"mtime":1668404375362,"results":"67","hashOfConfig":"37"},{"size":899,"mtime":1669978889440,"results":"68","hashOfConfig":"37"},{"size":1444,"mtime":1669981913453,"results":"69","hashOfConfig":"37"},{"size":1804,"mtime":1668424400347,"results":"70","hashOfConfig":"37"},{"size":1858,"mtime":1669971432727,"results":"71","hashOfConfig":"37"},{"size":1322,"mtime":1669982627034,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"yb6qsi",{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1thys67",{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"76"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"76"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"76"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"76"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},"/home/giparang/threadweb/fortune/client/src/index.js",[],[],[],"/home/giparang/threadweb/fortune/client/src/App.js",["195","196"],[],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Web3 from \"web3/dist/web3.min.js\";\nimport { CreateNft } from './pages/createNft.js';\nimport { HomePage } from './pages/rootPage';\nimport { UserInfoPage } from \"./pages/userInfo\";\nimport { LoginInput, RegistInput } from './pages/loginPage';\nimport { ItemDetail } from \"./pages/itemDtail\";\nimport { HelpDesk } from \"./pages/helpDesk\";\nimport { Nav } from './components/naviCpnt';\n// import { eventMintTokn } from './utilityUnits/connMintService';\n// import { serveToknIdx } from './components/detailPages/toknMint';\n// import { eventTradeTokn } from \"./utilityUnits/connTradeService\";\n// import { updateToknIdx } from \"./components/detailPages/toknTransfer\";\n\nfunction App() {\n  const [triger, setTriger] = useState(false);\n  const uid = sessionStorage.getItem('userid');\n  const FROM_ADDR = sessionStorage.getItem('chainid');\n  const web3 = new Web3('https://rpc-mumbai.matic.today');\n  // const web3 = new Web3('wss://ws-mumbai.matic.today');\n\n  // useEffect(() => {\n  //   toknMintingEvtListener();\n  //   toknTransferEvtListerner();\n  // })\n  // const toknMintingEvtListener = async() => {\n  //   const listen = await eventMintTokn(FROM_ADDR);\n  //   serveToknIdx(listen.toknId, FROM_ADDR);\n  // }\n  // const toknTransferEvtListerner = async() => {\n  //   const listen = await eventTradeTokn(FROM_ADDR);\n  //   updateToknIdx(listen.buyer, listen.toknId);\n  // }\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <Router>\n          <Nav userId={uid} chainId={FROM_ADDR}></Nav>\n          <section className=\"\">\n            <Routes>\n              <Route exact path='/' element={<HomePage />}/>\n              <Route exact path='/helpdesk' element={<HelpDesk />} />\n              <Route exact path='/userregist' element={<RegistInput web3={web3}/>}/>\n              <Route exact path='/signinpage' element={<LoginInput triger={(param) => setTriger(param)}/>}/>\n              <Route exact path='/myinfo' element={<UserInfoPage web3={web3} chainId={FROM_ADDR}/>}/>\n              <Route exact path='/filetohash' element={<CreateNft />}/>\n              <Route exact path='/itemdetails/:mode/:id' element={<ItemDetail />}/>\n            </Routes>\n          </section>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/home/giparang/threadweb/fortune/client/src/reportWebVitals.js",[],[],"/home/giparang/threadweb/fortune/client/src/pages/createNft.js",["197"],[],"import React, { useState, useEffect } from \"react\";\nimport { SetFileHash } from \"../components/uploadIDX/setFileHash\";\nimport { SetItemCpnt } from \"../components/uploadIDX/setItem\";\nimport { RightBranch } from \"../components/uploadIDX/rightBranch\";\n\nexport const CreateNft = ({web3}) => {\n  const uid = sessionStorage.getItem('userid');\n  const [title, setTitle] = useState('');\n  const [desc, setDesc] = useState('');\n  const [itemHash, setHash] = useState(null);\n  const [plusUri, setRight] = useState();\n  const [loginFlag, setFlag] = useState(false);\n\n  useEffect(() => {\n    checkLogined(uid);\n    console.log(uid);\n  },[])\n\n  const checkLogined = (uid) => {\n    if(uid === null){\n      setFlag(false);\n    }\n    else{\n      setFlag(true);\n    }\n  }\n\n  return(\n    <>\n      {loginFlag ? <><br/><br/><br/>\n        <h3>아이템 제목/설명/이용범위 설정.</h3>\n        <p>title: <input placeholder='title' onChange={(evt)=>setTitle(evt.target.value)}/></p>\n        <p>description: <br/>\n        <textarea name=\"docudesc\" rows='5' cols='55' placeholder=\"아이템 설명을 입력해주세요.&#13;\" \n          onChange={(evt) => setDesc(evt.target.value)}/></p>\n        <RightBranch pWire={(rightInfo)=>setRight(rightInfo)}/>\n        {itemHash == null ?\n          <>\n            <SetFileHash pWire={(hash)=>setHash(hash)} />\n          </> : <>\n            <SetItemCpnt title={title} desc={desc} toknUri={itemHash} rightInfo={plusUri}/>\n          </>\n        }  \n      </>:<>\n        <p>판매 아이템 업로드를 위해 로그인이 필요합니다.</p>\n      </>}\n      \n    </>\n  )\n}","/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToHash.js",[],[],"/home/giparang/threadweb/fortune/client/src/utilityUnits/fileToBuffer.js",["198"],[],"\nexport const onFileInputChange = (e, setBuffer, setFileInfo, setCheckA) => {\n  const fileByteArray = [];\n  const fileInfo = [];\n  let fileNum = 0;\n  \n  while(e.target.files.length > fileNum){\n    const reader = new FileReader();\n    const fileBufferArray = [];\n        \n    fileInfo.push({\n      name: e.target.files[fileNum].name,\n      type: e.target.files[fileNum].type,\n      size: e.target.files[fileNum].size\n    })\n    //console.log(e.target.files[fileNum]);\n    reader.readAsArrayBuffer(e.target.files[fileNum]);\n    reader.onloadend = (_evt) => {\n      if (_evt.target.readyState === FileReader.DONE) {\n        const arrayBuffer = _evt.target.result,\n        array = new Uint8Array(arrayBuffer);\n        for (const a of array) {\n          fileBufferArray.push(a);\n        }\n        fileByteArray.push(fileBufferArray);\n        if(fileByteArray.length === fileNum){\n          setCheckA(true);\n        }\n      }\n    }\n    ++fileNum;\n  }\n  setBuffer(fileByteArray);\n  setFileInfo(fileInfo);\n}","/home/giparang/threadweb/fortune/client/src/utilityUnits/SHA256.js",["199","200","201","202","203"],[],"//import filestream from \"fs\";\n\nexport const getFileHash = (_fileBuffer) => {\n    return SHA256(_fileBuffer);\n}\n\nexport const SHA256 = (s) => {\n    var chrsz   = 8;\n    var hexcase = 0;\n  \n    function safe_add (x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    }\n  \n    function S (X, n) { return ( X >>> n ) | (X << (32 - n)); }\n    function R (X, n) { return ( X >>> n ); }\n    function Ch(x, y, z) { return ((x & y) ^ ((~x) & z)); }\n    function Maj(x, y, z) { return ((x & y) ^ (x & z) ^ (y & z)); }\n    function Sigma0256(x) { return (S(x, 2) ^ S(x, 13) ^ S(x, 22)); }\n    function Sigma1256(x) { return (S(x, 6) ^ S(x, 11) ^ S(x, 25)); }\n    function Gamma0256(x) { return (S(x, 7) ^ S(x, 18) ^ R(x, 3)); }\n    function Gamma1256(x) { return (S(x, 17) ^ S(x, 19) ^ R(x, 10)); }\n  \n    function core_sha256 (m, l) {\n         \n        var K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1,\n            0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n            0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786,\n            0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n            0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147,\n            0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n            0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B,\n            0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n            0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A,\n            0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n            0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);\n\n        var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);\n\n        var W = new Array(64);\n        var a, b, c, d, e, f, g, h, i, j;\n        var T1, T2;\n  \n        m[l >> 5] |= 0x80 << (24 - l % 32);\n        m[((l + 64 >> 9) << 4) + 15] = l;\n  \n        for ( var i = 0; i<m.length; i+=16 ) {\n            a = HASH[0];\n            b = HASH[1];\n            c = HASH[2];\n            d = HASH[3];\n            e = HASH[4];\n            f = HASH[5];\n            g = HASH[6];\n            h = HASH[7];\n  \n            for ( var j = 0; j<64; j++) {\n                if (j < 16) W[j] = m[j + i];\n                else W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\n  \n                T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\n                T2 = safe_add(Sigma0256(a), Maj(a, b, c));\n  \n                h = g;\n                g = f;\n                f = e;\n                e = safe_add(d, T1);\n                d = c;\n                c = b;\n                b = a;\n                a = safe_add(T1, T2);\n            }\n  \n            HASH[0] = safe_add(a, HASH[0]);\n            HASH[1] = safe_add(b, HASH[1]);\n            HASH[2] = safe_add(c, HASH[2]);\n            HASH[3] = safe_add(d, HASH[3]);\n            HASH[4] = safe_add(e, HASH[4]);\n            HASH[5] = safe_add(f, HASH[5]);\n            HASH[6] = safe_add(g, HASH[6]);\n            HASH[7] = safe_add(h, HASH[7]);\n        }\n        return HASH;\n    }\n  \n    function str2binb (str) {\n        var bin = Array();\n        var mask = (1 << chrsz) - 1;\n        for(var i = 0; i < str.length * chrsz; i += chrsz) {\n            bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i%32);\n        }\n        return bin;\n    }\n  \n    function Utf8Encode(string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n  \n        for (var n = 0; n < string.length; n++) {\n  \n            var c = string.charCodeAt(n);\n  \n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n  \n        }\n  \n        return utftext;\n    }\n  \n    function binb2hex (binarray) {\n        var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n        var str = \"\";\n        for(var i = 0; i < binarray.length * 4; i++) {\n            str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\n            hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\n        }\n        return str;\n    }\n  \n    s = Utf8Encode(s);\n    return binb2hex(core_sha256(str2binb(s), s.length * chrsz));\n  \n}","/home/giparang/threadweb/fortune/client/src/components/dispFileList.js",[],[],"/home/giparang/threadweb/fortune/client/src/getWeb3.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/web3Connector.js",["204","205","206","207","208","209"],[],"/home/giparang/threadweb/fortune/client/src/components/interactionTe.js",["210"],[],"/home/giparang/threadweb/fortune/client/src/pages/rootPage.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/naviCpnt.js",["211"],[],"import '../App.css';\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\n\nexport const Nav = ({userId, chainId}) => {\n  const[logined, setLogined] = useState(false);\n  \n  useEffect(()=>{\n    if(userId !== null)\n      setLogined(true);\n    else if(sessionStorage.getItem('userid') !== null)\n      setLogined(true);\n  },[userId])\n\n  const storageClear = () => {\n    sessionStorage.clear();\n    window.location.reload();\n  }\n  return (\n    <nav style={{fontSize: \"large\"}}>\n      <Link to=\"/\" className=\"space\">home</Link>\n      {logined ? \n        <>\n          <a style={{cursor: \"pointer\"}} onClick={storageClear} className=\"space\">signout</a>\n          <Link to=\"/myinfo\" className=\"space\">Account Info</Link>\n        </>:<Link to=\"/signinpage\" className=\"space\">\n          signin\n        </Link>\n      }\n       <Link to='/helpdesk' className=\"space\">help</Link>\n      {/* {userId} : {chainId} */}\n    </nav>\n  );\n}","/home/giparang/threadweb/fortune/client/src/pages/loginPage.js",["212","213","214","215","216","217","218","219","220"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { putLogin, getMatchCode, getChainId, postTempuserTable } from \"../api\";\nimport { CreateChainId } from \"../components/createChainId\";\nimport { SHA256 } from \"../utilityUnits/SHA256\";\n\nexport const LoginInput = ({triger}) => {\n  const navigate = useNavigate();\n  const [inputId, setId] = useState();\n  const [inputPass, setPass] = useState();\n  const [inputPassConfirm, setConfirm] = useState();\n  const [findMode, setFlag] = useState(false);\n  const [inputVc, setVc] = useState(null);\n  \n  const keyPress = (evt) => {\n    if(evt.key === 'Enter') submit();\n  }\n  const submit = async() => {\n    const hPass = SHA256(inputPass);\n    const record = {\n      playerId: inputId,\n      playerPass: hPass\n    };\n    const result = await putLogin(record);\n    if(result){\n      sessionStorage.setItem('userid', inputId);\n\n      getChainId(inputId).then(chainId => {\n        if(chainId !== null)\n          sessionStorage.setItem('chainid', chainId);\n        triger(true);\n        navigate(\"/\");\n        window.location.reload();\n      })\n    }\n    else{\n      alert('❗confirm your ID and PASS again');\n    }\n  }\n  return(\n    <section>\n      <h2>login</h2>\n        <h5>Email: <input onChange={(event) => setId(event.target.value)} name=\"id\" placeholder='id'/></h5>\n        <h5>pass: <input  onKeyPress={keyPress} type='password' \n          onChange={(event) => setPass(event.target.value)} name=\"pw\" placeholder='password'/></h5>\n        <button onClick={submit}>login</button>\n        <br/><br/><a style={{cursor: \"not-allowed\"}}><p>주의: 잊어버린 Private Key는 되찾을 수 없습니다.</p></a>\n        <br/>\n        <a className=\"App-link\" href=\"http://mintservice.asuscomm.com:3000/userregist\">CREATE ACCOUNT</a>\n    </section>\n  )\n}\n\nexport const RegistInput = ({web3}) => {\n  const [inputId, setId] = useState();\n  const [inputVerif, setCode] = useState();\n  const [inputConfirm, setConfirm] = useState();\n  const [vcFlag, setVcFlag] = useState(false);\n  const [sendFlag, setSFlag] = useState(false);\n  \n  const sendVcode = () => {\n    postTempuserTable({playerId: inputId});\n    setSFlag(true);\n  }\n  const verifBtn = async() => {\n    const matchResult = await getMatchCode(inputId, inputVerif);\n    console.log(matchResult);\n    setVcFlag(matchResult);\n    if(matchResult)\n      alert('인증되었습니다');\n    else\n      alert('잘못된 요청코드입니다 코드를 다시 확인하여 주십시오');\n  }\n\n  return(\n    <section>\n        <h4>Email: <input placeholder='id' onChange={(evt)=>setId(evt.target.value)}/>\n        <button onClick={sendVcode}>인증번호 전송</button></h4>\n        {sendFlag ? <p>인증번호가 메일주소 {inputId} 로 전송되었습니다.</p>:<></>}\n        <h4>인증번호: <input placeholder='verif' onChange={(evt)=>setCode(evt.target.value)}/>\n        <button onClick={verifBtn}>인증하기</button></h4>   \n        {vcFlag ? <>\n          <CreateChainId uid={inputId} web3={web3}/>\n        </>:<>\n        </>}\n    </section>\n  )\n}","/home/giparang/threadweb/fortune/client/src/api.js",[],[],"/home/giparang/threadweb/fortune/client/src/pages/wallet.js",["221","222","223","224","225"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { \n  getApproveState,\n  getDeposit,\n  withdrawSaleItemPrice,\n} from \"../utilityUnits/connMintService\";\nimport { getTradeBalance, withdrawSaleToknPrice } from \"../utilityUnits/connTradeService\";\nimport { Help } from \"../components/helpCpnt\";\nimport { SHA256 } from \"../utilityUnits/SHA256\";\n\nexport const Wallet = ({web3, ADDR}) => {\n  const [flagSend, setSendFlag] = useState(false);\n  const [earning, setEarning] = useState();\n  const [tradeEarning, setTEarning] = useState();\n  const [balance, setBalance] = useState();\n\n  const [PRIVATE_KEY, setPriv] = useState(null);\n  const [modalFlag2, setFlag2] = useState(false);\n  const [helpMode, setHelpMod] = useState();\n\n  useEffect(() => {\n    getUserBal();\n  },[]);\n  \n  const getUserBal = async() => {\n    let salesPrice = await getDeposit(ADDR);\n    let earningTokn = await getTradeBalance(ADDR);\n    web3.eth.getBalance(ADDR).then(balanc => {\n      let count = 0;\n      do{\n        balanc /= 1000000;\n        salesPrice /= 1000000;\n        earningTokn /= 1000000;\n        ++count;\n      }while(count < 3)\n      setBalance(balanc);\n      setEarning(salesPrice);\n      setTEarning(earningTokn);\n    })\n  }\n\n  const helpOpen = (evt, helpMode) => {\n    setFlag2(true);\n    setHelpMod(helpMode);\n    document.addEventListener('click', helpClose);\n    evt.stopPropagation();\n  }\n  const helpClose = () => {\n    setFlag2(false);\n    document.removeEventListener('click', helpClose);\n  }\n\n  const withdrawFromMintservice = () => {\n    if(validationCheck()){\n      const amountCoin = parseInt(earning*100000)+'0000000000000';\n      withdrawSaleItemPrice(ADDR, PRIVATE_KEY, amountCoin).then(result => {\n        if(result === true)\n          alert('withdraw completed');\n        else\n          alert(result);\n      })\n    }\n  }\n  const withdrawFromTradeService = () => {\n    if(validationCheck()){\n      const amountCoin = parseInt(tradeEarning*100000)+'0000000000000';\n      withdrawSaleToknPrice(ADDR, PRIVATE_KEY, amountCoin).then(result => {\n        if(result === true)\n          alert('withdraw completed');\n        else\n          alert(result);\n      })\n    }\n  }\n  const validationCheck = () => {\n    if(PRIVATE_KEY !== null)\n      return true\n    else{\n      alert('!Private Key required');\n      return false}\n  }\n  const tempbtn = () => {\n    const pHash = SHA256(PRIVATE_KEY);\n    console.log(pHash);\n  }\n  return (\n  <>\n    <h2>wallet</h2>\n    <h4>잔고: {balance} MATIC\n      <button onClick={()=>setSendFlag(true)}>send</button></h4>\n    <h4><a style={{cursor: \"help\"}} onClick={(evt)=>helpOpen(evt, 2)}>아이템 발행 수입: {earning} MATIC</a>\n      <button onClick={withdrawFromMintservice}>내 잔고로 이체</button></h4>\n    <h4><a style={{cursor: \"help\"}} onClick={(evt)=>helpOpen(evt, 2)}>NFT 판매 수입: {tradeEarning} MATIC</a>\n      <button onClick={withdrawFromTradeService}>내 잔고로 이체</button></h4>\n    <h5> PRIVATE_KEY :\n      <input onChange={(evt)=>setPriv(evt.target.value)} size='45'></input></h5>\n    {/* <button onClick={tempbtn}>gethash</button> */}\n    <CoinSendModal\n      showFlag = {flagSend}\n      setFlag = {setSendFlag}\n      web3 = {web3}\n      ADDR = {ADDR}\n      PRIVATE_KEY = {PRIVATE_KEY}\n    />\n    <Help\n      showFlag={modalFlag2}\n      display = {helpMode}\n    />\n  </>\n  );\n}\nconst CoinSendModal = ({showFlag, setFlag, web3, ADDR, PRIVATE_KEY}) => {\n  const [rcvAcc ,setRcvAddress] = useState('');\n  const [sendAmount, setAmount] = useState(0);\n\n  const sendCoin = async() => {\n    const value = parseInt(sendAmount*100000)+'0000000000000';\n    const nonce = await web3.eth.getTransactionCount(ADDR, 'latest'); // nonce starts counting from 0\n    const transaction = {\n     'to': rcvAcc, // faucet address to return eth\n     'value': value,\n     'gas': 30000,\n     'nonce': nonce,\n     // optional data field to send message or execute smart contract\n    };\n    const signedTx = await web3.eth.accounts.signTransaction(transaction, PRIVATE_KEY);\n\n    web3.eth.sendSignedTransaction(signedTx.rawTransaction, function(error, hash) {\n\n      if (!error)\n        console.log(\"🎉 The hash of your transaction is: \", hash, \"\\n Check Polygon Scan to view the status of your transaction!\");\n      else\n        console.log(\"❗Something went wrong while submitting your transaction:\", error);\n    });\n  }\n\n  return(<>\n    {showFlag ? ( // showFlagがtrueだったらModalを表示する\n    <div id=\"overlay\" className='overlay'>\n      <div id=\"modalcontents\" className=\"modalcontents\">\n        <h5>Transfer Amount: <input onChange={(evt) => setAmount(evt.target.value)}/></h5>\n        <h5>Receiver:<input onChange={(evt)=>setRcvAddress(evt.target.value)} placeholder='receiver Address 0x...' size='45'></input></h5>\n        <button onClick={sendCoin}>send coin</button> \n        <button onClick={()=>setFlag(false)}>cancel</button>\n      </div>\n    </div>\n    ) : (\n      <></>// showFlagがfalseの場合はModalは表示しない)\n    )}\n  </>)\n}","/home/giparang/threadweb/fortune/client/src/pages/userInfo.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/createChainId.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/setMyNft.js",["226","227","228","229","230","231"],[],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { getItemsIdList, getOwnedItems, getOwnedTokns, getUserId, putLogin, putToknSale } from '../api';\nimport { ListItemsModal, ListItemsCpnt } from './itemCpnt';\nimport { \n  getItemStatus,\n  getApproveState,\n  setApprovalAll,\n  openToken,\n  closeToken\n} from \"../utilityUnits/connMintService\";\nimport { SHA256 } from '../utilityUnits/SHA256';\n\nexport const SetMyNFT = ({chainId}) => {\n  \n  const [toknId, settoknId] = useState([]);\n  const [toknStatus, setToknStt] = useState();\n  const [toknMatch, setToknMatch] = useState([]);\n  const [itemList, setItemList] = useState([]);\n  const [modalFlag, setFlag] = useState(false);\n\n  useEffect(()=>{\n    itemListViewer();\n    toknListViewer();\n  },[])\n\n  const itemListViewer = async() => {\n    const userId = await getUserId(chainId);\n    const items = await getOwnedItems(userId);\n    setItemList(items);\n  }\n  const toknListViewer = async() => {\n    let itemInfoArr = [{title: null, desc: null}];\n\n    const userId = await getUserId(chainId);\n    const item = await getOwnedTokns(userId);\n    console.log(item);\n    let itemLen = 0;\n    while(itemLen < item[0].length){\n      itemInfoArr[itemLen] = {\n        title: item[0][itemLen].title, \n        desc: item[0][itemLen].description, \n        toknId: item[1][itemLen].toknid\n      };  \n      ++itemLen;\n    }\n    console.log(itemInfoArr);\n    if(item[0].length > 0)\n      setToknMatch(itemInfoArr);\n  }\n\n  const getToknStatus = async(_toknId) => {\n    const toknStatus = await getItemStatus(_toknId);\n    let count = 0;\n    //console.log(typeof toknStatus[0]);\n    do{\n      toknStatus[0] /= 100;\n      ++count;\n    }while(count < 9)\n    \n    if(toknStatus[0] != 0)\n      return `${toknStatus[0]} MATIC`;\n    else\n      return 'not for sale';\n  }\n  return(\n    <>\n      <h2>업로드한 아이템 목록.</h2>\n      {itemList.length === 0 ? \n        <p>There are no items uploaded yet</p>:<></>}\n      {itemList.map((searchItems, index) => (\n        <ListItemsCpnt\n          key={index}\n          title={searchItems.title}\n          desc={searchItems.description}\n          itemId = {searchItems.id}\n        />\n      ))}\n      <h2>보유한 NFT 목록.</h2>\n      {toknMatch.length === 0 ?\n        <p>No NFT in your account</p>:<></>}\n      {toknMatch.map((searchItems, index) => (\n        <ListItemsModal\n          key={index}\n          title={searchItems.title}\n          desc={searchItems.desc}\n          toknId={searchItems.toknId}\n          setToknId={(id) => settoknId(id)}\n          setToknStt={(stt) => setToknStt(stt)}\n          flag={(tru)=>setFlag(tru)}\n        />\n      ))}\n      <SaleModal\n        showFlag={modalFlag}\n        setFlagFunc={setFlag}\n        selectedId={toknId}\n        toknState = {toknStatus}\n        ADDR = {chainId}\n      />\n    </>\n  )\n}\n\nconst SaleModal = ({showFlag, setFlagFunc, selectedId, toknState, ADDR}) => {\n  const [PRIVATE_KEY, setPriv] = useState();\n  const [toknPrice, setPrice] = useState();\n  \n  const startSale = async() => {\n    const approveState = await getApproveState(ADDR);\n    if(approveState){\n      console.log('coz');\n      openTokn();\n    }\n    else{\n      const approve_result = await setApproval();\n      if(approve_result === true){\n        console.log('kpk');\n        openTokn();}\n      else\n        alert(`No permissions granted.\\n${approve_result}`);\n    }\n  }\n  const openTokn = async() => {\n    if(toknPrice !== undefined){\n      const record = {\n        playerId: sessionStorage.getItem('userid'),\n        playerPass: SHA256(PRIVATE_KEY)\n      }\n      if(await putLogin(record)){\n        const tokenPrice = parseInt(toknPrice*100000)+'0000000000000';\n        openToken(ADDR, PRIVATE_KEY, tokenPrice, selectedId).then(result => {\n          if(result === true){\n            const recorde = {\n              toknId: selectedId,\n              price: toknPrice,\n              state: true\n            }\n            putToknSale(recorde).then(resultIdx => {\n              if(resultIdx){\n                alert(`NFT (ID: ${selectedId}) sale started`);\n                setFlagFunc(false);\n              }\n            })\n          }\n          else{\n            console.log(result);\n            alert('not enough gas');\n          }\n        })\n      }\n      else{\n        alert('check again your Private key');\n      }\n    }\n    else\n      alert('please set a selling price');\n  }\n  const closeTokn = async() => {\n    if(PRIVATE_KEY !== undefined){\n      closeToken(ADDR, PRIVATE_KEY, selectedId).then(result => {\n        if(result === true){\n          const record = {\n            toknId: selectedId,\n            price: 0,\n            state: false\n          }\n          putToknSale(record).then(resultIdx => {\n            if(resultIdx){\n              alert(`NFT (ID: ${selectedId}) closed`);\n              setFlagFunc(false);\n            }\n          })\n        }\n        else{\n          //console.log(result);\n          alert(result);}\n      })\n    }\n    else\n      alert('!PRIVATE_KEY required');\n  }\n  const setApproval = () => {\n    return new Promise(resolve => {\n      if(window.confirm('Grant NFT transfer permission to below SmartContract\\n0x1434F691eCefeA03ce6532a4cA99FD7E08764e2d')){\n        setApprovalAll(ADDR, PRIVATE_KEY, true).then(result => {\n          console.log(result);\n          resolve(result);\n        })\n      }\n      else{\n        resolve(false);\n      }\n    })\n  }\n  const setApprovalFalse = async() => {\n    setApprovalAll(ADDR, PRIVATE_KEY, false).then(result => {\n      console.log(result);\n    })\n  }\n  const temp = async() => {\n    const approveState = await getApproveState(ADDR);\n    console.log(approveState);\n    console.log(toknState);\n  }\n  return(<>\n    {showFlag ? ( // showFlagがtrueだったらModalを表示する\n    <div id=\"overlay\" className='overlay'>\n      <div id=\"modalcontents\" className=\"modalcontents\">\n        <button onClick={()=>setFlagFunc(false)}>close</button>\n        <h4>NFT ID: {selectedId}</h4>\n        <h5> PRIVATE_KEY :\n          <input onChange={(evt)=>setPriv(evt.target.value)} size='45'></input></h5>\n        <h5> price : \n          <input placeholder='price(MATIC)' onChange={(evt)=>setPrice(evt.target.value)} size='10'/></h5>\n        <Link to={`/itemdetails/token/${selectedId}`} style={{ textDecoration: 'none' }}>\n          click to check detail this NFT\n        </Link><br/><br/>\n        {toknState==='Open' ? \n          <button onClick={closeTokn}>close sale</button>:\n          <button onClick={startSale}>sale start</button>\n        }\n        {/* <button onClick={setApprovalFalse}>setfalse</button>\n        <button onClick={temp}>temp</button> */}\n      </div>\n    </div>\n    ) : (\n      <></>// showFlagがfalseの場合はModalは表示しない)\n    )}\n  </>)\n}","/home/giparang/threadweb/fortune/client/src/utilityUnits/connMintService.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/itemCpnt.js",["232"],[],"import React from 'react';\nimport './card.css';\nimport { Link } from \"react-router-dom\";\nimport { getToknStatus, hexToUTF8 } from '../utilityUnits/connMintService';\n\nexport const  ListItemsCpnt = ({title, desc, toknId, itemId}) => {\n  const sumNailUrl = null;\n\n  return (\n    <><div className=\"ToDoListItem\">\n      { toknId === undefined ? \n      <Link to={'/itemdetails/item/' + itemId } style={{ textDecoration: 'none' }}>\n      <div className=\"ToDoListItem-title\">title: {title}</div></Link>\n      :<Link to={'/itemdetails/token/' + toknId } style={{ textDecoration: 'none' }}>\n      <div className=\"ToDoListItem-title\">title: {title}</div></Link>}\n      \n        { sumNailUrl===null ? <></>\n          : <div><img src={sumNailUrl} /></div>\n        }\n      <div className=\"ToDoListItem-description\">description: {desc}</div>\n      </div>\n    </>\n  );\n}\n\nexport const  ListItemsModal = ({title, desc, toknId, setToknId, setToknStt, flag}) => {\n\n  const clickTitle = async() => {\n    const toknState = await getToknStatus(toknId);\n    setToknStt(await hexToUTF8(toknState.status));\n    setToknId(toknId);\n    flag(true);\n  }\n  return (\n    <><div className=\"ToDoListItem\">\n      <div className=\"ToDoListItem-title\" onClick={clickTitle}>title: {title}</div>\n      <div className=\"ToDoListItem-description\">description: {desc}</div>\n      </div>\n    </>\n  );\n}","/home/giparang/threadweb/fortune/client/src/pages/itemDtail.js",["233"],[],"import React, { useEffect, useState }from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getItemFiles, getItemInfo, getItemInfoFromToknId } from '../components/detailPages/setItemIDX';\nimport { FileListViewer } from'../components/detailPages/fileListViewer';\nimport { getBlockInfo, getNftInfo } from '../components/detailPages/setBlockIDX';\nimport { WaitModal } from '../components/waitModal';\nimport { buyToknMint } from '../components/detailPages/toknMint';\nimport { buyToknTransfer } from '../components/detailPages/toknTransfer';\n\nexport const  ItemDetail = () => {\n  const FROM_ADDR = sessionStorage.getItem('chainid');\n  const locate = useParams();\n  const [itemInfo, setII] = useState({title: '', desc: ''});\n  const [itemInfoB, setIB] = useState({price: null, royalty: null, useRange: null, remain: null });\n  const [fileList, setFlist] = useState([]);\n  const [buyMode, setMode] = useState(false);\n  const [buyFlag, setFlag] = useState(false);\n  const [waitFlag, set_w_Flag] = useState(false);\n  \n  useEffect(() => {\n    currentMode(locate.id, locate.mode);\n  },[])\n\n  const currentMode = (_rowId, _mode) => {\n    if(_mode === 'item')\n      modeIgetInfo(_rowId);\n    else\n      modeTgetInfo(_rowId) //not rowId -> toknId\n  }\n  const modeIgetInfo = async(_rowId) => {\n    const itemInfo = await getItemInfo(_rowId);\n    setII(itemInfo);\n    const fileList = await getItemFiles(itemInfo.hash);\n    setFlist(fileList);\n    const itemInfoB = await getBlockInfo(itemInfo.itemId);\n    setIB(itemInfoB);\n  }\n  const modeTgetInfo = async(_toknId) => {\n    setMode(true);\n    const toknInfo = await getNftInfo(_toknId);\n    setIB(toknInfo);\n    const fileList = await getItemFiles(toknInfo.fileHash);\n    setFlist(fileList);\n    const itemInfo = await getItemInfoFromToknId(_toknId);\n    setII(itemInfo);\n  }\n\n  return (\n  <><br/><br/>\n    <h3>title: {itemInfo.title}</h3>\n    <h4>가격: {itemInfoB.price} MATIC</h4>\n    <h4>수수료: {itemInfoB.royalty} MATIC</h4>\n    <h4>이용가능 범위: {itemInfoB.useRange}</h4>\n    \n    {buyMode ? \n      <>\n        <h4>판매상태: {itemInfoB.door}</h4>\n      </> : <>\n        <h4>남은 수량: {itemInfoB.remain}개 남음</h4>  \n      </>}\n    <button onClick={() => setFlag(true)}>구매하기</button>\n    {fileList.map((searchItems, index) => (\n      <FileListViewer\n        key={index}\n        fileName={searchItems}\n        toknUri = {itemInfo.hash}\n        permission = {true}\n      />\n    ))}\n    <BuyModal\n      showFlag={buyFlag}\n      setFlag = {setFlag}\n      setFlag2 = {set_w_Flag}\n      addr = {FROM_ADDR}\n      price = {itemInfoB.price}\n      itemId = {itemInfo.itemId}\n      buyMode = {buyMode}\n    />\n    <WaitModal\n      showFlag={waitFlag}\n    />\n  <br/><br/></>\n  );\n}\nconst BuyModal = ({showFlag, setFlag2, setFlag, addr, price, itemId, buyMode}) => {\n  const [PRIVATE_KEY, setPriv] = useState();\n  \n  return(<>\n    {showFlag ? ( // showFlagがtrueだったらModalを表示する\n    <div id=\"overlay\" className='overlay'>\n      <div id=\"modalcontents\" className=\"modalcontents\">\n        <h4>가격: {price} Matic</h4>\n        <h5> PRIVATE_KEY :\n          <input onChange={(evt)=>setPriv(evt.target.value)} size='45'></input></h5>\n        {buyMode ? <button onClick={() => {setFlag2(true); buyToknTransfer(price, itemId, setFlag2, addr, PRIVATE_KEY)}}>구매하기</button> : \n          <button onClick={() => {setFlag2(true); buyToknMint(price, itemId, setFlag2, addr, PRIVATE_KEY);}}>구매하기</button>}\n        {/* <button onClick={() => {set_w_Flag(true); buyTokn(PRIVATE_KEY);}}>Buy</button> */}\n        <button onClick={()=>setFlag(false)}>cancel</button>\n      </div>\n    </div>\n    ) : (\n      <></>// showFlagがfalseの場合はModalは表示しない)\n    )}\n  </>)\n}","/home/giparang/threadweb/fortune/client/src/pages/helpDesk.js",[],[],"/home/giparang/threadweb/fortune/client/src/utilityUnits/connTradeService.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/helpCpnt.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/uploadIDX/rightBranch.js",["234","235","236","237","238"],[],"import React, { useState, useEffect } from \"react\";\n\nexport const RightBranch = ({pWire}) => {\n  const [right, setRight] = useState([]);//c\n  const [disable, setDisable] = useState(false);\n  const [exclusive, setExclusive] = useState('Public');//a\n  const [comm, setComm] = useState('NC');//b\n  const [viewRight, setView] = useState(false);\n  const [tradeable, setTra] = useState(true);//d\n  const [plusUri, setUri] = useState('');\n\n  useEffect(()=>{\n    let toknLisence;\n    if(tradeable) toknLisence = `Tradeable/${exclusive}/${comm}/${right.join(\"-\")}/`;\n    else toknLisence = `nonTradea/${exclusive}/${comm}/${right.join(\"-\")}/`;\n    setUri(toknLisence);\n    pWire(toknLisence);\n  },[exclusive, comm, right, tradeable])\n\n  const checkTradeable = (evt) => {\n    if(evt.target.value !== \"PO\") setTra(false);\n    else setTra(true);\n  }\n  const checkExclusive = (evt) => {\n    if(evt.target.value !== \"GE\") setExclusive('Exclusive');\n    else setExclusive('Public');\n  }\n  const checkCommercial = (evt) => {\n    setRight([]);\n    if(evt.target.value === \"CO\"){\n      setComm(\"CO\");\n      setView(true);\n    }\n    else if(evt.target.value === \"NC\"){\n      setComm(\"NC\");\n      setView(true);\n    }\n    else{\n      setComm(\"NC\")\n      setView(false);\n    }\n  }\n//   const checkRight = (evt) => {\n//     if(evt.target.value === 'RA'){\n//       if(disable) setDisable(false);\n//       else setDisable(true);\n//     }\n//     else{\n//       let rightStr = '';\n//     }\n//   }\n  const checkRight = (evt) => {\n    if (right.includes(evt.target.value)) {\n      setRight(\n        right.filter((checkedValue) => checkedValue !== evt.target.value)\n      );\n    } else {\n      setRight([...right, evt.target.value]);\n    }\n  };\n  const temp = () => {\n    console.log(plusUri);\n  }\n  return(\n    <>\n      {/* <button onClick={temp}>console</button> */}\n      <br/>저작권 이용 가능 여부 지정<br/>\n      <label><input type=\"radio\" value=\"CO\" onChange={checkCommercial} name='comm'/>\n        영리목적 이용 허가 </label>\n      <label><input type=\"radio\" value=\"NC\" onChange={checkCommercial} name='comm'/>\n        비영리적 이용 허가 </label><br/>\n      {viewRight ? \n      <>\n        <br/>허가할 이용 범위 지정<br/>\n        {/* <label><input type=\"checkbox\" value=\"RA\" checked={right.includes(\"RA\")} onChange={checkRight} name='right'/>\n        모든 권리</label> */}\n        <label><input type=\"checkbox\" value=\"RR\" checked={right.includes(\"RR\")}onChange={checkRight} disabled={disable}/>\n        복제가능</label>\n        <label><input type=\"checkbox\" value=\"RDW\" checked={right.includes(\"RDW\")}onChange={checkRight} disabled={disable}/>\n        2차제작 가능</label>\n        <label><input type=\"checkbox\" value=\"RE\" checked={right.includes(\"RE\")}onChange={checkRight} disabled={disable}/>\n        전시가능</label>\n        <label><input type=\"checkbox\" value=\"RPP\" checked={right.includes(\"RPP\")}onChange={checkRight} disabled={disable}/>\n        공연가능</label><br/>\n      </> : <></>}\n      {/* <br/>타인간 거래 가능여부 선택<br/>\n      <label><input type=\"radio\" value=\"PO\" onChange={checkTradeable} name='tradeable' defaultChecked/>\n        가능함 </label>\n      <label><input type=\"radio\" value=\"DI\" onChange={checkTradeable} name='tradeable'/>\n        불가함 </label><br/> */}\n    </>\n  )\n}","/home/giparang/threadweb/fortune/client/src/components/uploadIDX/setFileHash.js",["239"],[],"import React, { useState, useEffect } from \"react\";\nimport { onFileInputChange } from \"../../utilityUnits/fileToBuffer\";\nimport { fileToHash, setFinalHash } from '../../utilityUnits/fileToHash'\nimport { FilesList } from \"../../components/dispFileList\";\nimport { UploadFiles } from \"./uploadFiles\";\n\nexport const SetFileHash = ({pWire}) => {\n\n  let te = -1;\n  let hashArr = [];\n  const [fileBuffer, setFileBuffer] = useState([]);\n  const [fileInfo, setFileInfo] = useState([]);\n  const [fileHashs, setFileHashs] = useState([]);\n  const [endHash, setEndHash] = useState();\n  const [passA, setCheckA] = useState(false);\n\n  useEffect(() => {\n    pWire(endHash);\n  },[endHash])\n  \n  const extractHash = async() => {\n    setCheckA(false);\n    sortFileSize().then(result => {\n      if(result){\n        getFileHashArr();\n      }\n    })\n  }\n  const getFileHashArr = () => {\n    hashArr = fileToHash(fileBuffer, setFileHashs);\n    const endHash = getFinalHash(hashArr);\n    UploadFiles(fileBuffer, fileInfo, endHash);\n    setEndHash(endHash);\n  }\n\n  const sortFileSize = async() => {\n    let asc = function (a, b) {\n      return (a.length < b.length) ? -1 : 1;  //オブジェクトの昇順ソート\n    }\n    let ascIndex = function(a, b) {\n      return (a.size < b.size) ? -1 : 1;\n    }\n    if(fileBuffer.length !== 0){\n      fileBuffer.sort(asc);\n      fileInfo.sort(ascIndex);\n      return true;\n    }\n    else{\n      return false;\n    }  \n  }\n  \n  const getFinalHash = (_hashArr) => {\n    let fileNum = 0;\n    let hashsStr = '';\n    //let fileTypeArr = [];\n    do {\n      hashsStr += _hashArr[fileNum];\n      //fileTypeArr.push((fileInfo[fileNum].type).split('/').pop());\n      ++fileNum;\n    } while (_hashArr.length > fileNum);\n    return setFinalHash(hashsStr);\n  }\n\n  return(\n    <div>\n      <h3>업로드할 파일 선택</h3>\n      <label className=\"inputfile\"><input type='file' \n        onChange={(evt)=>\n          onFileInputChange(evt, setFileBuffer, setFileInfo, setCheckA)} \n        multiple/></label><br/>\n      <br/>\n      {fileInfo.map(uploadItems => (\n        <FilesList\n          key={uploadItems.name}\n          row={++te}\n          title = {uploadItems.name}\n          type = {uploadItems.type}\n          size = {uploadItems.size}\n          hash = {fileHashs[te]}\n        />\n      ))}\n      {passA ? \n      <>\n        <button onClick={extractHash}>파일 업로드</button>-버튼을 누른 후 잠시 기다려주세요.\n      </>:<>\n      \n      </>}\n    </div>\n  )\n}","/home/giparang/threadweb/fortune/client/src/components/uploadIDX/uploadFiles.js",["240","241","242"],[],"import { postUploadArtwork, getMerge } from \"../../api\";\n\nexport const UploadFiles = ( fileBufferList, fileInfoList, finalHash ) => {\n  let uploadState = false;\n  \n    const size = 1024 * 50; //50KB 50KB Section size\n    fileBufferList.map(async(file, index) => {\n      let fileChunks = [];\n      let fileIndex = 0;\n      for(let cur = 0; cur < file.length; cur += size) {\n        fileChunks.push({\n          section: fileIndex++,\n          chunk: file.slice(cur, cur + size),\n        });\n      }\n      uploadList(fileInfoList, fileChunks, index++);\n    })\n    setTimeout(()=>{\n      mergeChunks(fileInfoList, finalHash);\n\t  },2000);\n}\nconst uploadList = (fileInfoList, fileChunks, _index) => {\n  fileChunks.map((item, index) => {\n    const record = {\n      fileName: fileInfoList[_index].name,\n      section: item.section,\n      chunk: item.chunk,\n    }\n    console.log(record);\n    postUploadArtwork(record).then(result => {\n      console.log(result);\n    })\n  })\n}\nconst mergeChunks = async(fileInfoList, finalHash) => {\n  fileInfoList.map((item, idx) => {\n    getMerge(item.name, finalHash).then(response => {\n      console.log(response);\n    })\n  })\n}","/home/giparang/threadweb/fortune/client/src/components/uploadIDX/setItem.js",["243","244","245","246"],[],"import React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postUploadItemIdx, getUserId, putLogin } from '../../api';\nimport { eventCreateItem, setNFTidx } from '../../utilityUnits/connMintService';\nimport { SHA256 } from '../../utilityUnits/SHA256';\nimport { WaitModal } from '../waitModal';\n\nexport const SetItemCpnt = ({title, desc, toknUri, rightInfo}) => {\n  const SEND_ADDR = sessionStorage.getItem('chainid');\n  const navigate = useNavigate();\n  const [NumOfTokn, setNumOfTokn] = useState();\n  const [price, setValue] = useState();\n  const [PRIVATE_KEY, setPrivKey] = useState(null);\n  const [modalFlag, setFlag] = useState(false);\n  const [Royalty, setLowest] = useState(0);\n  const [active, setActive] = useState(false);\n\n  const exclusiveParsing = () => {\n    let result = rightInfo.split('/');\n    //console.log(result[1]);\n    if(result[1] === 'Exclusive'){\n      setActive(true);\n      setNumOfTokn(1);\n    }\n    else\n      setActive(false);\n  }\n  const setItem = async() => {\n    const royality = parseInt(Royalty*100000)+'0000000000000';\n    const value = parseInt(price*100000)+'0000000000000';\n    const tokenUri = rightInfo+toknUri;\n    \n    if(title !== '' && desc !== '' ){\n      const record = {\n        playerId: sessionStorage.getItem('userid'),\n        playerPass: SHA256(PRIVATE_KEY)\n      }\n      if(await putLogin(record)){\n        setNFTidx(SEND_ADDR, PRIVATE_KEY, tokenUri, value, royality, NumOfTokn).then(result => {\n          console.log(result);})\n        uploadItemIdx();\n      }\n      else{\n        alert('Private Key 를 다시 확인 후 시도하십시오');\n        setFlag(false);}\n    }\n    else{\n      setFlag(false);\n      alert('Please enter the title and description of the item to be uploaded');\n    }\n  }\n  const uploadItemIdx = async(_itemId) => {\n    const userId = await getUserId(SEND_ADDR);\n    const record = {\n      //itemId: parseInt(_itemId),\n      title: title,\n      desc: desc,\n      hash: toknUri,\n      userId: userId,\n      fromAddr: SEND_ADDR\n    }\n    postUploadItemIdx(record).then(response => {\n      console.log('checka')\n      if(response){\n        setFlag(false);\n        alert('🎉Successfully Created');\n        navigate(\"/\");\n      }\n    })\n  }\n  // const itemCreateEvtListener = async() => {\n  //   eventCreateItem(SEND_ADDR).then(listen => {\n  //     if(listen){\n  //       uploadItemIdx(listen.itemId);\n  //     }\n  //   }).catch(err => {\n  //     console.log(err);\n  //   })\n  // }\n  return(\n    <>\n    {/* <button onClick={putDBtoknIDX}>temp</button> */}\n    <h3>아이템 판매정보 입력</h3>\n    <p>quantity: <input placeholder='quantity of token' onChange={(evt)=>setNumOfTokn(evt.target.value)} disabled={active}/></p>\n    <p>price: <input placeholder='price of token' onChange={(evt)=>setValue(evt.target.value)} /></p>\n    <p>royalties: <input placeholder='MATIC' onChange={(evt)=>setLowest(evt.target.value)} defaultValue='0'/></p>\n    <p>private Key: <input placeholder='input your private key to mint nft' onChange={(evt)=>setPrivKey(evt.target.value)} size='45'/></p>\n    <button onClick={() => {setFlag(true); setItem();}}>판매시작</button>\n    <WaitModal showFlag={modalFlag} />\n    </>\n  )\n}\n// const stopTimer = () => {\n//   clearInterval(intervalId);\n//   intervalId=null;\n//   count = 0;\n// }","/home/giparang/threadweb/fortune/client/src/components/waitModal.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/detailPages/setItemIDX.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/detailPages/fileListViewer.js",["247","248","249"],[],"import React, { useEffect, useState } from \"react\";\nimport { getFileBolb } from \"../../api\";\n\nexport const FileListViewer = ({fileName, toknUri, permission}) => {\n  \n  const FilePreview = () => {\n    const file = fileName.split('.');\n    if(file[1] === 'png' ||\n      file[1] === 'jpg' ||\n      file[1] === 'jpeg' ||\n      file[1] === 'JPG' || \n      file[1] === 'JPEG' || \n      file[1] === 'bmp'){\n      const imgStock = `https://mintservice.asuscomm.com:8139/getimagestock/${toknUri}/${fileName}`;\n      return(<>\n        <img style={{width: '700px'}} src={imgStock}/>\n      </>)\n    }\n    else if(file[1] === 'flac' || \n      file[1] === 'wav' ||\n      file[1] === 'mp3' || \n      file[1] === 'MP3'){\n      const auxStock = `https://mintservice.asuscomm.com:8139/getaudiostock/${toknUri}/${fileName}`;\n      return(<>\n        <audio controls src={auxStock} />\n      </>)\n    }\n  }\n    const downloadFileData = () => {\n      if(permission){\n        getFileBolb(toknUri, fileName).then(response => {\n          let url = window.URL.createObjectURL(response);\n          let a = document.createElement('a');\n          a.href = url;\n          a.download = fileName;\n          a.click();\n        })\n      }\n      else{\n        alert('Attempt to download without permission');\n      }\n    }\n    return(\n    <>\n      <h5>{fileName}<br/>\n        <FilePreview />\n        <button onClick={downloadFileData}>download</button>\n      </h5>\n    </>\n    )\n}","/home/giparang/threadweb/fortune/client/src/components/detailPages/setBlockIDX.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/detailPages/toknMint.js",[],[],"/home/giparang/threadweb/fortune/client/src/components/detailPages/toknTransfer.js",["250","251"],[],"import { buyedToknChange, getUserId, putLogin } from '../../api';\nimport { buyNFT } from '../../utilityUnits/connTradeService.js'\nimport { SHA256 } from '../../utilityUnits/SHA256';\n\nlet intervalId = null;\nlet count = 0;\n\nexport const buyToknTransfer = async(_price, _itemId, set_w_Flag, FROM_ADDR, PRIVATE_KEY) => {\n  const record = {\n    playerId: sessionStorage.getItem('userid'),\n    playerPass: SHA256(PRIVATE_KEY)\n  }\n  if(await putLogin(record)){\n    const value = parseInt(_price*100000) + '0000000000000';\n    buyNFT(FROM_ADDR, PRIVATE_KEY, _itemId, value).then(result => {\n      if(result === true)\n        updateToknIdx(FROM_ADDR);\n      else{\n        alert('거래에 필요한 폴리곤 코인이 부족합니다 \\n 코인을 충전한 후 다시 시도하여 주십시오');\n        set_w_Flag(false)\n      }\n    })\n  }\n  else{\n    alert(`⚠️ Private Key 를 확인 후 다시 시도하십시오`);\n    set_w_Flag(false);\n  }\n}\n\nconst updateToknIdx = async(_buyerAddr) => {\n\tconst userId = await getUserId(_buyerAddr);\n\tconst record = {\n\t\tuserId: userId,\n    fromAddr: _buyerAddr\n\t}\n\tbuyedToknChange(record).then(result => {\n\t\tif(result){\n      if(!alert('🎉Successfully purchased'))\n        window.location.reload();\n\t\t}\n\t})\n}\nconst stopTimer = () => {\n  clearInterval(intervalId);\n  intervalId=null;\n}",{"ruleId":"252","severity":1,"message":"253","line":1,"column":27,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36},{"ruleId":"252","severity":1,"message":"256","line":22,"column":10,"nodeType":"254","messageId":"255","endLine":22,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":17,"column":5,"nodeType":"259","endLine":17,"endColumn":7,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":18,"column":24,"nodeType":"263","messageId":"264","endLine":30,"endColumn":6},{"ruleId":"265","severity":1,"message":"266","line":28,"column":17,"nodeType":"267","messageId":"268","endLine":38,"endColumn":60},{"ruleId":"265","severity":1,"message":"266","line":40,"column":20,"nodeType":"267","messageId":"268","endLine":40,"endColumn":125},{"ruleId":"269","severity":1,"message":"270","line":49,"column":19,"nodeType":"254","messageId":"271","endLine":49,"endColumn":20},{"ruleId":"269","severity":1,"message":"272","line":59,"column":23,"nodeType":"254","messageId":"271","endLine":59,"endColumn":24},{"ruleId":"265","severity":1,"message":"266","line":89,"column":19,"nodeType":"273","messageId":"268","endLine":89,"endColumn":26},{"ruleId":"252","severity":1,"message":"274","line":7,"column":10,"nodeType":"254","messageId":"255","endLine":7,"endColumn":14},{"ruleId":"252","severity":1,"message":"275","line":8,"column":10,"nodeType":"254","messageId":"255","endLine":8,"endColumn":22},{"ruleId":"252","severity":1,"message":"276","line":14,"column":9,"nodeType":"254","messageId":"255","endLine":14,"endColumn":18},{"ruleId":"252","severity":1,"message":"277","line":19,"column":13,"nodeType":"254","messageId":"255","endLine":19,"endColumn":21},{"ruleId":"252","severity":1,"message":"278","line":21,"column":13,"nodeType":"254","messageId":"255","endLine":21,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":50,"column":7,"nodeType":"281","endLine":50,"endColumn":31},{"ruleId":"257","severity":1,"message":"282","line":13,"column":5,"nodeType":"259","endLine":13,"endColumn":22,"suggestions":"283"},{"ruleId":"279","severity":1,"message":"280","line":24,"column":11,"nodeType":"281","endLine":24,"endColumn":83},{"ruleId":"252","severity":1,"message":"284","line":11,"column":10,"nodeType":"254","messageId":"255","endLine":11,"endColumn":26},{"ruleId":"252","severity":1,"message":"285","line":11,"column":28,"nodeType":"254","messageId":"255","endLine":11,"endColumn":38},{"ruleId":"252","severity":1,"message":"286","line":12,"column":10,"nodeType":"254","messageId":"255","endLine":12,"endColumn":18},{"ruleId":"252","severity":1,"message":"287","line":12,"column":20,"nodeType":"254","messageId":"255","endLine":12,"endColumn":27},{"ruleId":"252","severity":1,"message":"288","line":13,"column":10,"nodeType":"254","messageId":"255","endLine":13,"endColumn":17},{"ruleId":"252","severity":1,"message":"289","line":13,"column":19,"nodeType":"254","messageId":"255","endLine":13,"endColumn":24},{"ruleId":"279","severity":1,"message":"280","line":47,"column":19,"nodeType":"281","endLine":47,"endColumn":54},{"ruleId":"252","severity":1,"message":"290","line":57,"column":10,"nodeType":"254","messageId":"255","endLine":57,"endColumn":22},{"ruleId":"252","severity":1,"message":"285","line":57,"column":24,"nodeType":"254","messageId":"255","endLine":57,"endColumn":34},{"ruleId":"252","severity":1,"message":"291","line":4,"column":3,"nodeType":"254","messageId":"255","endLine":4,"endColumn":18},{"ruleId":"257","severity":1,"message":"292","line":24,"column":5,"nodeType":"259","endLine":24,"endColumn":7,"suggestions":"293"},{"ruleId":"252","severity":1,"message":"294","line":83,"column":9,"nodeType":"254","messageId":"255","endLine":83,"endColumn":16},{"ruleId":"279","severity":1,"message":"280","line":92,"column":9,"nodeType":"281","endLine":92,"endColumn":71},{"ruleId":"279","severity":1,"message":"280","line":94,"column":9,"nodeType":"281","endLine":94,"endColumn":71},{"ruleId":"252","severity":1,"message":"295","line":4,"column":10,"nodeType":"254","messageId":"255","endLine":4,"endColumn":24},{"ruleId":"257","severity":1,"message":"296","line":26,"column":5,"nodeType":"259","endLine":26,"endColumn":7,"suggestions":"297"},{"ruleId":"252","severity":1,"message":"298","line":53,"column":9,"nodeType":"254","messageId":"255","endLine":53,"endColumn":22},{"ruleId":"299","severity":1,"message":"300","line":62,"column":22,"nodeType":"301","messageId":"302","endLine":62,"endColumn":24},{"ruleId":"252","severity":1,"message":"303","line":196,"column":9,"nodeType":"254","messageId":"255","endLine":196,"endColumn":25},{"ruleId":"252","severity":1,"message":"304","line":201,"column":9,"nodeType":"254","messageId":"255","endLine":201,"endColumn":13},{"ruleId":"305","severity":1,"message":"306","line":18,"column":18,"nodeType":"281","endLine":18,"endColumn":42},{"ruleId":"257","severity":1,"message":"307","line":22,"column":5,"nodeType":"259","endLine":22,"endColumn":7,"suggestions":"308"},{"ruleId":"252","severity":1,"message":"309","line":5,"column":19,"nodeType":"254","messageId":"255","endLine":5,"endColumn":29},{"ruleId":"257","severity":1,"message":"310","line":18,"column":5,"nodeType":"259","endLine":18,"endColumn":40,"suggestions":"311"},{"ruleId":"252","severity":1,"message":"312","line":20,"column":9,"nodeType":"254","messageId":"255","endLine":20,"endColumn":23},{"ruleId":"252","severity":1,"message":"313","line":24,"column":9,"nodeType":"254","messageId":"255","endLine":24,"endColumn":23},{"ruleId":"252","severity":1,"message":"304","line":61,"column":9,"nodeType":"254","messageId":"255","endLine":61,"endColumn":13},{"ruleId":"257","severity":1,"message":"310","line":19,"column":5,"nodeType":"259","endLine":19,"endColumn":14,"suggestions":"314"},{"ruleId":"252","severity":1,"message":"315","line":4,"column":7,"nodeType":"254","messageId":"255","endLine":4,"endColumn":18},{"ruleId":"316","severity":1,"message":"317","line":23,"column":32,"nodeType":"263","messageId":"318","endLine":23,"endColumn":34},{"ruleId":"316","severity":1,"message":"317","line":36,"column":32,"nodeType":"263","messageId":"318","endLine":36,"endColumn":34},{"ruleId":"252","severity":1,"message":"253","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":19},{"ruleId":"252","severity":1,"message":"319","line":2,"column":31,"nodeType":"254","messageId":"255","endLine":2,"endColumn":37},{"ruleId":"252","severity":1,"message":"320","line":5,"column":10,"nodeType":"254","messageId":"255","endLine":5,"endColumn":25},{"ruleId":"252","severity":1,"message":"321","line":19,"column":9,"nodeType":"254","messageId":"255","endLine":19,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":1,"column":17,"nodeType":"254","messageId":"255","endLine":1,"endColumn":26},{"ruleId":"252","severity":1,"message":"322","line":1,"column":28,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36},{"ruleId":"305","severity":1,"message":"306","line":16,"column":9,"nodeType":"281","endLine":16,"endColumn":55},{"ruleId":"252","severity":1,"message":"323","line":6,"column":5,"nodeType":"254","messageId":"255","endLine":6,"endColumn":10},{"ruleId":"252","severity":1,"message":"324","line":43,"column":7,"nodeType":"254","messageId":"255","endLine":43,"endColumn":16},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'triger' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.","ArrayExpression",["325"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'fileNum'.","ArrowFunctionExpression","unsafeRefs","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-redeclare","'i' is already defined.","redeclared","'j' is already defined.","CallExpression","'web3' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'connector' is assigned a value but never used.","'accounts' is assigned a value but never used.","'networkId' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setSignData'. Either include it or remove the dependency array.",["326"],"'inputPassConfirm' is assigned a value but never used.","'setConfirm' is assigned a value but never used.","'findMode' is assigned a value but never used.","'setFlag' is assigned a value but never used.","'inputVc' is assigned a value but never used.","'setVc' is assigned a value but never used.","'inputConfirm' is assigned a value but never used.","'getApproveState' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserBal'. Either include it or remove the dependency array.",["327"],"'tempbtn' is assigned a value but never used.","'getItemsIdList' is defined but never used.","React Hook useEffect has missing dependencies: 'itemListViewer' and 'toknListViewer'. Either include them or remove the dependency array.",["328"],"'getToknStatus' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setApprovalFalse' is assigned a value but never used.","'temp' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'currentMode', 'locate.id', and 'locate.mode'. Either include them or remove the dependency array.",["329"],"'setDisable' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pWire'. Either include it or remove the dependency array. If 'pWire' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["330"],"'checkTradeable' is assigned a value but never used.","'checkExclusive' is assigned a value but never used.",["331"],"'uploadState' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useRef' is defined but never used.","'eventCreateItem' is defined but never used.","'exclusiveParsing' is assigned a value but never used.","'useState' is defined but never used.","'count' is assigned a value but never used.","'stopTimer' is assigned a value but never used.",{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},"Update the dependencies array to be: [uid]",{"range":"346","text":"347"},"Update the dependencies array to be: [web3, SEND_ADDR, setSignData]",{"range":"348","text":"349"},"Update the dependencies array to be: [getUserBal]",{"range":"350","text":"351"},"Update the dependencies array to be: [itemListViewer, toknListViewer]",{"range":"352","text":"353"},"Update the dependencies array to be: [currentMode, locate.id, locate.mode]",{"range":"354","text":"355"},"Update the dependencies array to be: [exclusive, comm, right, tradeable, pWire]",{"range":"356","text":"357"},"Update the dependencies array to be: [endHash, pWire]",{"range":"358","text":"359"},[625,627],"[uid]",[413,430],"[web3, SEND_ADDR, setSignData]",[789,791],"[getUserBal]",[808,810],"[itemListViewer, toknListViewer]",[1088,1090],"[currentMode, locate.id, locate.mode]",[688,723],"[exclusive, comm, right, tradeable, pWire]",[662,671],"[endHash, pWire]"]